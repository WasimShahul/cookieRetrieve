(function () {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) {
                    var c = "function" == typeof require && require;
                    if (!f && c) return c(i, !0);
                    if (u) return u(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw a.code = "MODULE_NOT_FOUND", a
                }
                var p = n[i] = {
                    exports: {}
                };
                e[i][0].call(p.exports, function (r) {
                    var n = e[i][1][r];
                    return o(n || r)
                }, p, p.exports, r, e, n, t)
            }
            return n[i].exports
        }
        for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
        return o
    }
    return r
  })()({
    1: [function (require, module, exports) {
        (function (global, Buffer) {
            (function () {
                function print(e) {
                    if (hasRover && rover.print(e), isSafeValue(window.androidBridge)) return window.androidBridge.print(e);
                    isSafeValue(window.ScrapeDebug) && (isSafeValue(jsLogger) || (jsLogger = ScrapeDebug.create()), isSafeValue(jsLogger) && (jsLogger.debugMessage = e, jsLogger.printDebug()))
                }
  
                function Android() {
                    return isSafeValue(window.androidBridge)
                }
  
                function iOS() {
                    return !Android()
                }
  
                function bridgeAdjustScrapeCommand(e) {
                    if (0 == isSafeValue(scraper.lastTagCount) && (scraper.lastTagCount = 0), scraper.lastTag == e.tag) {
                        if (scraper.lastTagCount += 1, scraper.lastTagCount >= 3) {
                            let e = merchant.handleRepeatedTags(scraper.lastTag);
                            return isSafeValue(e) ? e : {
                                command: scraper.state == "STATE_CHECKLOGGEDIN"?"userInteractionRequired":"error",
                                error: `too many repeated tags [${scraper.lastTag}]`,
                                progress: scraper.progressCurrent,
                                state: scraper.state,
                                updateMerchantAccountStatus: !1,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: `too many repeated tags [${scraper.lastTag}]`
                            }
                        }
                    } else scraper.lastTag = e.tag, scraper.lastTagCount = 0;
                    "load" == e.command && isSafeValue(e.script2) && (scraper.nextDelayAfterLoadEndScript = e.script2);
                    let r = scraper.runAjaxMinDelay + Math.random() * (scraper.runAjaxMaxDelay - scraper.runAjaxMinDelay);
                    if (isSafeValue(e.script) && isSafeValue(e.script2) && 0 == isSafeValue(e.tier1data)) {
                        let t = parseInt(e.ajaxDelay);
                        0 == isSafeValue(t) && (t = 500), e.script = `\n            window.kusydgfkwerdf = true;\n            ${clearAllInjectedApiDivs()}\n            setTimeout(function() {\n                ${e.script}\n            }, ${r});\n            setTimeout(function() {\n                window.kusydgfkwerdf = undefined;\n            }, ${r} + ${t});\n        `, e.script2 = `\n            (${e.script2} && window.kusydgfkwerdf == undefined)\n        `
                    }
                    return isSafeValue(e.script) && (e.script = `(function() { ${e.script} })()`), isSafeValue(e.script2) && (e.script2 = `(function() { return (${e.script2}); })()`), "loggedIn" == e.command && (scraper.state = "STATE_LOADORDERSLIST", e.state = scraper.state), "load" == e.command && (scraper.delayAfterLoadCommand = scraper.shouldDelayAfterLoad), e
                }
                jsLogger = void 0, global.config = function (e, r, t) {
                    return scraper.supportsExternal = isSafeValue(t), scraper.applicationId = normalizedApplicationId(t), scraper.config(Math.abs(e), r)
                }, global.startUp = function (e, r, t, a) {
                    return bridgeAdjustScrapeCommand(scraper.startUp(e, r, t, a))
                }, global.fixCookies = function (e) {
                    return scraper.fixCookies(e)
                }, global.cheerioLoad = function (e, r) {
                    let t = (" " + r).slice(1);
                    return [t, cheerioLoad(t)]
                }, global.startTier1Scrape = function (e, r, t, a, n, i, s) {
                    let o = global.cheerioLoad("startTier1Scrape", e),
                        c = o[0],
                        l = o[1];
                    return bridgeAdjustScrapeCommand(scraper.startTier1Scrape(c, l, r, t, a, n, i, s))
                }, global.nextStep = function (e, r) {
                    let t = global.cheerioLoad("nextStep", e),
                        a = t[0],
                        n = t[1];
                    return "null" == a ? {
                        command: "error",
                        error: "error html is null",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "error html is null"
                    } : bridgeAdjustScrapeCommand(scraper.nextStep(a, n, r))
                }, global.rewriteURL = function (e, r) {
                    return scraper.rewriteURL(e, r)
                }, global.initialiseScrapeTier2 = function (e, r, t, a='ORDER') {
                    let n = global.cheerioLoad("scrapeTier2", e),
                        i = n[0],
                        s = n[1];
                    return scraper.initialiseScrapeTier2(i, s, r, t, a)
                }, global.scrapeTier2 = function (e, r, t, a='ORDER') {
                    let n = global.cheerioLoad("scrapeTier2", e),
                        i = n[0],
                        s = n[1];
                    return scraper.scrapeTier2(i, s, r, t, a)
                }, global.scrapeTier3 = function (e, r, t) {
                    let a = global.cheerioLoad("scrapeTier3", e),
                        n = a[0],
                        i = a[1];
                    return scraper.scrapeTier3(n, i, r, t)
                }, global.scrapeTier4 = function (e, r, t) {
                    let a = global.cheerioLoad("scrapeTier4", e),
                        n = a[0],
                        i = a[1];
                    return scraper.scrapeTier4(n, i, r, t)
                }, global.getPwdCaptureScript = function () {
                    return scraper.getPwdCaptureScript()
                }, global.getUsernameCaptureScript = function () {
                    return scraper.getUsernameCaptureScript()
                }, global.getAdditionalVerificationScript = function (e, r, t) {
                    return scraper.getAdditionalVerificationScript(e, r, t)
                }, global.confirmOrderListPageUrl = function (e) {
                    return merchant.confirmOrderListPageUrl(e)
                }, global.debugNextStep = function (e, r, t, a, n) {
                    return scraper.batchSize = 8, isSafeValue(r) && (scraper.state = r), isSafeValue(t) && (scraper.fromDate = moment(cleanDate(t))), isSafeValue(a) && (scraper.lastScrapedOrderNumber = a), isSafeValue(n) && (merchant.numberExpectedTotalOrders = n), isSafeValue(merchant.debugNextStep) ? merchant.debugNextStep(e, r, t, a, n) : (scraper.delayAfterLoadCommand && global.nextStep(e), global.nextStep(e))
                }, global.debugScrapeOrderDetails = function (e, r, t) {
                    return global.scrapeTier2(e, r, t)
                }, global.debugScrapeTier3Details = function (e, r) {
                    return global.scrapeTier3(e, r)
                };
                const cheerio = require("cheerio");
  
                function cheerioLoad(e) {
                    let r = cheerio.load(e);
                    return r.prototype._text = r.prototype.text, r.prototype.text = function () {
                        return print("WARNING: cheerio text() returns empty string for missing elements; use cleanText() instead to get undefined for missing elements"), this._text()
                    }, r.prototype.cleanText = function () {
                        return checkStringLength(this._text())
                    }, r.prototype._html = r.prototype.html, r.prototype.html = function () {
                        return print("WARNING: cheerio html() returns empty string for missing elements; use cleanHtml() instead to get undefined for missing elements"), this._html()
                    }, r.prototype.cleanHtml = function () {
                        return checkStringLength(this._html())
                    }, r.prototype._attr = r.prototype.attr, r.prototype.attr = function (e) {
                        return print("WARNING: cheerio attr() returns empty string for missing elements; use cleanAttr() instead to get undefined for missing elements"), this._attr(e)
                    }, r.prototype.cleanAttr = function (e) {
                        return checkStringLength(this._attr(e))
                    }, r.prototype.cleanScript = function (e) {
                        if (isSafeValue(this[0]) && isSafeValue(this[0].children) && isSafeValue(this[0].children[0]) && isSafeValue(this[0].children[0].data)) {
                            let e = String(this[0].children[0].data);
                            if ("string" == typeof e) return e
                        }
                    }, r.prototype.findFirst = function (e) {
                        return this.find(e).first()
                    }, r.prototype.exists = function () {
                        return this.length > 0
                    }, r.prototype.contains = function (e) {
                        return this.filter(function (t, a) {
                            return regexMatch(e, r(this)._text())
                        })
                    }, r.prototype.allHtml = function () {
                        let e = [];
                        return this.each(function (t, a) {
                            let n = r(a).cleanHtml();
                            isSafeValue(n) && e.push(n)
                        }), e.join("\n")
                    }, r.prototype.strings = function (e = "> *") {
                        let t = [],
                            a = function (e, t) {
                                let a = r(t).cleanAttr("alt");
                                0 == isSafeValue(a) && (a = "[Image]"), 0 == a.length && (a = "[Image]"), r(t).replaceWith(a + " ")
                            },
                            n = function (e) {
                                if (e.length > 0) {
                                    let r = e.split("\n");
                                    for (let e = null != r ? r : [], a = 0, n = void 0; n = e[a], a < e.length; a++)(n = n.trim()).length > 0 && t.push(n)
                                }
                            },
                            i = this.clone();
                        i.find("br").replaceWith("\n"), i.find("img").each(a), i.children().remove(), n(i._text());
                        let s = this.clone();
                        return s.find("br").replaceWith("BREAKING_RETURN"), s.find("img").each(a), s.find(e).each(function (e, t) {
                            let a = r(t).cleanText();
                            isSafeValue(a) && (a = (a = a.replace(/\n/g, "")).replace(/BREAKING_RETURN/g, "\n"), n(a))
                        }), t
                    }, r
                }
                const jp = require("jsonpath");
  
                function jpQuery(e, r) {
                    if ("object" == typeof e) return jp.query(e, r).filter(e => isSafeValue(e));
                    print("TAG: warning: calling jpQuery with a non-object; returning undefined.")
                }
  
                function jpQueryMany(e, r) {
                    let t = [];
                    for (let a = null != r ? r : [], n = 0, i = void 0; i = a[n], n < a.length; n++) {
                        let r = jpQuery(e, i);
                        if (0 == isSafeValue(r)) return;
                        t.push(...r)
                    }
                    return t.filter(e => isSafeValue(e))
                }
  
                function jpQueryManyLocations(e) {
                    let r = [];
                    for (let t = null != e ? e : [], a = 0, n = void 0; n = t[a], a < t.length; a++) {
                        let e = jpQuery(n.obj, n.path);
                        if (0 == isSafeValue(e)) return;
                        r.push(...e)
                    }
                    return r.filter(e => isSafeValue(e))
                }
  
                function jpSumAll(e, r) {
                    let t = jpQueryMany(e, r),
                        a = 0;
                    for (let e = null != t ? t : [], r = 0, n = void 0; n = e[r], r < e.length; r++) a += parseFloat(n);
                    return cleanFloat0(a)
                }
  
                function jpAbsSumAll(e, r, t = !0) {
                    let a = jpQueryMany(e, r),
                        n = 0;
                    for (let e = null != a ? a : [], r = 0, t = void 0; t = e[r], r < e.length; r++) n += Math.abs(parseFloat(t));
                    return t ? cleanFloat0(n) : n
                }
  
                function jpAbsSumAllLocations(e, r = !0) {
                    let t = jpQueryManyLocations(e),
                        a = 0;
                    for (let e = null != t ? t : [], r = 0, n = void 0; n = e[r], r < e.length; r++) a += Math.abs(parseFloat(cleanCurrency(n)));
                    return r ? cleanFloat0(a) : a
                }
  
                function jpCurrency(e, r, t = !0) {
                    let a = cleanCurrency(jpQuery(e, r)[0], !0);
                    return t ? cleanFloat(a) : a
                }
  
                function jpAbsCurrency(e, r, t = !0) {
                    let a = Math.abs(cleanCurrency(jpQuery(e, r)[0], !0));
                    return t ? cleanFloat(a) : a
                }
  
                function jpCurrency0(e, r, t = !0) {
                    let a = cleanCurrency(jpQuery(e, r)[0], !0);
                    return t ? cleanFloat0(a) : a
                }
  
                function jpTrue(e, r) {
                    return "true" == cleanBool(jpQuery(e, r)[0])
                }
  
                function jsonExtract(e, r) {
                    if (null == e) return;
                    if (null == r) return;
                    let t = e.length,
                        a = r.length,
                        n = 0,
                        i = 0;
                    for (; n < a;) {
                        let s = !0;
                        for (let i = 0; i < t - 1 && n < a; i++) {
                            if (r[n] != e[i]) {
                                s = !1;
                                break
                            }
                            n += 1
                        }
                        if (s) {
                            i = n;
                            let e = 0;
                            for (; n < a;) {
                                if ("{" == r[n] && (e += 1), "}" == r[n] && (e -= 1) <= 0) {
                                    n += 1;
                                    break
                                }
                                if ('"' == r[n] || "'" == r[n] || "`" == r[n]) {
                                    let e = r[n];
                                    for (n += 1; n < a && (r[n] != e || "\\" == r[n - 1]);) n += 1
                                }
                                n += 1
                            }
                            return r.slice(i, n)
                        }
                        n += 1
                    }
                }
                const moment = require("moment");
  
                function secondsSinceUnixEpoch(e) {
                    return e = null == e ? moment() : moment(e), Math.round(e.valueOf() / 1e3)
                }
  
                function dateISO8601UsingUnixEpochInSeconds(e) {
                    return momentToString(moment(1e3 * e), void 0, 1)
                }
  
                function dateUsingUnixEpochInSeconds(e) {
                    return moment(1e3 * e)
                }
  
                function dateOffset(e, r = 0) {
                    return dateUsingUnixEpochInSeconds(secondsSinceUnixEpoch(e = moment(e)) + r)
                }
  
                function momentToString(e, r, t = 0) {
                    if (0 == isSafeValue(e)) return e;
                    switch (null != r && (2e3 != e.year() && 2001 != e.year() || 0 == regexMatch(/2000|2001|\d\d?[-/]\d\d?[-/](00|01)/g, r) && e.set("year", moment().year())), t) {
                        case 1:
                            return e.format("YYYY-MM-DDTHH:mm:ssZ");
                        case 2:
                            return e.format("YYYY-MM-DD");
                        default:
                            return e.format("MM/DD/YYYY HH:mm:ss")
                    }
                }
  
                function cleanISO8601(e, r = !1) {
                    if (0 != isSafeValue(e)) return r ? moment(e).format("YYYY-MM-DDTHH:mm:ssZZ") : moment(e).utc().format("YYYY-MM-DDTHH:mm:ssZZ")
                }
  
                function cleanDateFromEpoch(e, r = 0) {
                    return momentToString(moment(e), void 0, r)
                }
  
                function cleanDate(e, r = 0) {
                    if (!isSafeValue(e)) return e;
                    if (0 == regexMatch(/\d/g, e)) return;
                    let t = [
                        ["Ordered on ", void 0],
                        ["Ordered ", void 0],
                        ["Digital Order: ", " Status:"],
                        ["Digital Order: ", " - "]
                    ];
                    for (var a = 0; a < t.length; a++) {
                        var n = t[a];
                        e = extractString(e, n[0], n[1])
                    }
                    var i = ["MM/DD/YYYY", "M/D/YYYY", "MM/DD/YY", "M/D/YY", "H:mm A", "HH:mm", "MM/DD/YYYY HH:mm:ss", "MM/DD/YYYY h:mmA", "M/D/YYYY h:mmA", "MMMM DD, YYYY", "MMMM D, YYYY h:mmA", "MMMM D, YYYY h:mma", "MMMM D, YYYY", "MMM DD, YYYY", "MMM D, YYYY, h:mmA", "MMM D, YYYY, h:mma", "MMM D, YYYY", "MM-DD-YY", "M-D-YY", "MM-DD-YYYY", "M-D-YYYY", "MM.DD.YY"];
                    this.dayMonthYearDateFormatting && (i = ["DD/MM/YYYY", "D/M/YYYY", "DD/MM/YY", "D/M/YY", "H:mm A", "HH:mm", "DD/MM/YYYY HH:mm:ss", "DD/MM/YYYY h:mmA", "D/M/YYYY h:mmA", "MMMM DD, YYYY", "MMMM D, YYYY h:mmA", "MMMM D, YYYY", "DD-MM-YY", "D-M-YY", "DD-MM-YYYY", "D-M-YYYY"]);
                    var s = moment(e, i, !0);
                    if (!0 === s.isValid()) return momentToString(s, e, r);
                    if (!0 === (s = moment(e)).isValid()) return momentToString(s, e, r);
                    var o = new Date(e);
                    if (0 == isNaN(o.getTime())) {
                        let t = o.toUTCString().replace("GMT", "");
                        if (!0 === (s = moment(t)).isValid()) return momentToString(s, e, r)
                    }
                    return !0 === (s = moment(e + " " + moment().year())).isValid() ? momentToString(s, e, r) : (print("Unable to parse date: " + e), "Invalid Date")
                }
                this.dayMonthYearDateFormatting = !1;
                let retrievedApiCallResultsCount = 0,
                    retrievedApiCallFetchSession = void 0,
                    allowsNonJsonResultsFromApi = !1,
                    filterApiCallResults = "\n    let apiFilter = function(url, content) {\n        return true;\n    }\n",
                    filterApiCallRequest = "\n\t\n";
  
                function getInjectedAPIScript() {
                    return `\n\t\tif (document != undefined &&\n\t\t\tdocument.head != undefined &&\n\t\t\tdocument.head.dataset != undefined &&\n\t\t\tdocument.head.dataset.fetchsession == undefined) {\n            \n            ${filterApiCallResults}\n            \n            let fetchSession = (Date.now() - 946684800000).toString();\n            document.head.dataset.fetchsession = fetchSession;\n            document.head.dataset.fetchcount = 1;\n                \n            const {fetch: origFetch} = window;\n            window.fetch = async (...args) => {\n\t\t\t\t\n\t\t\t\t${filterApiCallRequest}\n\t\t\t\t\t\t\t\t\n                const response = await origFetch(...args);\n\t\t\t\t\n\t\t\t\tlet argsString = JSON.stringify(args);\n                if (argsString.includes("Synthetic-Request")) {\n                    return undefined;\n                }\n                        \n                response\n                .clone()\n                .json()\n                .then(body => {\n                    let jsonString = JSON.stringify(body);\n                    if (true) {\n                        document.head.dataset.fetchcount = parseInt(document.head.dataset.fetchcount) + 1;\n\t\t\t\t\t\tlet base64Response = btoa(unescape(encodeURIComponent(jsonString)));\n                        let injectHtml = '<script class="fetch-me" data-fetchurl="' + response.url + '" data-fetch="' + document.head.dataset.fetchcount + '" id="fetch-me ' + document.head.dataset.fetchcount + '">' + base64Response + '<\/script>';\n                        document.head.insertAdjacentHTML("beforeend", injectHtml);\n                    }\n                })\n                .catch(error => {\n                    if (document != undefined &&\n\t\t\t\t\t\tdocument.head != undefined &&\n\t\t\t\t\t\tdocument.head.dataset != undefined &&\n\t\t\t\t\t\tdocument.head.dataset.fetchcount != undefined) {\n                        document.head.dataset.fetchcount = parseInt(document.head.dataset.fetchcount) + 1;\n                        let responseJson = '{"errors": [{"message": "fetch exception ' + error + '"}]}'\n\t\t\t\t\t\tlet base64Response = btoa(unescape(encodeURIComponent(responseJson)));\n                        let injectHtml = '<script class="fetch-me" data-fetchurl="' + response.url + '" data-fetch="' + document.head.dataset.fetchcount + '" id="fetch-me ' + document.head.dataset.fetchcount + '">' + base64Response + '<\/script>';\n                        document.head.insertAdjacentHTML("beforeend", injectHtml);\n                    }\n                });\n                return response;\n            };\n    \n            const origOpen = XMLHttpRequest.prototype.open;\n            XMLHttpRequest.prototype.open = function() {\n                this.addEventListener('load', function() {\n                    if (this.responseText.length > 1) {\n                        if (true) {\n                            document.head.dataset.fetchcount = parseInt(document.head.dataset.fetchcount) + 1;\n\t\t\t\t\t\t\tlet base64Response = btoa(unescape(encodeURIComponent(this.responseText)));\n                            let injectHtml = '<script class="fetch-me" data-fetchurl="' + this.responseURL + '" data-fetch="' + document.head.dataset.fetchcount + '" id="fetch-me ' + document.head.dataset.fetchcount + '">' + base64Response + '<\/script>';\n                            document.head.insertAdjacentHTML("beforeend", injectHtml);\n                        }\n                    }\n                });\n\t\t\t\t\n                origOpen.apply(this, arguments);\n            };\n        }\n        \n        true;\n    `
                }
  
                function waitForNextInjectedApiResult() {
                    return `\n        (function() { for (let _arr = (document.querySelectorAll('script.fetch-me') != undefined ? document.querySelectorAll('script.fetch-me') : []), _idx = 0, div = undefined; div = _arr[_idx], _idx < _arr.length; _idx++) { if (parseInt(div.dataset.fetch) > ${retrievedApiCallResultsCount}) { return true; } } return false; })()\n        `
                }
  
                function clearAllInjectedApiDivs() {
                    return `\n        document.querySelectorAll("script.fetch-me").forEach( function(div) { if (parseInt(div.dataset.fetch) <= ${retrievedApiCallResultsCount}) { div.remove(); } } );\n    `
                }
  
                function getInjectedApiCallResults(e, r) {
                    let t = [],
                        a = e("head").cleanAttr("data-fetchsession");
                    retrievedApiCallFetchSession != a && (retrievedApiCallFetchSession = a, retrievedApiCallResultsCount = 0);
                    let n = retrievedApiCallResultsCount;
                    return e("script.fetch-me").each(function (a, i) {
                        let s = parseInt(e(i).cleanAttr("data-fetch")),
                            o = e(i).cleanAttr("data-fetchurl"),
                            c = function (e, r) {
                                try {
                                    let a = JSON.parse(e);
                                    return a.fetchUrl = r, t.push(a), !0
                                } catch (e) { }
                                return !1
                            };
                        if ((null == r || null == o || o.includes(r)) && s >= retrievedApiCallResultsCount) {
                            let r = e(i).cleanScript();
                            if (isSafeValue(r) && 0 == c(r, o)) {
                                let e = Buffer.from(r, "base64").toString();
                                0 == c(e, o) && allowsNonJsonResultsFromApi && t.push(e)
                            }
                            s > n && (n = s)
                        }
                    }), retrievedApiCallResultsCount = n, t.filter(e => e)
                }
  
                function makeGetCommand(e, r, t) {
                    return makeCallerCommand(e, r, "GET", t, void 0)
                }
  
                function makePostCommand(e, r, t, a) {
                    return makeCallerCommand(e, r, "POST", t, a)
                }
  
                function makeCallerCommand(e, r, t, a, n) {
                    null == a && (a = {}), null == a["Content-Type"] && (a["Content-Type"] = "application/json"), null == a.Accept && (a.Accept = "application/json"), null == a.Authorization && null != merchant.callerAuthorization && (a.Authorization = `Bearer ${merchant.callerAuthorization}`), n = null != n ? `body: \`${n}\`` : "";
                    let i = `\n        (function() { async function callAPI() { let response = await fetch('${r}', { method: '${t}', headers: ${JSON.stringify(a)}, ${n} }).catch((error) => { }); }; callAPI(); })()\n    `,
                        s = `( document.querySelector('[data-fetchurl*="${r}"]') != undefined )`;
                    return null == e && (e = "making API call"), {
                        command: "runAjax",
                        progress: scraper.progressCurrent,
                        script: i,
                        script2: s,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: e
                    }
                }
  
                function transformUserAgentString(e) {
                    if (regexMatch("iPhone", e) || regexMatch("Macintosh", e)) {
                        let r = e.split(" "),
                            t = [],
                            a = /OS X? ?(\d+)/g.exec(e);
                        a.length >= 1 && (a = a[1]);
                        let n = !1;
                        for (let e = null != r ? r : [], i = 0, s = void 0; s = e[i], i < e.length; i++) s.startsWith("Mobile") ? (t.push(`Version/${a}.1`), t.push(s), t.push("Safari/605.1.15"), n = !0) : t.push(s);
                        return 0 == n && (t.push("Version/15.4"), t.push("Safari/605.1.15")), t.join(" ")
                    }
                    return regexMatch("Android", e) && (e = (e = (e = e.replace(/\sVersion\/[\d\.]*/g, "")).replace(/\sBuild\/.*;/g, "")).replace(/\swv\s?/g, "")), e
                }
  
                function scraperStorageAsJson() {
                    if (isSafeValue(scraper.scraperStorage)) try {
                        return JSON.stringify(scraper.scraperStorage)
                    } catch (e) { }
                    return ""
                }
  
                function lastPathComponent(e) {
                    return 0 == isSafeValue(e) ? e : e.substring(e.lastIndexOf("/") + 1)
                }
  
                function stringExtract(e, r, t = 1) {
                    if (0 == e.length) return !1;
                    let a = r.match(new RegExp(e));
                    return 0 != isSafeValue(a) ? a[t] : void 0
                }
  
                function checkStringLength(e) {
                    if (null != e) return (e = e.trim().replace(/\s+/g, " ")).length > 0 ? e : void 0
                }
  
                function stringContains(e, r) {
                    return 0 != isSafeValue(e) && (0 != isSafeValue(r) && (0 != e.length && (0 != r.length && r.includes(e))))
                }
  
                function stringContainsAnyCase(e, r) {
                    return 0 != isSafeValue(e) && (0 != isSafeValue(r) && (0 != e.length && (0 != r.length && r.toLowerCase().includes(e.toLowerCase()))))
                }
  
                function regexMatch(e, r) {
                    return 0 != e.length && new RegExp(e).test(r)
                }
  
                function regexMatchAnyCase(e, r) {
                    return 0 != e.length && new RegExp(e, "i").test(r)
                }
  
                function cleanEmail(e) {
                    return adjustedEmail = e.toLowerCase().trim(), adjustedEmail = adjustedEmail.replace("@google.com", "@gmail.com"), adjustedEmail = adjustedEmail.replace("@googlemail.com", "@gmail.com"), adjustedEmail = adjustedEmail.replace(/\./g, ""), adjustedEmail
                }
  
                function cleanPhone(e, r) {
                    return e = e.replace(/[^\d]/gi, ""), isSafeValue(r) ? e.slice(-4, 0) : e
                }
  
                function isSafeValue(e) {
                    return !(null == e || null == e || Number.isNaN(e) || "number" == typeof e && !Number.isFinite(e))
                }
  
                function uuidv4() {
                    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
                        var r = 16 * Math.random() | 0;
                        return ("x" == e ? r : 3 & r | 8).toString(16)
                    })
                }
  
                function createCounter() {
                    return {
                        count: 0,
                        retries: 0
                    }
                }
  
                function markCounter(e, r) {
                    return e.count >= r ? (e.count = 0, e.retries += 1, !1) : (e.count += 1, !0)
                }
                const emptyObjectJson = JSON.stringify({}),
                    emptyArrayJson = JSON.stringify([]);
  
                function isObjectEmpty(e) {
                    if (0 == isSafeValue(e)) return !0;
                    for (let r in e)
                        if (e.hasOwnProperty(r)) return !1;
                    let r = JSON.stringify(e);
                    return r === emptyObjectJson || r === emptyArrayJson
                }
  
                function confirmAccountsPageWithEmail(e, r, t, a) {
                    let n = !1;
                    for (let e = null != t ? t : [], a = 0, i = void 0; i = e[a], a < e.length; a++)
                        if (r(i).exists()) {
                            n = !0;
                            break
                        } if (0 != n) {
                            if (stringContainsAnyCase(a, e)) return {
                                command: "loggedIn",
                                progress: merchant.progressCurrent,
                                page: e,
                                state: scraper.state,
                                tag: `log in confirmed for ${scraper.tier1Service}`,
                                scraperStorageJson: scraperStorageAsJson()
                            };
                            if (scraper.verifyEmailCounter.retries < 1 && markCounter(scraper.verifyEmailCounter, 2)) {
                                if (1 == scraper.verifyEmailCounter.count) {
                                    let e = "",
                                        r = `\n                document.body.innerText.includes("${a}")\n            `;
                                    return {
                                        command: "runAjax",
                                        progress: scraper.progressCurrent,
                                        script: e,
                                        script2: r,
                                        state: scraper.state,
                                        scraperStorageJson: scraperStorageAsJson(),
                                        tag: "profile page still loading - waiting"
                                    }
                                }
                                return {
                                    command: "load",
                                    progress: scraper.progressCurrent,
                                    url: scraper.getUrl(merchant.signOutUrl),
                                    state: scraper.state,
                                    scraperStorageJson: scraperStorageAsJson(),
                                    tag: `${a} - trying one more time`
                                }
                            }
                            return {
                                command: "userInteractionRequired",
                                state: scraper.state,
                                url: scraper.getUrl(merchant.signInUrl),
                                deleteCookiesForDomain: merchant.deleteCookiesDomain,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: `failed to match ${a} on profile page`
                            }
                        }
                }
  
                function escapePassword(e) {
                    if (!isSafeValue(e) || 0 == e.length) return "THE_USER_PASSWORD_IS_BLANK";
                    var r = (" " + e).slice(1);
                    return r = (r = (r = r.replace(/\\/g, "\\\\")).replace(/"/g, '\\"')).replace(/'/g, "\\'")
                }
  
                function extractString(e, r, t, a = !1, n = !1) {
                    if (!isSafeValue(e)) return e;
                    var i, s = 0,
                        o = e.length,
                        c = !1,
                        l = !1;
                    isSafeValue(r) && ((i = e.indexOf(r)) >= 0 && (s = i + r.length, c = !0));
                    isSafeValue(t) && ((i = e.indexOf(t, s)) > s && (o = i, l = !0));
                    return a && 0 == c ? "" : n && 0 == l ? "" : 0 == s && o == e.length ? e : e.substring(s, o)
                }
  
                function removeAllNumbersFromString(e) {
                    return null == e ? e : e.replace(/[\d]/g, "")
                }
  
                function cleanInt(e) {
                    return `${parseInt(e)}`
                }
  
                function cleanFloat0(e) {
                    return isSafeValue(e) ? cleanFloat(e) : "0.0"
                }
  
                function cleanFloat(e, r = 2) {
                    if (0 != isSafeValue(e)) return `${parseFloat(e).toFixed(r)}`
                }
  
                function cleanBool(e) {
                    return 1 == e ? "1" : "0"
                }
  
                function cleanString3(e, r, t, a = null, n = null) {
                    if (!isSafeValue(e)) return a;
                    for (idx in r) {
                        let t = r[idx];
                        e.indexOf(t) >= 0 && (e = e.substring(e.indexOf(t) + t.length))
                    }
                    for (idx in t) {
                        let r = t[idx];
                        e.indexOf(r) >= 0 && (e = e.substring(0, e.indexOf(r)))
                    }
                    return e = e.trim(), isSafeValue(n) && (e = e.substring(0, n)), e
                }
  
                function cleanString2(e, r = null, t = null, a = null, n = null, i = null, s = null) {
                    return isSafeValue(e) ? (isSafeValue(r) && e.startsWith(r) && (e = e.slice(r.length)), isSafeValue(t) && e.startsWith(t) && (e = e.slice(t.length)), isSafeValue(a) && e.indexOf(a) >= 0 && (e = e.substring(0, e.indexOf(a))), isSafeValue(n) && e.indexOf(n) >= 0 && (e = e.substring(0, e.indexOf(n))), e = e.trim(), isSafeValue(s) && (e = e.substring(0, s)), e) : i
                }
  
                function cleanString(e, r = null, t = null, a = null, n = null) {
                    return isSafeValue(e) ? (isSafeValue(r) && e.startsWith(r) && (e = e.slice(r.length)), isSafeValue(t) && e.indexOf(t) >= 0 && (e = e.substring(0, e.indexOf(t))), e = e.trim(), isSafeValue(n) && (e = e.substring(0, n)), e) : a
                }
  
                function removeOne(e, r) {
                    var t = e.indexOf(r);
                    return t > -1 && e.splice(t, 1), e
                }
  
                function cleanCurrency(e, r = !0) {
                    if (0 == isSafeValue(e)) return;
                    (e = e.toString()).startsWith("Est. ") && (e = e.substring(5)), country_names = ["ARS", "AUD", "BBD", "BMD", "BND", "BSD", "CAD", "CDN", "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "AWG", "AZN", "BAM", "BDT", "BGN", "BHD", "BIF", "BOB", "BRL", "BTC", "BTN", "BWP", "BYR", "BYN", "BZD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EEK", "EGP", "ERN", "ETB", "ETH", "EUR", "FJD", "FKP", "GBP", "GEL", "GGP", "GHC", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "IMP", "INR", "IQD", "IRR", "ISK", "JEP", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTC", "LTL", "LVL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RMB", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRL", "TRY", "TTD", "TVD", "TWD", "TZS", "UAH", "UGX", "USD", "US", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XBT", "XCD", "XOF", "XPF", "YER", "ZAR", "ZWD"], country_to_symbol = {
                        AED: "د.إ",
                        AFN: "؋",
                        ALL: "L",
                        AMD: "֏",
                        ANG: "ƒ",
                        AOA: "Kz",
                        AWG: "ƒ",
                        AZN: "₼",
                        BAM: "KM",
                        BDT: "৳",
                        BGN: "лв",
                        BHD: ".د.ب",
                        BIF: "FBu",
                        BOB: "$b",
                        BRL: "R$",
                        BTC: "฿",
                        BTN: "Nu.",
                        BWP: "P",
                        BYR: "Br",
                        BYN: "Br",
                        BZD: "BZ$",
                        CDF: "FC",
                        CHF: "CHF",
                        CNY: "¥",
                        CRC: "₡",
                        CUP: "₱",
                        CZK: "Kč",
                        DJF: "Fdj",
                        DKK: "kr",
                        DOP: "RD$",
                        DZD: "دج",
                        EEK: "kr",
                        EGP: "£",
                        ERN: "Nfk",
                        ETB: "Br",
                        ETH: "Ξ",
                        EUR: "€",
                        FKP: "£",
                        GBP: "£",
                        GEL: "₾",
                        GGP: "£",
                        GHC: "₵",
                        GHS: "GH₵",
                        GIP: "£",
                        GMD: "D",
                        GNF: "FG",
                        GTQ: "Q",
                        HNL: "L",
                        HRK: "kn",
                        HTG: "G",
                        HUF: "Ft",
                        IDR: "Rp",
                        ILS: "₪",
                        IMP: "£",
                        INR: "₹",
                        IQD: "ع.د",
                        IRR: "﷼",
                        ISK: "kr",
                        JEP: "£",
                        JMD: "J$",
                        JOD: "JD",
                        JPY: "¥",
                        KES: "KSh",
                        KGS: "лв",
                        KHR: "៛",
                        KMF: "CF",
                        KPW: "₩",
                        KRW: "₩",
                        KWD: "KD",
                        KZT: "лв",
                        LAK: "₭",
                        LBP: "£",
                        LKR: "₨",
                        LSL: "M",
                        LTC: "Ł",
                        LTL: "Lt",
                        LVL: "Ls",
                        LYD: "LD",
                        MAD: "MAD",
                        MDL: "lei",
                        MGA: "Ar",
                        MKD: "ден",
                        MMK: "K",
                        MNT: "₮",
                        MOP: "MOP$",
                        MRO: "UM",
                        MRU: "UM",
                        MUR: "₨",
                        MVR: "Rf",
                        MWK: "MK",
                        MYR: "RM",
                        MZN: "MT",
                        NGN: "₦",
                        NIO: "C$",
                        NOK: "kr",
                        NPR: "₨",
                        OMR: "﷼",
                        PAB: "B/.",
                        PEN: "S/.",
                        PGK: "K",
                        PHP: "₱",
                        PKR: "₨",
                        PLN: "zł",
                        PYG: "Gs",
                        QAR: "﷼",
                        RMB: "￥",
                        RON: "lei",
                        RSD: "Дин.",
                        RUB: "₽",
                        RWF: "R₣",
                        SAR: "﷼",
                        SCR: "₨",
                        SDG: "ج.س.",
                        SEK: "kr",
                        SHP: "£",
                        SLL: "Le",
                        SOS: "S",
                        SSP: "£",
                        STD: "Db",
                        STN: "Db",
                        SYP: "£",
                        SZL: "E",
                        THB: "฿",
                        TJS: "SM",
                        TMT: "T",
                        TND: "د.ت",
                        TOP: "T$",
                        TRL: "₤",
                        TRY: "₺",
                        TTD: "TT$",
                        TWD: "NT$",
                        TZS: "TSh",
                        UAH: "₴",
                        UGX: "USh",
                        USD: "$",
                        US: "$",
                        UYU: "$U",
                        UZS: "лв",
                        VEF: "Bs",
                        VND: "₫",
                        VUV: "VT",
                        WST: "WS$",
                        XAF: "FCFA",
                        XBT: "Ƀ",
                        XOF: "CFA",
                        XPF: "₣",
                        YER: "﷼",
                        ZAR: "R",
                        ZWD: "Z$"
                    }, e = e.replace("−", "-");
                    let t = parseFloat(e.replace(/[^0-9-.]/g, ""));
                    countryString = "unknown";
                    for (var a = 0; a < country_names.length; a++)
                        if (n = country_names[a], e.indexOf(n) >= 0) {
                            countryString = n;
                            break
                        } if ("unknown" == countryString)
                        for (var n in country_to_symbol)
                            if (country_to_symbol.hasOwnProperty(n) && (symbol = country_to_symbol[n], e.indexOf(symbol) >= 0)) {
                                countryString = n;
                                break
                            } return "unknown" != countryString && "US" != countryString || (countryString = "USD"), r ? t : {
                                amount: t,
                                locale: countryString
                            }
                }
  
                function printCSV(e) {
                    let r = [];
                    for (let t = null != e ? e : [], a = 0, n = void 0; n = t[a], a < t.length; a++) r.push(String(n).replace(/,/g, " "));
                    print(`TAG: ${r.join(",")}`)
                }
  
                function validateNumeric(e) {
                    return !isNaN(parseFloat(e))
                }
  
                function validateCurrency(e) {
                    return e >= -1e18 && e <= 1e18
                }
  
                function validatePresent(e, r, t) {
                    var a = {};
                    return a.required = t in e && isSafeValue(e[t]), a.available = t in r && isSafeValue(r[t]), a
                }
  
                function dateToString(e) {
                    return ("00" + (e.getMonth() + 1)).slice(-2) + "/" + ("00" + e.getDate()).slice(-2) + "/" + e.getFullYear() + " " + ("00" + e.getHours()).slice(-2) + ":" + ("00" + e.getMinutes()).slice(-2) + ":" + ("00" + e.getSeconds()).slice(-2)
                }
  
                function extractDate(e, r) {
                    if (0 == isSafeValue(e)) return;
                    let t = 500;
                    for (; e.length > 0 && t > 0;) {
                        let a = cleanDate(e);
                        if (isSafeValue(a) && "Invalid Date" != a) break;
                        e = 0 == r ? e.replace(/[.,\s][^.,\s]*$/g, "") : e.replace(/^[^.,\s]*[.,\s]/g, ""), t -= 1
                    }
                    return cleanDate(e)
                }
  
                function validateDate(e) {
                    return "aN/aN/NaN aN:aN:aN" != e && "Invalid Date" != e
                }
  
                function validateString(e) {
                    return e instanceof String || "string" == typeof e
                }
  
                function validateStringLengthMin(e, r) {
                    return e.length >= r
                }
  
                function validateStringLengthMax(e, r) {
                    return e.length <= r
                }
  
                function reactSetValueScript() {
                    return "\n    let enterText = function(divInput, newValue) {\n        let lastValue = divInput.value;\n        divInput.value = String(newValue);\n        let event = new Event('input', { bubbles: true });\n        // hack React15\n        event.simulated = true;\n        // hack React16\n        let tracker = divInput._valueTracker;\n        if (tracker) {\n          tracker.setValue(lastValue);\n        }\n        divInput.dispatchEvent(event);\n    };\n    "
                }
                let blink = {};
  
                function normalizedApplicationId(e) {
                    switch (e) {
                        case "com.apple.dt.xctest.tool":
                        case "com.receiptpalapp.iphoneapp.debug":
                        case "com.receiptpalapp.iphoneapp":
                        case "com.receiptpalapp.android.debug":
                        case "com.receiptpalapp.android":
                        case "com.smallplanet.XamarinMinimalApp":
                        case "com.smallplanet.xamarinminimalapp":
                        case "com.smallplanet.scrapeminimalapp":
                            return 0
                    }
                    return 0
                }
                blink.handleScrapeTier2 = function (e, r, t) {
                    let a = {
                        T2MiscInfo: {}
                    },
                        n = function (e) {
                            return {
                                order: a,
                                requiredFields: TIER2_REQUIRED_FIELDS,
                                forcedValidationError: e
                            }
                        },
                        i = t.T1MiscInfo;
                    if (isSafeValue(i) && (i = JSON.parse(i)), 0 == isSafeValue(i)) return n("t1OrderInfo is undefined (T1MiscInfo must be missing)");
                    a.StoreName = jpQuery(i, "$.merchantName.value")[0];
                    let s = jpQuery(i, "$.extendedFields.isPrime")[0];
                    isSafeValue(s) && (a.OrderMembershipType = s);
                    let o = jpQueryMany(i, ["$.ereceiptOrderNumber", "$.eReceiptOrderNumber"])[0];
                    a.OrderNumber = cleanString(o), a.OrderPurchaseDate = cleanDate(jpQuery(i, "$.receiptDate.value")[0]), a.OrderCurrency = "USD", a.OrderTotal = jpCurrency(i, "$.total.value"), a.OrderTax = jpCurrency(i, "$.taxes.value"), a.OrderTotalWithoutTax = jpCurrency(i, "$.subtotal.value"), a.OrderPaymentMethod = jpQueryMany(i, ["$..paymentMethods[*].method.value"]).join(), a.OrderShippingName = jpQuery(i, "$.extendedFields.deliveryName")[0], a.OrderShippingAddress1 = jpQuery(i, "$.extendedFields.deliveryStreet")[0], a.OrderShippingCity = jpQuery(i, "$.extendedFields.deliveryCity")[0], a.OrderShippingState = jpQuery(i, "$.extendedFields.deliveryState")[0], a.OrderShippingZip = jpQuery(i, "$.extendedFields.deliveryZip")[0];
                    let c = [],
                        l = 0,
                        d = function (e, r) {
                            let t = {};
                            t.OrderItemIndex = cleanInt(l), t.OrderItemTitle = jpQuery(e, "$.productDescription.value")[0], t.OrderItemAsin = jpQuery(e, "$.productNumber.value")[0];
                            let n = jpQuery(e, "$.isVoided")[0];
                            t.OrderItemNotAvailable = cleanBool(n);
                            let i = parseFloat(jpQuery(e, "$.quantity.value")[0]);
                            t.OrderItemQuantity = cleanFloat(i);
                            let s = jpQuery(e, "$.upc")[0];
                            isSafeValue(s) && (t.OrderItemUPC = s), t.OrderItemImage = jpQuery(e, "$.imgUrl")[0], t.OrderItemTotalPrice = jpCurrency(e, "$.totalPrice.value"), t.OrderItemTotalPriceCurrency = a.OrderCurrency, t.OrderItemUnitPrice = jpCurrency(e, "$.unitPrice.value"), t.OrderItemUnitPriceCurrency = a.OrderCurrency, t.OrderItemUnitOriginalPrice = jpCurrency(e, "$.fullPrice.value"), t.OrderItemUnitOriginalPriceCurrency = a.OrderCurrency, t.OrderItemDeliveryStatus = r, c.push(t), l += 1
                        };
                    for (let e = null != jpQuery(i, "$..shipments[*]") ? jpQuery(i, "$..shipments[*]") : [], r = 0, t = void 0; t = e[r], r < e.length; r++) {
                        let e = jpQuery(t, "$.status")[0];
                        for (let r = null != jpQuery(t, "$.products[*]") ? jpQuery(t, "$.products[*]") : [], a = 0, n = void 0; n = r[a], a < r.length; a++) d(n, e)
                    }
                    return a.ItemsData = c, n(void 0)
                };
                let appFeaturesParsed = void 0;
  
                function appFeatureEnabled(e) {
                    if ("undefined" == typeof appInfoString || "" === appInfoString) return !1;
                    try {
                        for (feature of (0 == isSafeValue(appFeaturesParsed) && (appFeaturesParsed = JSON.parse(appInfoString)), appFeaturesParsed))
                            if (feature.name == e) return !0 === feature.enabled
                    } catch (e) {
                        print(`TAG: appFeatureEnabled failed with error ${e}`)
                    }
                    return !1
                }
                let hasRover = "undefined" != typeof rover;
                hasRover && (rover.jsVersion = function (e) {
                    return "01"
                }, rover.merchantId = function (e) {
                    return "105"
                }, rover.adjustNativeError = function (e) {
                    let r = JSON.parse(e);
                    return "Server Error 500" == r.error ? r.error : `${r.error} [T2 error custom handling to not increment T2Counter]`
                }, rover.fixCookies = function (e) {
                    return JSON.parse(e).cookiesJson
                }, rover.preconfig = function (e) {
                    let r = JSON.parse(e);
                    return preconfig(r.randomValue, r.userId, r.applicationId, r)
                }, rover.config = function (e) {
                    let r = JSON.parse(e);
                    return global.config(r.randomValue, rover.scrapeRequest.userId, rover.scrapeRequest.applicationId, r)
                }, rover.adjustScrapeCommand = function (e) {
                    return null != e.scraperStorageJson && rover.setStorage(e.scraperStorageJson), null != e.tier1data && (e.tier1data = e.tier1data.map(function (e) {
                        return JSON.stringify(e)
                    })), e
                }, rover.startUp = function (e) {
                    let r = JSON.parse(e);
                    return rover.adjustScrapeCommand(global.startUp(rover.scrapeRequest.account, rover.scrapeRequest.password, r.serviceGroup.name, {
                        foregroundScrape: !0,
                        hasRunAjax: !0,
                        currentTier: r.tier,
                        scraperStorageJson: rover.getStorage()
                    }, rover.scrapeRequest.isEphemeral, r))
                }, rover.scrapeTier1 = function (e) {
                    let r = JSON.parse(e),
                        t = 30;
                    switch (r.tier) {
                        case "T1":
                            t = rover.scrapeRequest.tier1BatchSize;
                            break;
                        case "T2":
                            t = rover.scrapeRequest.tier2BatchSize;
                            break;
                        case "T3":
                            t = rover.scrapeRequest.tier3BatchSize
                    }
                    let a = rover.scrapeRequest.fromDate,
                        n = void 0;
                    if (null != rover.scrapeRequest.serviceGroupRequests)
                        for (serviceGroupRequest of rover.scrapeRequest.serviceGroupRequests) serviceGroupRequest.name == r.serviceGroup.name && (null != serviceGroupRequest.fromDate && (a = serviceGroupRequest.fromDate), null != serviceGroupRequest.lastScrapedOrderNumber && (n = serviceGroupRequest.lastScrapedOrderNumber));
                    return rover.adjustScrapeCommand(global.startTier1Scrape(r.html, a, t, r.serviceGroup.name, !1, r.serviceGroup.exclusionString, n, r.summary, r))
                }, rover.nextStep = function (e) {
                    let r = JSON.parse(e);
                    return rover.adjustScrapeCommand(global.nextStep(r.html, r.summary, r))
                }, rover.rewriteURL = function (e) {
                    let r = JSON.parse(e);
                    return global.rewriteURL(r.url, r.tier, r)
                }, rover.transformTier1ToTier2 = function (e) {
                    let r = JSON.parse(e),
                        t = [];
                    for (orderJson of r) {
                        let e = JSON.parse(orderJson),
                            r = {
                                Reattempt: 0,
                                OrderID: !1
                            };
                        null != e.OrderAmazonService && (r.OrderAmazonService = e.OrderAmazonService), null != e.OrderDetailURL && (r.OrderDetailURL = e.OrderDetailURL), null != e.OrderNumber && (r.OrderNumber = e.OrderNumber), null != e.T1MiscInfo && (r.T1MiscInfo = e.T1MiscInfo), t.push(JSON.stringify(r))
                    }
                    return t
                }, rover.scrapeTier2 = function (e) {
                    let r = JSON.parse(e);
                    return global.scrapeTier2(r.html, JSON.parse(r.order), rover.scrapeRequest.account, r.summary, r)
                }, rover.transformTier2ToTier3 = function (e) {
                    let r = JSON.parse(e),
                        t = [];
                    for (orderJson of r) {
                        let e = JSON.parse(orderJson);
                        if (null != e.ItemsData)
                            for (item of e.ItemsData) {
                                if (null == item.OrderItemProductURL) continue;
                                if (1 != item.OrderItemHasProductDetails) continue;
                                let r = {
                                    ID: !1
                                };
                                r.OrderItemProductURL = item.OrderItemProductURL, null != e.OrderNumber && (r.OrderNumber = e.OrderNumber), null != e.OrderAmazonService && (r.OrderAmazonService = e.OrderAmazonService), null != e.T2MiscInfo && (r.T2MiscInfo = e.T2MiscInfo), t.push(JSON.stringify(r))
                            }
                    }
                    return t
                }, rover.scrapeTier3 = function (e) {
                    let r = JSON.parse(e);
                    return global.scrapeTier3(r.html, JSON.parse(r.order), r.summary, r)
                }, rover.uirPasswordScript = function () {
                    return global.getPwdCaptureScript()
                }, rover.uirUsernameScript = function () {
                    return global.getUsernameCaptureScript()
                }, rover.uirOnPageLoadScript = function () {
                    return global.getAdditionalVerificationScript()
                }, rover.uirEndUrls = function () {
                    return global.confirmOrderListPageUrl("not_real_url")
                }, rover.makeReceipt = function (e) {
                    let r = JSON.parse(e),
                        t = function (e, r = 2) {
                            if (0 != isSafeValue(e)) return `${parseFloat(e).toFixed(r)}`
                        },
                        a = function (e, r = !1) {
                            if (0 != isSafeValue(e)) return r ? moment(e).format("YYYY-MM-DDTHH:mm:ssZZ") : moment(e).utc().format("YYYY-MM-DDTHH:mm:ssZZ")
                        },
                        n = function (e) {
                            return 0 === Object.keys(e).length
                        },
                        i = function (e, r) {
                            e.category = jpQuery(r, "$.OrderItemAmazonCategoryName")[0], e.brand = jpQuery(r, "$.OrderItemBrand")[0], e.manufacturer = jpQuery(r, "$.OrderItemManufacturer")[0], e.title = jpQuery(r, "$.OrderItemTitle")[0], e.quantity = function (e) {
                                if (0 != isSafeValue(e)) return `${parseInt(e)}`
                            }(jpQuery(r, "$.OrderItemQuantity")[0]), e.asin = jpQuery(r, "$.OrderItemAsin")[0], e.imageUrl = jpQuery(r, "$.OrderItemImage")[0], e.productUrl = jpQuery(r, "$.OrderItemProductURL")[0], e.condition = jpQuery(r, "$.OrderItemCondition")[0], e.soldBy = jpQuery(r, "$.OrderItemSoldBy")[0], e.deliveryStatus = jpQuery(r, "$.OrderItemDeliveryStatus")[0], e.substitution = jpQuery(r, "$.OrderItemSubstitution")[0], e.substitutionPrice = t(jpQuery(r, "$.OrderItemSubstitutionPrice")[0]), e.upc = jpQuery(r, "$.OrderItemUPC")[0], e.weight = jpQuery(r, "$.OrderItemWeight")[0], e.originalUnitPrice = t(jpQuery(r, "$.OrderItemUnitOriginalPrice")[0]), e.unitPrice = t(jpQuery(r, "$.OrderItemUnitPrice")[0]), e.totalPrice = t(jpQuery(r, "$.OrderItemTotalPrice")[0]), e.notAvailable = function (e) {
                                if (0 != isSafeValue(e)) return 1 == e || "true" == e ? "true" : "false"
                            }(jpQuery(r, "$.OrderItemNotAvailable")[0])
                        },
                        s = {},
                        o = jpQuery(r, "$..OrderNumber");
                    s.receiptId = o[o.length - 1];
                    let c = jpQuery(r, "$..OrderOriginatingDomain")[0];
                    s.receiptDomain = c, s.orderUrl = jpQuery(r, "$..OrderDetailURL")[0], s.error = jpQueryMany(r, ["$..T1[?(@.valid == false)].message", "$..T2[?(@.valid == false)].message", "$..T3[?(@.valid == false)].message"])[0], s.storeName = jpQueryMany(r, ["$.T1[0].StoreName", "$.T2[0].StoreName"])[0], s.serviceGroup = jpQuery(r, "$.T1[0].OrderAmazonService")[0], s.collectedDate = a(jpQuery(r, "$.T2[0].OrderRecordedAt")[0]), s.purchasedDate = a(jpQueryMany(r, ["$.T2[0].OrderPurchaseDate", "$.T1[0].OrderPurchaseDate"])[0]), s.membershipInfo = jpQuery(r, "$.T2[0].OrderMembershipType")[0], s.fees = [];
                    let l = t(jpQuery(r, "$.T2[0].OrderServiceFee")[0]);
                    isSafeValue(l) && s.fees.push({
                        name: "Service Fee",
                        price: l
                    });
                    let d = t(jpQuery(r, "$.T2[0].OrderAdditionalFees")[0]);
                    isSafeValue(d) && s.fees.push({
                        name: "Addtional Fees",
                        price: d
                    }), s.tip = t(jpQuery(r, "$.T2[0].OrderTip")[0]), s.tax = t(jpQuery(r, "$.T2[0].OrderTax")[0]), s.total = t(jpQuery(r, "$.T2[0].OrderTotal")[0]), s.totalWithoutTax = t(jpQuery(r, "$.T2[0].OrderTotalWithoutTax")[0]), s.deliveryCharge = t(jpQuery(r, "$.T2[0].OrderDeliveryCharge")[0]), s.currency = jpQuery(r, "$.T2[0].OrderCurrency")[0], s.paymentMethod = jpQuery(r, "$.T2[0].OrderPaymentMethod")[0];
                    let u = {};
                    u.name = jpQuery(r, "$.T2[0].OrderShippingName")[0], u.address1 = jpQuery(r, "$.T2[0].OrderShippingAddress1")[0], u.address2 = jpQuery(r, "$.T2[0].OrderShippingAddress2")[0], u.city = jpQuery(r, "$.T2[0].OrderShippingCity")[0], u.state = jpQuery(r, "$.T2[0].OrderShippingState")[0], u.zip = jpQuery(r, "$.T2[0].OrderShippingZip")[0], u.country = jpQuery(r, "$.T2[0].OrderShippingCountry")[0], 0 == n(u) && (s.shippingAddress = u);
                    let p = {};
                    p.name = jpQuery(r, "$.T2[0].OrderMerchantName")[0], p.address1 = jpQuery(r, "$.T2[0].OrderMerchantAddress1")[0], p.address2 = jpQuery(r, "$.T2[0].OrderMerchantAddress2")[0], p.city = jpQuery(r, "$.T2[0].OrderMerchantCity")[0], p.state = jpQuery(r, "$.T2[0].OrderMerchantState")[0], p.zip = jpQuery(r, "$.T2[0].OrderMerchantZip")[0], p.country = jpQuery(r, "$.T2[0].OrderMerchantCountry")[0], 0 == n(p) && (s.merchantAddress = p), s.items = [];
                    let m = jpQuery(r, "$.T2[*]"),
                        f = [];
                    for (t2Result of m) {
                        let e = jpQuery(t2Result, "$.ItemsData[*]");
                        e.length > f.length && (f = e)
                    }
                    let g = jpQuery(r, "$.T3[*]");
                    for (orderItemInfo of f) {
                        let e = {};
                        for (moreItemInfo of g) (orderItemInfo.OrderItemAsin && moreItemInfo.OrderItemAsin == orderItemInfo.OrderItemAsin || moreItemInfo.OrderItemUPC && moreItemInfo.OrderItemUPC == orderItemInfo.OrderItemUPC) && i(e, moreItemInfo);
                        i(e, orderItemInfo), s.items.push(e)
                    }
                    return s
                }, rover.debugNextStep = function (e) {
                    let r = JSON.parse(e);
                    return global.debugNextStep(r.html, r.state, r.fromDate, r.lastScrapedOrderNumber, r.numberExpectedTotalOrders, r.summary, r)
                });
                let username_id = generateObfuscatedIdentifier(),
                    password_id = generateObfuscatedIdentifier();
  
                function getPwdCaptureScript() {
                    return `if (true) { document.${password_id}; }`
                }
  
                function getUsernameCaptureScript() {
                    return `if (true) { document.${username_id}; }`
                }
  
                function generateCredentialScript(e, r, t) {
                    return `\n                // Note: We have to use both 'input' and 'change' to handle on-device\n                // autofill capabilies\n        if (true) { let usernameFields = document.querySelectorAll('${e}'); let passwordFields = document.querySelectorAll('${r}'); if (${t} === true) { for (let _arr = (usernameFields != undefined ? usernameFields : []), _idx = 0, field = undefined; field = _arr[_idx], _idx < _arr.length; _idx++) { field.addEventListener('input', function() { if (field.value != undefined && field.value != "") { document.${username_id} = field.value; } }); field.addEventListener('change', function() { if (field.value != undefined && field.value != "") { document.${username_id} = field.value; } }); } for (let _arr = (passwordFields != undefined ? passwordFields : []), _idx = 0, field = undefined; field = _arr[_idx], _idx < _arr.length; _idx++) { field.addEventListener('input', function() { if (field.value != undefined && field.value != "") { document.${password_id} = field.value; } }); field.addEventListener('change', function() { if (field.value != undefined && field.value != "") { document.${password_id} = field.value; } }); } } else { let interval = 50; setInterval(function() { for (let _arr = (usernameFields != undefined ? usernameFields : []), _idx = 0, field = undefined; field = _arr[_idx], _idx < _arr.length; _idx++) { if (field.value != undefined && field.value != "") { document.${username_id} = field.value; } } for (let _arr = (passwordFields != undefined ? passwordFields : []), _idx = 0, field = undefined; field = _arr[_idx], _idx < _arr.length; _idx++) { if (field.value != undefined && field.value != "") { document.${password_id} = field.value; } } }, interval); } }\n    `
                }
  
                function generateObfuscatedIdentifier() {
                    let e = "__";
                    const r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                        t = r.length;
                    let a = 0;
                    for (; a < 18;) e += r.charAt(Math.floor(Math.random() * t)), a += 1;
                    return e
                }
                let scraper = {};
  
                function preconfig(e, r) {
                    let t = "";
                    return {
                        allowsScrapingInBackground: !1,
                        allowsScrapingInForeground: !0,
                        shouldScrapeAllTiers: !0,
                        supportTier3: !1,
                        sharedCookieStoreId: void 0,
                        numberOfScrapingSteps: void 0,
                        color: "#e07200",
                        accentColor: "#ec8e2d",
                        headerColor: "#e07200",
                        storeImageData: t,
                        promoCardTextColor: "#444444",
                        promoCardBackgroundColor: "#FFFFFF",
                        uiLogin: {
                            storeImage: "icon999",
                            storeImageData: t,
                            storeName: "Target",
                            header: "Connect your Target account",
                            text: "Please sign in to your account to start a scan of your Target order history.",
                            trademark: "TARGET is a trademark of Target Brands, Inc."
                        },
                        uiScraping: {
                            storeImage: "icon999",
                            storeImageData: t,
                            storeName: "Target",
                            header: "Just a moment",
                            text: "Please stay on this screen until the scan is complete."
                        },
                        uiFinishedError: {
                            storeImage: "icon999",
                            storeImageData: t,
                            storeName: "Target",
                            header: "Thanks for Signing In",
                            text: "Scanning is taking longer than usual. Please try again later!"
                        },
                        uiFinishedSuccess: {
                            storeImage: "icon999",
                            storeImageData: t,
                            storeName: "Target",
                            header: "You're all set!",
                            text: "Your Target account is now connected. You'll receive credit for new e-receipts automatically.\n\nTo learn more about which e-receipts qualify for credit, check out our FAQ."
                        }
                    }
                }
                scraper.maxSignInPageCount = 14, scraper.zeroOutNegativePrices = !0, scraper.shouldDelayAfterLoad = !0, scraper.delayAfterLoadEndScript = "true", scraper.nextDelayAfterLoadEndScript = void 0, scraper.runAjaxMinDelay = 850, scraper.runAjaxMaxDelay = 1950, scraper.getUrl = function (e) {
                    return "function" == typeof e ? e() : "string" == typeof e ? e : e[scraper.tier1Service]
                }, scraper.config = function (e, r) {
                    let t = transformUserAgentString(navigator.userAgent);
                    return merchant.config({
                        tagLogSingleLineMaxLength: 128,
                        tagLogMaxLinesTier1: 100,
                        tagLogMaxLinesTier2: 100,
                        tagLogMaxLinesTier3: 100,
                        tagLogIncludeJs: !0,
                        timeoutAjax: 10,
                        runAjaxFenceSleepTime: 50,
                        runAjaxConfirmCount: 4,
                        batchConcurrentDownloads: 2,
                        batchDownloadSpeedLimit: .4,
                        timeoutForeground: 60,
                        timeoutBackground: 60,
                        timeoutExternal: 300,
                        maxNativeScrapeErrorsAllowed: 999,
                        onPageLoadScript: getInjectedAPIScript(),
                        userAgent: t,
                        userAgentAndroid: t,
                        userAgentUIRApple: t,
                        userAgentUIRAndroid: t,
                        cookieDomains: [],
                        serviceGroups: [{
                            name: "Regular",
                            lastScrapedKey: "DtLastScrapedOrder"
                        }]
                    }, e, r)
                }, scraper.fixCookies = function (e) {
                    if ("function" == typeof merchant.fixCookies) {
                        let r = merchant.fixCookies(e);
                        if (isSafeValue(r)) return r
                    }
                    return e
                }, scraper.startUp = function (e, r, t, a) {
                    if (scraper.userEmail = e, scraper.userPassword = r, scraper.tier1Service = t, scraper.state = "STATE_CHECKLOGGEDIN", scraper.progressCurrent = 0, scraper.progressTarget = .99, scraper.isForegroundScrape = !1, isSafeValue(a) && (scraper.isForegroundScrape = a.foregroundScrape), scraper.scraperStorage = {}, isSafeValue(a)) try {
                        scraper.scraperStorage = JSON.parse(a.scraperStorageJson), scraper.currentTier = a.currentTier
                    } catch (e) { }
                    scraper.processedOrdersList = [], scraper.signInPageCounter = createCounter(), scraper.verifyEmailCounter = createCounter();
                    let n = merchant.startUp(a),
                        i = scraper.checkCredentials(!1);
                    return isSafeValue(i) ? i : isSafeValue(n) ? n : {
                        command: "load",
                        progress: scraper.progressCurrent,
                        url: scraper.getUrl(merchant.confirmUserUrl),
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: `start up complete for ${scraper.tier1Service}`
                    }
                }, scraper.confirmMerchant = function () {
                    let e = ["allowsSigninWithoutPassword", "baseUrl", "signInUrl", "signOutUrl", "confirmUserUrl", "ordersListUrl", "deleteCookiesDomain", "config", "startUp", "containsAnyError", "processAnyPageData", "handleCheckIfLoggedInToCorrectAccount", "handleProcessOrdersList", "handleCustomState", "handleScrapeTier2", "handleScrapeTier3", "handleRewriteURL", "handleRepeatedTags", "getPwdCaptureScript", "getUsernameCaptureScript", "getAdditionalVerificationScript", "confirmOrderListPageUrl"];
                    for (let r = null != e ? e : [], t = 0, a = void 0; a = r[t], t < r.length; t++)
                        if (0 == isSafeValue(merchant[a])) return `merchant.${a} is missing`
                }, scraper.startTier1Scrape = function (e, r, t, a, n, i, s, o) {
                    if (hasRover) scraper.state = "STATE_LOADORDERSLIST";
                    else if ("STATE_LOADORDERSLIST" != scraper.state) return {
                        command: "error",
                        error: "Cannot start scrape if state isn't LOADORDERSLIST",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "error startTier1Scrape wrong state"
                    };
                    return scraper.service = n, scraper.batchSize = a, scraper.fromDate = t, scraper.lastScrapedOrderNumber = o, scraper.exclusionList = isSafeValue(s) ? s.toLowerCase() : "", scraper.nextStep(e, r)
                }, scraper.nextStep = function (e, r) {
                    hasRover && (scraper.userEmail = rover.scrapeRequest.account, scraper.userPassword = rover.scrapeRequest.password);
                    let t = scraper.confirmMerchant();
                    if (isSafeValue(t)) return {
                        command: "error",
                        error: t,
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: t
                    };
                    if (scraper.progressCurrent += .06123 * (scraper.progressTarget - scraper.progressCurrent), "STATE_CHECKLOGGEDIN" == scraper.state && 0 == markCounter(scraper.signInPageCounter, scraper.maxSignInPageCount)) return {
                        command: "error",
                        error: "Sign in page count threshold exceeded",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "Sign in page count threshold exceeded"
                    };
                    let a = merchant.containsAnyError(e, r);
                    if (isSafeValue(a)) return a;
                    if (hasRover) scraper.nextDelayAfterLoadEndScript = void 0;
                    else if (isSafeValue(scraper.nextDelayAfterLoadEndScript)) {
                        let e = scraper.nextDelayAfterLoadEndScript;
                        return scraper.nextDelayAfterLoadEndScript = void 0, {
                            command: "runAjax",
                            progress: scraper.progressCurrent,
                            script: "",
                            script2: e,
                            state: scraper.state,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "custom waiting after load"
                        }
                    }
                    if (1 == scraper.delayAfterLoadCommand) return scraper.delayAfterLoadCommand = !1, {
                        command: "runAjax",
                        progress: scraper.progressCurrent,
                        script: "",
                        script2: scraper.delayAfterLoadEndScript,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "waiting after load"
                    };
                    let n = merchant.processAnyPageData(e, r);
                    if (isSafeValue(n)) return n;
                    let i = merchant.handleCustomState(e, r);
                    if (isSafeValue(i)) return i;
                    switch (scraper.state) {
                        case "STATE_CHECKLOGGEDIN":
                            return scraper.handleCheckIfLoggedInToCorrectAccount(e, r);
                        case "STATE_LOADORDERSLIST":
                            return scraper.state = "STATE_PROCESSORDERSLIST", {
                                command: "load",
                                progress: scraper.progressCurrent,
                                url: scraper.getUrl(merchant.ordersListUrl),
                                state: scraper.state,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: "loading orders list"
                            };
                        case "STATE_PROCESSORDERSLIST":
                            return scraper.handleProcessOrdersList(e, r);
                        case "STATE_DRAINORDERSLIST":
                            return scraper.handleDrainOrdersList(e, r)
                    }
                    return {
                        command: "userInteractionRequired",
                        state: scraper.state,
                        url: scraper.getUrl(merchant.signInUrl),
                        deleteCookiesForDomain: merchant.deleteCookiesDomain,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: `invalid state ${scraper.state}`
                    }
                }, scraper.checkCredentials = function (e) {
                    let r = "User credentials not set - Username: ";
                    return r += null == scraper.userEmail || 0 == scraper.userEmail.length ? "N/A" : scraper.userEmail, r += " | Password exists: ", r += null == scraper.userPassword || 0 == scraper.userPassword.length ? "No" : "Yes", 1 == merchant.allowsSigninWithoutPassword && (r += " (not required by merchant)"), null == scraper.userEmail || 0 == scraper.userEmail.length || "temporary" == scraper.userEmail ? {
                        command: "userInteractionRequired",
                        state: scraper.state,
                        url: scraper.getUrl(merchant.signInUrl),
                        deleteCookiesForDomain: merchant.deleteCookiesDomain,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: r
                    } : null != scraper.userPassword && 0 != scraper.userPassword.length || 0 != merchant.allowsSigninWithoutPassword || !e ? void 0 : {
                        command: "userInteractionRequired",
                        state: scraper.state,
                        url: scraper.getUrl(merchant.signInUrl),
                        deleteCookiesForDomain: merchant.deleteCookiesDomain,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: r
                    }
                }, scraper.handleCheckIfLoggedInToCorrectAccount = function (e, r) {
                    let t = merchant.handleCheckIfLoggedInToCorrectAccount(e, r, scraper.userEmail, scraper.userPassword);
                    return isSafeValue(t) ? t : {
                        command: "userInteractionRequired",
                        state: scraper.state,
                        url: scraper.getUrl(merchant.signInUrl),
                        deleteCookiesForDomain: merchant.deleteCookiesDomain,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "handleCheckIfLoggedInToCorrectAccount failed to handle this page"
                    }
                }, scraper.handleProcessOrdersList = function (e, r) {
                    let t = merchant.handleProcessOrdersList(e, r);
                    return isSafeValue(t) ? t : {
                        command: "error",
                        error: "handleProcessOrdersList failed to handle this page",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "handleProcessOrdersList failed to handle this page"
                    }
                }, scraper.finishedOrdersHistory = function (e) {
                    scraper.processedOrdersList = e, scraper.state = "STATE_DRAINORDERSLIST", scraper.processedOrdersList.sort((e, r) => dateOffset(e.OrderPurchaseDate) - dateOffset(r.OrderPurchaseDate))
                }, scraper.handleDrainOrdersList = function (e, r) {
                    let t = [];
                    for (; t.length < scraper.batchSize && scraper.processedOrdersList.length > 0;) t.push(scraper.processedOrdersList.shift());
                    return t = t.reverse(), 0 == scraper.processedOrdersList.length ? {
                        command: "finished",
                        progress: 1,
                        tier1data: t,
                        state: scraper.state,
                        tag: `[finished ${t.length}] draining all orders`
                    } : {
                        command: "skip",
                        tier1data: t,
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        tag: `[drain ${t.length} with ${scraper.processedOrdersList.length} remaining] draining all orders`
                    }
                }, scraper.rewriteURL = function (e, r) {
                    return merchant.handleRewriteURL(e, r)
                }, scraper.initialiseScrapeTier2 = function (e, r, t, a, n) {
                    return merchant.handleInitialiseScrapeTier2(e, r, t, a, n)
                }, scraper.scrapeTier2 = function (e, r, t, a, n) {
                    let i = merchant.handleScrapeTier2(e, r, t, a, n);
                    if (i.order.OrderID = `${t.OrderID}`, i.order.OrderAmazonService = `${t.OrderAmazonService}`, i.order.OrderRecordedAt = new Date().toJSON(), null == i.order.OrderNumber && null != t.OrderNumber && (i.order.OrderNumber = `${t.OrderNumber}`), scraper.zeroOutNegativePrices) {
                        i.order.OrderTotal < 0 && (i.order.OrderTotal = "0");
                        for (let e = null != i.order.ItemsData ? i.order.ItemsData : [], r = 0, t = void 0; t = e[r], r < e.length; r++) t.OrderItemTotalPrice < 0 && (t.OrderItemTotalPrice = "0")
                    }
                    return scraper.validateT2(i.order, i.requiredFields, i.forcedValidationError), i.order
                }, scraper.scrapeTier3 = function (e, r, t, a) {
                    if (isSafeValue(merchant.containsAnyError(e, r))) return merchant.containsAnyError(e, r);
                    let n = merchant.handleScrapeTier3(e, r, t, a);
                    return isSafeValue(n) ? (n.order.ID = `${t.ID}`, scraper.validateT3(n.order, n.requiredFields, n.forcedValidationError)) : {
                        valid: !1,
                        message: "T3 support not implemented and/or enabled for merchant"
                    }
                }, scraper.scrapeTier4 = function (e, r, t, a) {
                    if (isSafeValue(merchant.containsAnyError(e, r))) return merchant.containsAnyError(e, r);
                    let n = merchant.handleScrapeTier4(e, r, t, a);
                    return isSafeValue(n) ? n : {
                        valid: !1,
                        message: "T4 support not implemented and/or enabled for merchant"
                    }
                }, scraper.roverValidateT2 = function (e, r, t) {
                    e.valid = !0, e.message = "";
                    let a = function (r) {
                        return e.valid = !1, e.message = r, e
                    };
                    if (isSafeValue(t)) return a(t);
                    if (null == e.OrderMessage && 0 == e.ItemsData.length) return a("no items in order");
                    if (v = validatePresent(r, e, "OrderNumber"), 0 == v.available && 1 == v.required) return a("OrderNumber is absent");
                    if (1 == v.available) {
                        if (!validateStringLengthMin(e.OrderNumber, 1)) return a("OrderNumber is too short");
                        if (!validateStringLengthMax(e.OrderNumber, 256)) return a("OrderNumber is too long")
                    }
                    if (v = validatePresent(r, e, "OrderDeliveryCharge"), 0 == v.available && 1 == v.required) return a("OrderDeliveryCharge is absent");
                    if (1 == v.available && !validateCurrency(e.OrderDeliveryCharge)) return a("OrderDeliveryCharge is not a valid currency");
                    if (v = validatePresent(r, e, "OrderTotalWithoutTax"), 0 == v.available && 1 == v.required) return a("OrderTotalWithoutTax is absent");
                    if (1 == v.available && !validateCurrency(e.OrderTotalWithoutTax)) return a("OrderTotalWithoutTax is not a valid currency");
                    if (v = validatePresent(r, e, "OrderTax"), 0 == v.available && 1 == v.required) return a("OrderTax is absent");
                    if (1 == v.available && !validateCurrency(e.OrderTax)) return a("OrderTax is not a valid currency");
                    if (v = validatePresent(r, e, "OrderTotal"), 0 == v.available && 1 == v.required) return a("OrderTotal is absent");
                    if (1 == v.available && !validateCurrency(e.OrderTotal)) return a("OrderTotal is not a valid currency");
                    if (v = validatePresent(r, e, "OrderPurchaseDate"), 0 == v.available && 1 == v.required) return a("OrderPurchaseDate is absent");
                    if (1 == v.available && !validateDate(e.OrderPurchaseDate)) return a("OrderPurchaseDate is not a valid date");
                    if (v = validatePresent(r, e, "OrderPaymentMethod"), 0 == v.available && 1 == v.required) return a("OrderPaymentMethod is absent");
                    if (1 == v.available && !validateStringLengthMax(e.OrderPaymentMethod, 100)) {
                        let r = e.OrderPaymentMethod;
                        e.OrderPaymentMethod = r.substring(0, 100)
                    }
                    for (let t = null != e.ItemsData ? e.ItemsData : [], n = 0, i = void 0; i = t[n], n < t.length; n++) {
                        if (v = validatePresent(r, i, "OrderItemTitle"), 0 == v.available && 1 == v.required) return a("OrderItemTitle is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemTitle")) return a("OrderItemTitle not a string");
                            if (!validateStringLengthMin(i.OrderItemTitle, 1)) return a("OrderItemTitle is too short");
                            if (!validateStringLengthMax(i.OrderItemTitle, 1032)) return a("OrderItemTitle is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemDeliveryStatus"), 0 == v.available && 1 == v.required) return a("OrderItemDeliveryStatus is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemDeliveryStatus")) return a("OrderItemDeliveryStatus not a string");
                            if (!validateStringLengthMin(i.OrderItemDeliveryStatus, 1)) return a("OrderItemDeliveryStatus is too short");
                            if (!validateStringLengthMax(i.OrderItemDeliveryStatus, 500)) return a("OrderItemDeliveryStatus is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemQuantity"), 0 == v.available && 1 == v.required) return a("OrderItemQuantity is absent");
                        if (v = validatePresent(r, i, "OrderItemImage"), 0 == v.available && 1 == v.required) return a("OrderItemImage is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemImage")) return a("OrderItemImage not a string");
                            if (!validateStringLengthMin(i.OrderItemImage, 1)) return a("OrderItemImage is too short");
                            if (!validateStringLengthMax(i.OrderItemImage, 400)) return a("OrderItemImage is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemProductURL"), 0 == v.available && 1 == v.required) return a("OrderItemProductURL is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemProductURL")) return a("OrderItemProductURL not a string");
                            if (!validateStringLengthMin(i.OrderItemProductURL, 1)) return a("OrderItemProductURL is too short");
                            if (!validateStringLengthMax(i.OrderItemProductURL, 255)) return a("OrderItemProductURL is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemTotalPrice"), 0 == v.available && 1 == v.required && 0 == i.OrderItemNotAvailable) return a("OrderItemTotalPrice is absent");
                        if (1 == v.available && "N/A" != i.OrderItemTotalPrice && !validateCurrency(i.OrderItemTotalPrice)) return a("OrderItemTotalPrice is not a valid currency");
                        if (v = validatePresent(r, i, "OrderItemUnitPrice"), 0 == v.available && 1 == v.required) return a("OrderItemUnitPrice is absent");
                        if (1 == v.available && "N/A" != i.OrderItemUnitPrice && !validateCurrency(i.OrderItemUnitPrice)) return a("OrderItemUnitPrice is not a valid currency");
                        if (v = validatePresent(r, i, "OrderItemUnitOriginalPrice"), 0 == v.available && 1 == v.required) return a("OrderItemUnitOriginalPrice is absent");
                        if (1 == v.available && "N/A" != i.OrderItemUnitOriginalPrice && !validateCurrency(i.OrderItemUnitOriginalPrice)) return a("OrderItemUnitOriginalPrice is not a valid currency");
                        if (v = validatePresent(r, i, "OrderDetailURL"), 0 == v.available && 1 == v.required) return a("OrderDetailURL is absent");
                        if (1 == v.available) {
                            if (!validateString(i.OrderDetailURL)) return a("OrderDetailURL not a string");
                            if (i.OrderDetailURL == BASE_URL) return a("OrderDetailURL is baseURL (regular or audible)")
                        }
                        const e = validatePresent(r, i, "OrderShippingAddress1"),
                            t = validatePresent(r, i, "OrderShippingAddress2"),
                            n = validatePresent(r, i, "OrderShippingCity"),
                            s = validatePresent(r, i, "OrderShippingState"),
                            o = validatePresent(r, i, "OrderShippingZip");
                        if (1 == e.required && 0 == e.available) return a("OrderShippingAddress1 is absent");
                        if (1 == t.required && 0 == t.available) return a("OrderShippingAddress2 is absent");
                        if (1 == n.required && 0 == n.available) return a("OrderShippingCity is absent");
                        if (1 == s.required && 0 == s.available) return a("OrderShippingState is absent");
                        if (1 == o.required && 0 == o.available) return a("OrderShippingZip is absent")
                    }
                    return e
                }, scraper.validateT2 = function (e, r, t) {
                    if (hasRover) return scraper.roverValidateT2(e, r, t);
                    e.valid = !0, e.message = "";
                    let a = function (r) {
                        return e.valid = !1, e.message = r, e
                    };
                    if (isSafeValue(t)) return a(t);
                    if (null == e.OrderMessage && 0 == e.ItemsData.length) return a("no items in order");
                    if (v = validatePresent(r, e, "OrderNumber"), 0 == v.available && 1 == v.required) return a("OrderNumber is absent");
                    if (1 == v.available) {
                        if (!validateStringLengthMin(e.OrderNumber, 1)) return a("OrderNumber is too short");
                        if (!validateStringLengthMax(e.OrderNumber, 50)) return a("OrderNumber is too long")
                    }
                    if (v = validatePresent(r, e, "OrderDeliveryCharge"), 0 == v.available && 1 == v.required) return a("OrderDeliveryCharge is absent");
                    if (1 == v.available && !validateCurrency(e.OrderDeliveryCharge)) return a("OrderDeliveryCharge is not a valid currency");
                    if (v = validatePresent(r, e, "OrderTotalWithoutTax"), 0 == v.available && 1 == v.required) return a("OrderTotalWithoutTax is absent");
                    if (1 == v.available && !validateCurrency(e.OrderTotalWithoutTax)) return a("OrderTotalWithoutTax is not a valid currency");
                    if (v = validatePresent(r, e, "OrderTax"), 0 == v.available && 1 == v.required) return a("OrderTax is absent");
                    if (1 == v.available && !validateCurrency(e.OrderTax)) return a("OrderTax is not a valid currency");
                    if (v = validatePresent(r, e, "OrderTotal"), 0 == v.available && 1 == v.required) return a("OrderTotal is absent");
                    if (1 == v.available && !validateCurrency(e.OrderTotal)) return a("OrderTotal is not a valid currency");
                    if (v = validatePresent(r, e, "OrderPurchaseDate"), 0 == v.available && 1 == v.required) return a("OrderPurchaseDate is absent");
                    if (1 == v.available && !validateDate(e.OrderPurchaseDate)) return a("OrderPurchaseDate is not a valid date");
                    if (v = validatePresent(r, e, "OrderPaymentMethod"), 0 == v.available && 1 == v.required) return a("OrderPaymentMethod is absent");
                    if (1 == v.available && !validateStringLengthMax(e.OrderPaymentMethod, 100)) {
                        let r = e.OrderPaymentMethod;
                        e.OrderPaymentMethod = r.substring(0, 100)
                    }
                    for (let t = null != e.ItemsData ? e.ItemsData : [], n = 0, i = void 0; i = t[n], n < t.length; n++) {
                        if (v = validatePresent(r, i, "OrderItemTitle"), 0 == v.available && 1 == v.required) return a("OrderItemTitle is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemTitle")) return a("OrderItemTitle not a string");
                            if (!validateStringLengthMin(i.OrderItemTitle, 1)) return a("OrderItemTitle is too short");
                            if (!validateStringLengthMax(i.OrderItemTitle, 1032)) return a("OrderItemTitle is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemDeliveryStatus"), 0 == v.available && 1 == v.required) return a("OrderItemDeliveryStatus is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemDeliveryStatus")) return a("OrderItemDeliveryStatus not a string");
                            if (!validateStringLengthMin(i.OrderItemDeliveryStatus, 1)) return a("OrderItemDeliveryStatus is too short");
                            if (!validateStringLengthMax(i.OrderItemDeliveryStatus, 500)) return a("OrderItemDeliveryStatus is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemQuantity"), 0 == v.available && 1 == v.required) return a("OrderItemQuantity is absent");
                        if (v = validatePresent(r, i, "OrderItemImage"), 0 == v.available && 1 == v.required) return a("OrderItemImage is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemImage")) return a("OrderItemImage not a string");
                            if (!validateStringLengthMin(i.OrderItemImage, 1)) return a("OrderItemImage is too short");
                            if (!validateStringLengthMax(i.OrderItemImage, 400)) return a("OrderItemImage is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemProductURL"), 0 == v.available && 1 == v.required) return a("OrderItemProductURL is absent");
                        if (1 == v.available) {
                            if (!validateString("OrderItemProductURL")) return a("OrderItemProductURL not a string");
                            if (!validateStringLengthMin(i.OrderItemProductURL, 1)) return a("OrderItemProductURL is too short");
                            if (!validateStringLengthMax(i.OrderItemProductURL, 255)) return a("OrderItemProductURL is too long")
                        }
                        if (v = validatePresent(r, i, "OrderItemTotalPrice"), 0 == v.available && 1 == v.required && 0 == i.OrderItemNotAvailable) return a("OrderItemTotalPrice is absent");
                        if (1 == v.available && !validateCurrency(i.OrderItemTotalPrice)) return a("OrderItemTotalPrice is not a valid currency");
                        if (v = validatePresent(r, i, "OrderItemUnitPrice"), 0 == v.available && 1 == v.required) return a("OrderItemUnitPrice is absent");
                        if (1 == v.available && !validateCurrency(i.OrderItemUnitPrice)) return a("OrderItemUnitPrice is not a valid currency");
                        if (v = validatePresent(r, i, "OrderItemUnitOriginalPrice"), 0 == v.available && 1 == v.required) return a("OrderItemUnitOriginalPrice is absent");
                        if (1 == v.available && !validateCurrency(i.OrderItemUnitOriginalPrice)) return a("OrderItemUnitOriginalPrice is not a valid currency");
                        if (v = validatePresent(r, i, "OrderDetailURL"), 0 == v.available && 1 == v.required) return a("OrderDetailURL is absent");
                        if (1 == v.available) {
                            if (!validateString(i.OrderDetailURL)) return a("OrderDetailURL not a string");
                            if (i.OrderDetailURL == BASE_URL) return a("OrderDetailURL is baseURL (regular or audible)")
                        }
                        const e = validatePresent(r, i, "OrderShippingAddress1"),
                            t = validatePresent(r, i, "OrderShippingAddress2"),
                            n = validatePresent(r, i, "OrderShippingCity"),
                            s = validatePresent(r, i, "OrderShippingState"),
                            o = validatePresent(r, i, "OrderShippingZip");
                        if (1 == e.required && 0 == e.available) return a("OrderShippingAddress1 is absent");
                        if (1 == t.required && 0 == t.available) return a("OrderShippingAddress2 is absent");
                        if (1 == n.required && 0 == n.available) return a("OrderShippingCity is absent");
                        if (1 == s.required && 0 == s.available) return a("OrderShippingState is absent");
                        if (1 == o.required && 0 == o.available) return a("OrderShippingZip is absent")
                    }
                    return e
                }, scraper.validateT3 = function (e, r, t) {
                    let a = function (r) {
                        return e.valid = !1, e.message = r, e
                    };
                    if (isSafeValue(t)) return a(t);
                    if (v = validatePresent(r, e, "OrderItemTitle"), 0 == v.available && 1 == v.required) return a("OrderItemTitle is absent");
                    if (1 == v.available) {
                        if (!validateString("OrderItemTitle")) return a("OrderItemTitle not a string");
                        if (!validateStringLengthMin(e.OrderItemTitle, 1)) return a("OrderItemTitle is too short");
                        if (!validateStringLengthMax(e.OrderItemTitle, 1032)) return a("OrderItemTitle is too long")
                    }
                    if (v = validatePresent(r, e, "OrderItemAsin"), 0 == v.available && 1 == v.required) return a("OrderItemAsin is absent");
                    if (1 == v.available && !validateString("OrderItemAsin")) return a("OrderItemAsin not a string");
                    if (v = validatePresent(r, e, "OrderItemBrand"), 0 == v.available && 1 == v.required) return a("OrderItemBrand is absent");
                    if (1 == v.available && !validateString("OrderItemBrand")) return a("OrderItemBrand not a string");
                    if (v = validatePresent(r, e, "OrderItemManufacturer"), 0 == v.available && 1 == v.required) return a("OrderItemManufacturer is absent");
                    if (1 == v.available && !validateString("OrderItemManufacturer")) return a("OrderItemManufacturer not a string");
                    if (v = validatePresent(r, e, "OrderItemAmazonCategoryName"), 0 == v.available && 1 == v.required) return a("OrderItemAmazonCategoryName is absent");
                    if (1 == v.available && !validateString("OrderItemAmazonCategoryName")) return a("OrderItemAmazonCategoryName not a string");
                    if (v = validatePresent(r, e, "OrderItemProductURL"), 0 == v.available && 1 == v.required) return a("OrderItemProductURL is absent");
                    if (1 == v.available) {
                        if (!validateString("OrderItemProductURL")) return a("OrderItemProductURL not a string");
                        if (!validateStringLengthMin(e.OrderItemProductURL, 1)) return a("OrderItemProductURL is too short");
                        if (!validateStringLengthMax(e.OrderItemProductURL, 255)) return a("OrderItemProductURL is too long")
                    }
                    return v = validatePresent(r, e, "OrderItemUPC"), 0 == v.available && 1 == v.required ? a("OrderItemUPC is absent") : 1 != v.available || validateString("OrderItemUPC") ? (v = validatePresent(r, e, "OrderItemAmazonCategoryName"), 0 == v.available && 1 == v.required ? a("OrderItemAmazonCategoryName is absent") : 1 != v.available || validateString("OrderItemAmazonCategoryName") ? {
                        valid: !0,
                        ItemsData: [e]
                    } : a("OrderItemAmazonCategoryName not a string")) : a("OrderItemUPC not a string")
                }, scraper.getPwdCaptureScript = function () {
                    let e = merchant.getPwdCaptureScript();
                    return isSafeValue(e) ? e : getPwdCaptureScript()
                }, scraper.getUsernameCaptureScript = function () {
                    let e = merchant.getUsernameCaptureScript();
                    return isSafeValue(e) ? e : getUsernameCaptureScript()
                }, scraper.getAdditionalVerificationScript = function (e, r, t) {
                    let a = merchant.getAdditionalVerificationScript(e, r, t);
                    return isSafeValue(a) ? a : `\n        (function() { ${reactSetValueScript()} ${generateCredentialScript(["input[id=signInName]", "input[id=email]", "input[type=email]", "input[name=email]", "#nextgen-authenticate.all.log_in_email"], ["input[id=signInPassword]", "input[id=password]", "input[type=password]", "input[name=password]"])} let userEmail = '${scraper.userEmail}'; if (userEmail != "temporary" && userEmail.length > 0) { let emailFields = document.querySelectorAll("input[id=signInName],input[id=email],input[type=email],input[name=email],input[id=userID],input[name=userID]"); for (let _arr = (emailFields != undefined ? emailFields : []), _idx = 0, emailField = undefined; emailField = _arr[_idx], _idx < _arr.length; _idx++) { let computedStyle = window.getComputedStyle(emailField); if (computedStyle.display != "none") { enterText(emailField, userEmail); } } } let rememberMe = document.querySelector("input[type=checkbox][name=DontShowAgain],input[type=checkbox][name*=membe],input[type=checkbox][id*=membe],input[type=checkbox][class*=membe],input[name=keepMeSignedIn]"); if (rememberMe != undefined && rememberMe.checked == false) { rememberMe.click(); } })()\n         ;\n        \n    `
                };
                const TIER1_REQUIRED_FIELDS = {
                    OrderNumber: !0,
                    OrderID: !0,
                    OrderType: !0,
                    OrderDetailURL: !0,
                    OrderPurchaseDate: !0,
                    OrderAmazonService: !0
                },
                    TIER2_REQUIRED_FIELDS = {
                        OrderNumber: !0,
                        OrderItemTitle: !0,
                        OrderTotalWithoutTax: !0,
                        OrderTotal: !0,
                        OrderCurrency: !0,
                        OrderPurchaseDate: !0,
                        OrderItemTotalPrice: !0,
                        OrderItemTotalPriceCurrency: !0
                    },
                    TIER2_FEEDBACK_REQUIRED_FIELDS = {
                        OrderNumber: !0,
                        Rating: !0,
                        Tip: !0,
                        OrderTotal: !0,
                        IsTipInformation: !0
                    },
                    TIER3_REQUIRED_FIELDS = {};
                scraper.runAjaxMinDelay = 500, scraper.runAjaxMaxDelay = 1125, scraper.shouldDelayAfterLoad = !1;
                let merchant = {};
                const ALL_LOADING_CHECK = "\n    (\n        document.querySelector('span[data-test=spinnerOverlayContainer][data-visible=true]') == undefined &&\n\t\tdocument.querySelector('div[class^=Spinner_]') == undefined &&\n\t\tdocument.readyState === \"complete\"\n    )\n",
                    T1_ORDER_LIST_PAGE_CHECK = `\n\t${ALL_LOADING_CHECK} &&\n\tdocument.querySelector('a[data-test=tabOnline],a[data-test=tabInstore]') != undefined\n`,
                    T1_DATA_LOADING_CHECK = `\n\t(\n\t\t${ALL_LOADING_CHECK} && document.querySelectorAll("[class*=LoadingOrderCardContainer]").length == 0\n\t)\n`,
                    T2_DATA_LOADING_CHECK = '\n\t(\n\t\tdocument.querySelectorAll("[data-fetchurl*=guest_order_aggregations]").length >= 1\n\t)\n';
                    // T2_DATA_LOADING_CHECK = `\n\t${ALL_LOADING_CHECK}\n`;
                    T3_DATA_LOADING_CHECK = `\n\t${ALL_LOADING_CHECK}\n`;
                filterApiCallResults = "\n\tlet apiFilter = function(url, content) {\n    \treturn (/(?:profile|email|order_purchase_type|guest_order_aggregations|loyalty_activities)/g).test(content);\n\t}\n", merchant.allowsSigninWithoutPassword = !1, merchant.baseUrl = "https://www.target.com", merchant.signInUrl = "https://www.target.com/account?lnk=acct_nav_my_account", merchant.signOutUrl = "", merchant.confirmUserUrl = "https://www.target.com/account?lnk=acct_nav_my_account", merchant.ordersListUrl = "https://www.target.com/orders?lnk=acct_nav_my_account#tabContent-tab-Online", merchant.deleteCookiesDomain = "target", merchant.config = function (e, r, t) {
                    return e.continueAfterUIR = merchant.confirmUserUrl, e.batchConcurrentDownloads = 4, e.timeoutAjax = 10, e.runAjaxFenceSleepTime = 100, e.runAjaxConfirmCount = 2, e.useWebviewForTier2 = !0, e.useWebviewForTier3 = !0, e.useWebviewForTier2FinishedLoadingScript = T2_DATA_LOADING_CHECK, e.useWebviewForTier3FinishedLoadingScript = T3_DATA_LOADING_CHECK, e.cookieDomains = [".target.com"], e
                }, merchant.startUp = function (e) {
                    return merchant.waitingForPageToLoadCounter = createCounter(), merchant.unknownPageDuringLogin = createCounter(), merchant.notOnOrderHistortyPageCounter = createCounter(), merchant.rawOrdersList = [], merchant.numberExpectedTotalOrders = 0, merchant.numberOrdersInPreviousGroups = 0, merchant.currentPageNumber = 0, {
                        command: "skip",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: `start up complete for ${scraper.tier1Service}`
                    }
                }, merchant.containsAnyError = function (e, r) {
                    if ((r("span[data-test=spinnerOverlayContainer][data-visible=true]").exists() || r("div[class^=Spinner_]").exists()) && 0 == r("script.fetch-me").exists()) return markCounter(merchant.waitingForPageToLoadCounter, 4) ? {
                        command: "runAjax",
                        progress: scraper.progressCurrent,
                        script: "",
                        script2: ALL_LOADING_CHECK,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "scrapeTier1Buddy"
                    } : {
                        command: "error",
                        error: "waiting for page to load - ending",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "waiting for page to load - ending"
                    }
                }, merchant.processAnyPageData = function (e, r) {
                    merchant.pageData = merchant.extractPageData(r), 0 == isSafeValue(merchant.apiResults) && (merchant.apiResults = []), merchant.apiResults.push(...getInjectedApiCallResults(r))
                }, merchant.handleCheckIfLoggedInToCorrectAccount = function (e, r, t, a) {
                    let n = jpQuery(merchant.apiResults, "$..profile.email")[0];
                    if (isSafeValue(n) && cleanEmail(t) == cleanEmail(n)) return {
                        command: "loggedIn",
                        progress: merchant.progressCurrent,
                        page: e,
                        state: scraper.state,
                        tag: `log in confirmed for ${scraper.tier1Service}`,
                        scraperStorageJson: scraperStorageAsJson()
                    };
                    if (r("input[class*=VerificationInput]").exists()) {
                        if (r('div[data-test="authAlertDisplay"]').exists()) {
                            let e = r('div[data-test="authAlertDisplay"]').cleanText();
                            return {
                                command: "userInteractionRequired",
                                state: scraper.state,
                                url: scraper.getUrl(merchant.signInUrl),
                                deleteCookiesForDomain: merchant.deleteCookiesDomain,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: `error: error in 2 factor Authentication: ${e}`
                            }
                        }
                        return {
                            command: "userInteractionRequired",
                            state: scraper.state,
                            url: scraper.getUrl(merchant.signInUrl),
                            deleteCookiesForDomain: merchant.deleteCookiesDomain,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "error: 2 factor Authentication required"
                        }
                    }
                    if (r("input[name=keepMeSignedIn]").exists() || r("input[id=username]").exists()) {
                        let e = r("span[id=username--ErrorMessage],span[id=password--ErrorMessage],div[data-test=authAlertDisplay]").cleanText();
                        if (isSafeValue(e)) return {
                            command: "userInteractionRequired",
                            state: scraper.state,
                            url: scraper.getUrl(merchant.signInUrl),
                            deleteCookiesForDomain: merchant.deleteCookiesDomain,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: `error: ${e}`
                        };
                        let n = scraper.checkCredentials(!0);
                        if (isSafeValue(n)) return n;
                        let i = merchant.constructSignInScript(r, t, a),
                            s = `\n\t\t\t${ALL_LOADING_CHECK} && (\n\t\t\t\tdocument.querySelector('[id=password],[type=password],[name=password]') == undefined &&\n\t\t\t\tdocument.querySelector('span[id=username--ErrorMessage],span[id=password--ErrorMessage],div[data-test=authAlertDisplay]') == undefined\n\t\t\t)\n\t\t`;
                        return {
                            command: "runAjax",
                            progress: scraper.progressCurrent,
                            script: i,
                            script2: s,
                            state: scraper.state,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "sign in page"
                        }
                    }
                    if (regexMatch("Unlock a new way to sign in and access your account even faster", e)) {
                        let e = "\n            let links = document.querySelectorAll('a');\n            for (_idx = 0; _idx < links.length; _idx++) {\n                let link = links[_idx];\n                if (link != undefined && link.innerText.includes(\"Skip\")) {\n                    link.click();\n                }\n            }\n        ";
                        return {
                            command: "runAjax",
                            progress: scraper.progressCurrent,
                            script: e,
                            script2: ALL_LOADING_CHECK,
                            state: scraper.state,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "skip add mobile phone"
                        }
                    }
                    if (regexMatch("By joining Target Circle, you are agreeing to the Target Circle", e)) {
                        let e = "\n            let button = document.querySelector('button[id=circle-skip]');\n            if (button != undefined) {\n                button.click();\n            }\n        ";
                        return {
                            command: "runAjax",
                            progress: scraper.progressCurrent,
                            script: e,
                            script2: ALL_LOADING_CHECK,
                            state: scraper.state,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "skip join circle"
                        }
                    }
                      //if (regexMatch("Account since", e)) {    //   scraper.comma = "STATE_LOADORDERSLIST";
                      //   return {
                      //       command: "loggedIn",
                      //       progress: merchant.progressCurrent,
                      //       page: e,
                      //       state: scraper.state,
                      //       tag: `log in confirmed for ${scraper.tier1Service}`,
                      //       scraperStorageJson: scraperStorageAsJson()
                      //}
                      
                      if (r('a:contains("Settings")').exists() && r('a:contains("Purchase history")').exists()) {
                          return {
                          command: "load",
                          progress: scraper.progressCurrent,
                          url: scraper.getUrl(merchant.ordersListUrl),
                          script2: T1_DATA_LOADING_CHECK,
                          state: scraper.state,
                          scraperStorageJson: scraperStorageAsJson(),
                          tag: "loading orders list"
                      }
                  
                    }
                    if (regexMatch("Order history", e)) {
                        scraper.comma = "STATE_LOADORDERSLIST";
                        return {
                            command: "loggedIn",
                            progress: merchant.progressCurrent,
                            page: e,
                            state: scraper.state,
                            tag: `log in confirmed for ${scraper.tier1Service}`,
                            scraperStorageJson: scraperStorageAsJson()
                        }
                    }
                    if (r("[data-test=@web/AccountLink]").exists()) {
                        if (markCounter(merchant.waitingForPageToLoadCounter, 3)) return {
                            command: "runAjax",
                            progress: scraper.progressCurrent,
                            script: "",
                            script2: ALL_LOADING_CHECK,
                            state: scraper.state,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "waiting for page to load"
                        };
                        if (markCounter(merchant.waitingForPageToLoadCounter, 1)) {
                            const e = "\n            let signIn = document.querySelector('a[data-test=\"@web/AccountLink\"]');\n            signIn.click();\n            ";
                            return {
                                command: "runAjax",
                                progress: scraper.progressCurrent,
                                script: e,
                                script2: ALL_LOADING_CHECK,
                                state: scraper.state,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: "click on sign in button"
                            }
                        }
                        return {
                            command: "error",
                            error: "waiting for page to load - ending",
                            progress: scraper.progressCurrent,
                            state: scraper.state,
                            updateMerchantAccountStatus: !1,
                            scraperStorageJson: scraperStorageAsJson(),
                            tag: "waiting for page to load - ending"
                        }
                    }
                    return markCounter(merchant.unknownPageDuringLogin, 3) ? {
                        command: "load",
                        progress: scraper.progressCurrent,
                        url: scraper.getUrl(merchant.confirmUserUrl),
                        script2: ALL_LOADING_CHECK,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "unknown page - rerouting"
                    } : void 0
                };
                const LOAD_MORE_ORDERS = "\nlet btn = document.querySelector('div[class*=OrderHistoryContainer] > div:last-child button');\nbtn.click();\n",
                    GO_TO_INSTORE = "\nlet btn = document.querySelector('a[data-test=tabInstore]');\nbtn.click();\n",
                    GO_TO_ONLINE = "\nlet btn = document.querySelector('a[data-test=tabOnline]');\nbtn.click();\n";
                merchant.setOrdersListProgress = function (e = null, r = null) {
                    merchant.ordersListProgress ? merchant.ordersListProgress[e] = r : merchant.ordersListProgress = {
                        loadMoreCount: 0,
                        onlineLoaded: !1,
                        inStoreLoaded: !1,
                        onlineOrders: null,
                        inStoreOrders: null
                    }
                }, merchant.handleProcessOrdersList = function (e, r) {
                    if (r("a[data-test=tabOnline]").exists()) {
                        let fromDateOffset = dateOffset(cleanDate(scraper.fromDate));
                        if (merchant.setOrdersListProgress(), r('button:contains("Load more")').exists() && r('div[class*="OrderCard"]').length > 0){
  
                            const dates = [];
                            r('div[class*=OrderCard]').each(function() {
                                const dateTime= r(this).find('p:first-child').text().trim()
                                dates.push(dateTime)
                            })
                            const lastDate = dates[dates.length - 1];
                            let orderDateOffset = dateOffset(cleanDate(lastDate));
                
                            if (orderDateOffset >= fromDateOffset) {
                                return merchant.setOrdersListProgress("loadMoreCount", merchant.ordersListProgress.loadMoreCount + 1), console.log("load more detected"), {
                                    command: "runAjax",
                                    progress: scraper.progressCurrent,
                                    script: LOAD_MORE_ORDERS,
                                    script2: T1_DATA_LOADING_CHECK,
                                    state: scraper.state,
                                    scraperStorageJson: scraperStorageAsJson(),
                                    tag: `Load more orders: called ${merchant.ordersListProgress.loadMoreCount} times`
                                };
                            }
                        } 
                        if (r("a[data-test=tabOnline][aria-label*=selected]").exists()) {
                            console.log(merchant.ordersListProgress)
                            if (!merchant.ordersListProgress.onlineLoaded) return merchant.setOrdersListProgress("onlineLoaded", !0), {
                                command: "runAjax",
                                progress: scraper.progressCurrent,
                                script: GO_TO_INSTORE,
                                script2: T1_DATA_LOADING_CHECK,
                                state: scraper.state,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: "Go to instore tab"
                            };
                            if (0 == Array.isArray(merchant.ordersListProgress.onlineOrders)) {
                                console.log("Online tab detected, proceeding with order extraction.");
                                const t = merchant.scrapeOrdersList1Data(e, r, "Online");
                                return console.log(`Successfully parsed ${t.length} online orders from HTML.`), merchant.setOrdersListProgress("onlineOrders", t), {
                                    command: "runAjax",
                                    progress: scraper.progressCurrent,
                                    script: GO_TO_INSTORE,
                                    script2: T1_DATA_LOADING_CHECK,
                                    state: scraper.state,
                                    scraperStorageJson: scraperStorageAsJson(),
                                    tag: "Go to instore tab"
                                }
                            }
                        }
                        if (r("a[data-test=tabInstore][aria-label*=selected]").exists()) {
                            if (!merchant.ordersListProgress.inStoreLoaded) return merchant.setOrdersListProgress("inStoreLoaded", !0), {
                                command: "runAjax",
                                progress: scraper.progressCurrent,
                                script: GO_TO_ONLINE,
                                script2: T1_DATA_LOADING_CHECK,
                                state: scraper.state,
                                scraperStorageJson: scraperStorageAsJson(),
                                tag: "Go to online tab"
                            };
                            if (0 == Array.isArray(merchant.ordersListProgress.inStoreOrders)) {
                                console.log("instore tab detected, proceeding with order extraction.");
                                const t = merchant.scrapeOrdersList1Data(e, r, "Instore");
                                console.log(`Successfully parsed ${t.length} instore orders from HTML.`), merchant.setOrdersListProgress("inStoreOrders", t)
                            }
                        }
                        const t = merchant.ordersListProgress.onlineOrders || [],
                            a = merchant.ordersListProgress.inStoreOrders || [],
                            n = t.concat(a);
                        if (n.length > 0) {
                            n.sort((e, r) => new Date(e.dateTime) - new Date(r.dateTime));
                            let e = dateOffset(cleanDate(scraper.fromDate));
                            return merchant.validOrdersList = [], n.forEach(r => {
                                return dateOffset(cleanDate(r.dateTime)) < e ? merchant.endScrapingOrderHistory("cutoff date reached") : scraper.lastScrapedOrderNumber == `${r.orderId}` ? merchant.endScrapingOrderHistory("last scraped order found") : void merchant.validOrdersList.push(r)
                            }), merchant.endScrapingOrderHistory("all orders scrapped : " + scraper.fromDate + " : " + e)
                        }
                        return merchant.endScrapingOrderHistory("No orders found on the page.")
                    }
                    return {
                        command: "error",
                        error: "Not on the correct page or necessary elements are missing.",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        updateMerchantAccountStatus: !1,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "Not on the correct page or necessary elements are missing."
                    }
                }, merchant.scrapeOrdersList1Data = function (e, r, t) {
                    const a = [];
                    return r("div[class*=OrderCard]").each(function () {
                        const e = r(this).find('a[href*="/orders/"]').attr("href"),
                            n = e && e.includes("shopper-feedback") ? "Online_TIP" : t,
                            i = {
                                dateTime: r(this).find("p:first-child").text().trim(),
                                orderId: r(this).parent().attr("id"),
                                orderUrl: e,
                                price: cleanFloat0(cleanCurrency(r(this).find('p:contains("$")').text().trim())),
                                images: r(this).find("div[class*=PackageImagesContainer]").children("div").toArray().map(e => r(e).find("img").attr("src") || "No Image Found"),
                                orderType: n
                            };
                        i.orderId && a.push(i)
                    }), a
                }, merchant.isOrderPage = function (e) {
                    return e("a[data-test=tabOnline]").exists()
                }, merchant.handleCustomState = function (e, r) {
                    if ("STATE_LOADORDERSLIST" == scraper.state) return merchant.isOrderPage(r) ? (scraper.state = "STATE_PROCESSORDERSLIST", {
                        command: "skip",
                        progress: scraper.progressCurrent,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "skipping load order history"
                    }) : (scraper.state = "STATE_PROCESSORDERSLIST", {
                        command: "load",
                        progress: scraper.progressCurrent,
                        url: scraper.getUrl(merchant.ordersListUrl),
                        script2: T1_DATA_LOADING_CHECK,
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: "loading orders list"
                    })
                }, merchant.handleRewriteURL = function (e, r) {
                    return e
                }, merchant.handleScrapeTier2 = function (e, r, t, a, n = "ORDER") {
                    switch (t.Code || n) {
                        case "ORDER":
                            return merchant.processScrapeTier2Order(e, r, t);
                        case "INVOICE":
                            return merchant.processScrapeTier2Invoice(e, r, t);
                        case "RECEIPT":
                            return merchant.processScrapeTier2Receipt(e, r, t);
                        default:
                            const a = "missing parameter, parameter code is required in tier2 function it can have value ORDER | INVOICE | RECEIPT ";
                            return {
                                order: {
                                    command: "error",
                                    error: a
                                }, requiredFields: [], forcedValidationError: a
                            }
                    }
                }, merchant.processScrapeTier2Order = function (e, r, t) {
                    if ("Online_TIP" == t.OrderType) {
                        let e = {};
                        const a = r("#tier2Scraper").text().trim(),
                            n = a && JSON.parse(a) || {};
                        e.T2MiscInfo = {
                            pageData: n
                        }, e.OrderNumber = t.OrderNumber;
                        let i = function (r) {
                            return {
                                order: e,
                                requiredFields: [TIER2_FEEDBACK_REQUIRED_FIELDS],
                                forcedValidationError: r
                            }
                        };
                        return e.Rating = jpQuery(n, "$.feedback.rating")[0] || "", e.Tip = jpQuery(n, "$.feedback.tip")[0] || "", e.Feedback = jpQuery(n, "$.feedback.tags")[0] || [], e.OrderTotal = jpQuery(n, "$.total")[0] || 0, e.ShopperName = jpQuery(n, "$.shopper.name")[0] || "", e.ItemsData = jpQuery(n, "$.items") || [], e.OrderType = t.OrderType || "", i(null)
                    } {
                        let a = {};
                        const n = r("#tier2Scraper").text().trim(),
                            i = r("#tier2ScraperCircleEarnings").text().trim(),
                            s = n && JSON.parse(n) || {},
                            o = i && JSON.parse(i) || {};
                        a.T2MiscInfo = {
                            pageData: s,
                            tier2ScraperCircleEarnings: o
                        }, a.StoreName = "Target", a.OrderCurrency = "USD";
                        let c = t,
                            l = function (e) {
                                return {
                                    order: a,
                                    requiredFields: [TIER2_REQUIRED_FIELDS],
                                    forcedValidationError: e
                                }
                            };
                            // a.OrderNumber = jpQuery(s, "$.order_number")[0] || "";
                            a.OrderNumber = t.OrderType == 'Online' ? (jpQuery(s, "$.order_number")[0] || '') : (jpQuery(s, "$.store_receipt_id")[0] || '')
                        if (c.OrderNumber != a.OrderNumber) return l(`T1 OrderNumber does not match T2 OrderNumber [${c.OrderNumber} != ${a.OrderNumber}]`);
                        const d = "Online" == t.OrderType ? jpQuery(s, "$.placed_date")[0] || "" : jpQuery(s, "$.order_purchase_date")[0] || "",
                            u = cleanDate(d),
                            p = "Invalid Date" == u ? d : u;
                        a.OrderPurchaseDate = d, a.OrderType = t.OrderType || "";
                        let m = jpQuery(s, "$.summary.total_product_price")[0] || 0;
                        a.OrderTotalWithoutTax = cleanFloat0(cleanCurrency(m)) ? cleanFloat0(cleanCurrency(m)) : m;
                        let f = jpQuery(s, "$.summary.total_adjustment")[0] || 0;
                        a.OrderTotalDiscount = cleanFloat0(cleanCurrency(f)) ? cleanFloat0(cleanCurrency(f)) : f;
                        let g = (jpQuery(s, "$.summary.fulfillment_charges..value") || []).reduce((e, r) => e + cleanFloat0(r), 0);
                        a.OrderDeliveryCharge = cleanFloat0(cleanCurrency(g)) ? cleanFloat0(cleanCurrency(g)) : g;
                        let h = jpQuery(s, "$.summary.total_taxes")[0] || 0;
                        a.OrderTax = cleanFloat0(cleanCurrency(h)) ? cleanFloat0(cleanCurrency(h)) : h;
                        let S = jpQuery(s, "$.summary.grand_total")[0] || 0;
                        a.OrderTotal = cleanFloat0(cleanCurrency(S)) ? cleanFloat0(cleanCurrency(S)) : S;
                        let v = (jpQuery(s, "$.payment_transactions")[0] || []).map(e => {
                            const r = e.amount || 0;
                            return {
                                method: e.payment_sub_type_value || "",
                                payment_sub_type: e.payment_sub_type_value || "",
                                payment_type: e.payment_type || "",
                                amount: cleanFloat0(cleanCurrency(r)) ? cleanFloat0(cleanCurrency(r)) : r,
                                card: e.card_number || ""
                            }
                        });
                        a.OrderPaymentMethod = v;
                        let O = `${merchant.baseUrl}/orders/${a.OrderNumber}/receipts`;
                        a.InvoiceURL = t.OrderType == 'Online' && O ? O : "", targetCircleEarnings = o && o.circle_earnings || 0, a.TargetCircleEarnings = cleanFloat0(cleanCurrency(targetCircleEarnings)), targetCircleVotes = o && o.votes_earned || 0, a.TargetCircleVotes = targetCircleVotes;
                        let y = (jpQuery(s, "$.summary.adjustments")[0] || []).map(e => (amount = e.promo_value || 0, {
                            name: e.promo_description || "",
                            amount: cleanFloat0(cleanCurrency(amount))
                        }));
                        a.OrderDiscounts = y;
                        let I = (jpQuery(s, "$.summary.taxes")[0] || []).map(e => (amount = e.value || 0, {
                            name:e.name || '', 
                            amount: amount
                        }));
                        a.OrderTaxes = I;
                        let A = (jpQuery(s, "$.summary.surcharges")[0] || []).map(e => (amount = e.value || 0, {
                            name:e.name || '', 
                            amount: amount
                        }));
                        a.OrderSurcharges = A;
                        const D = (jpQuery(s, "$.shipment_trackers")[0] || []).map(e => {
                            const r = e.receipt_id && e.receipt_id.replace(/-/g, '') || "",
                                t = `${merchant.baseUrl}/orders/${a.OrderNumber}/invoices/${r}`;
                            return {
                                OrderNumber: a.OrderNumber,
                                InvoiceURL: t
                            }
                        });
                        a.OrderInvoiceURLs = D;
                        const C = "Instore" == t.OrderType;
                        a.OrderHasReceipt = C;
                        let T = jpQuery(s, "$.order_lines")[0] || [];
                        a.OrderTotalItems = T.length;
                        const addressArray = jpQuery(s, "$.address")[0] || [];
        const P = addressArray && addressArray[0] || null;
                        "Online" == t.OrderType ? (a.OrderShippingName = P && (P.first_name + P.last_name) || "", a.OrderShippingAddress1 = P && P.address_line1 || "", a.OrderShippingAddress2 = "", a.OrderShippingCity = P && P.city || "", a.OrderShippingState = P && P.state || "", a.OrderShippingZip = P && P.zip_code || "", a.OrderShippingCountry = P && P.country || "") : (a.OrderMerchantName = P && P.first_name || "", a.OrderMerchantAddress1 = P && P.address_line1 || "", a.OrderMerchantAddress2 = "", a.OrderMerchantCity = P &&  P.city || "", a.OrderMerchantState = P && P.state || "", a.OrderMerchantZip = P && P.zip_code || "", a.OrderMerchantPhone = P && P.phone_number || "", a.OrderMerchantId = P && P.store_id || "");
                        let b = T.map((e, t) => {
                            const n = e.item || null,
                                i = n && n.description || "",
                                o = n && n.unit_price || 0,
                                c = e.original_quantity || e.quantity || 1,
                                se = n && n.seller_details || null,
                                l = o * c,
                        
                                u = n && n.tcin || "",
                                dp = n && n.dpci || "",
                                p = "A-" + u,
                                m = encodeURIComponent(i.toLowerCase().replace(/[^a-z0-9_-]+/gi, "-")),
                                f = `${merchant.baseUrl}/p/${m}/${p}`,
                                g = e.grouping && e.grouping.name || "",
                                h = g.includes("DELIVERED") ? "Delivered" : g.includes("ORDER_PICKED_UP") ? "Picked up" : g.includes("STORE_PURCHASE") ? "Purchased" : g.includes("REFUND_ISSUED") ? "Returned" : g.includes("CANCELED") ? "Canceled" : "Could not determine";
                    
                                const imageObj = n && n.images || null;
                                const image = imageObj && `${imageObj.base_url}${imageObj.primary_image}`  || 'Image could not be extracted'
                            const v = {
                                OrderItemIndex: cleanInt(t),
                                OrderItemTitle: i,
                                OrderItemUnitPrice: o,
                                OrderItemUnitPriceCurrency: a.OrderCurrency,
                                OrderItemTotalPrice: l,
                                OrderItemTotalPriceCurrency: a.OrderCurrency,
                                OrderItemQuantity: c,
                                OrderItemImage: image,
                                OrderItemFulfillmentType: h,
                                OrderItemProductURL: f,
                                ID: u,
                                OrderItemDPCI: dp,
                                OrderItemSellerDetail: se
                            };
                            let O = "";
                            switch (h) {
                                case "Delivered":
                                    O = e.fulfillment_spec || {}, v.OrderItemDeliveredTo = O;
                                    break;
                                case "Picked up":
                                    O = e.fulfillment_spec && e.fulfillment_spec.status && e.fulfillment_spec.status.date || "", v.OrderItemPickedUpAt = O;
                                    break;
                                case "Purchased":
                                    O = s.address || {}, v.OrderItemStoreLocation = O;
                                    break;
                                case "Returned":
                                    O = e.status || e.related_orders || {}, v.OrderItemReturnDetails = O
                            }
                            return v
                        });
                        if (a.ItemsData = b, "Online" == t.OrderType) {
                            const n = merchant.processScrapeTier2Invoice(e, r, t);
                            n && n.order && n.order.invoices && (a.OrderInvoiceData = n.order.invoices)
                        } else {
                            const n = merchant.processScrapeTier2Receipt(e, r, t);
                            n && n.order && n.order.receipt && (a.OrderReceiptData = n.order.receipt)
                        }
                        return l(null)
                    }
                }, merchant.processScrapeTier2Invoice = function (e, r, t) {
                    const a = [];
                    r("div[id*=tier2ScraperInvoice]").each(function () {
                        const e = r(this).text().trim(),
                            n = e && JSON.parse(e) || {},
                            i = merchant.scrapeInvoiceData(n, t);
                        a.push(i)
                    });
                    let n = {};
                    return n.OrderNumber = t.OrderNumber, n.ItemsData = ["items will be present in each invoice array element"], n.invoices = a, {
                        order: n,
                        requiredFields: [],
                        forcedValidationError: null
                    }
                }, 
                merchant.scrapeInvoiceData = function (e, r) {
                    let t = {},
                        a = [];
                    t.T2MiscInfo = {
                        pageData: e
                    }, t.InvoiceNumber = jpQuery(e, "$.id")[0] || "";
                    const n = jpQuery(e, "$.date")[0] || "",
                        i = cleanDate(n),
                        s = "Invalid Date" == i ? n : i;
                    return t.InvoiceDate = s, t.InvoiceTotal = jpQuery(e, "$.total_amount")[0] || "", t.OrderPaymentMethod = {
                        method: jpQuery(e, "$.payments[0].type")[0] || "",
                        amount: jpQuery(e, "$.payments[0].total_charged")[0] || "",
                        card: jpQuery(e, "$.payments[0].display_card_number")[0] || ""
                    }, t.InvoiceURL = `${merchant.baseUrl}/orders/${r.OrderNumber}/invoices/${t.InvoiceNumber}`, jpQuery(e, "$.lines[*]").forEach((e, r) => {
                        const t = jpQuery(e, "$.item.description")[0] || "",
                            id = jpQuery(e, "$.item.tcin")[0] || "",
                            n = jpQuery(e, "$.quantity")[0] || "",
                            i = jpQuery(e, "$.unit_price")[0] || "",
                            s = jpQuery(e, "$.effective_amount")[0] || "",
                            o = jpQuery(e, "$.sub_total")[0] || "",
                            am = jpQuery(e, "$.amount")[0] || "",
                            c = jpQuery(e, "$.effective_amount")[0] || "";
                        let l = [];
                        let d = "",
                            u = "",
                            p = "";
                        jpQuery(e, "$.taxes[*]").forEach((e, r) => {
                            const t = jpQuery(e, "$.name")[0] || "";
                            "SHIPPING" == t && (d = jpQuery(e, "$.value")[0] || ""), "SALES_TAX" == t && (u = jpQuery(e, "$.value")[0] || "")
                        }), jpQuery(e, "$.charges[*]").forEach((e, r) => {
                            if ("SHIPPING" == (jpQuery(e, "$.type")[0] || "") && (p = jpQuery(e, "$.value")[0] || ""), e.value < 0) {
                                const r = {
                                    description: e.promotion_details ? e.promotion_details.description : "",
                                    value: e.value
                                };
                                l.push(r)
                            }
                        }), a.push({
                            OrderItemIndex: cleanInt(r),
                            OrderItemTitle: t,
                            OrderItemID: id,
                            OrderItemUnitPrice: cleanFloat0(cleanCurrency(i)),
                            OrderItemUnitPriceCurrency: "USD",
                            OrderItemTotalPrice: cleanFloat0(cleanCurrency(s)),
                            OrderItemTotalPriceCurrency: "USD",
                            OrderItemQuantity: n,
                            OrderItemAmount: am,
                            OrderItemSubtotal: cleanFloat0(cleanCurrency(o)),
                            OrderItemTotal: cleanFloat0(cleanCurrency(c)),
                            OrderItemDeliveryCharge: cleanFloat0(cleanCurrency(p)),
                            OrderItemShippingTax: cleanFloat0(cleanCurrency(d)),
                            OrderItemSalesTax: cleanFloat0(cleanCurrency(u)),
                            OrderItemDiscounts: l
                        })
                    }), t.ItemsData = a, t
                };
                const LOAD_RECEIPT = "\nconst buttons = document.querySelectorAll('button');\nlet targetButton = null;\n\nbuttons.forEach(button => {\n  const divs = button.querySelectorAll('div');\n  divs.forEach(div => {\n        if (div.innerText.trim() === \"View your receipt\") {\n            targetButton = button;\n            return;\n          }\n  })\n});\nif(targetButton){\n    targetButton.click();\n}\n",
                    CHECK_LOAD_RECEIPT = `\n${ALL_LOADING_CHECK} &&\n\tdocument.querySelector('div[data-test*=receipt-container]') != undefined\n`;
                merchant.processScrapeTier2Receipt = function (e, r, t) {
                    const a = r("#tier2ScraperReceipt").text().trim();
                    let n = a && merchant.scrapeReceiptData(a) || {},
                        i = {};
                    return i.OrderNumber = t.OrderNumber, i.ItemsData = ["items will be present in each receipt element"], i.receipt = n, {
                        order: i,
                        requiredFields: [],
                        forcedValidationError: null
                    }
                }, merchant.scrapeReceiptData = function (e) {
                    const parsed_html = e.replace(/\\/g,"")
                    let r = global.cheerioLoad("scrapeTier2Receipt", parsed_html);
                    r[0];
                    const t = r[1];
                    let a = {};
                    const n = t("body");
                    let i = [];
                    n.find("td").toArray().forEach(e => {
                        t(e).text().trim() && "-" != t(e).text().trim() && i.push(t(e).text().trim())
                    });
                    const s = i.indexOf("SUBTOTAL"),
                        o = i.slice(0, s),
                        c = i.slice(s),
                        l = c.indexOf("SUBTOTAL");
                    l >= 0 && (a.ReceiptSubTotal = cleanFloat0(cleanCurrency(c[l + 1])));
                    const d = c.findIndex(e => e.includes("TAX"));
                    d >= 0 && (a.ReceiptTaxDetail = c[d], a.ReceiptTax = cleanFloat0(cleanCurrency(c[d + 1])));
                    const u = c.indexOf("TOTAL");
                    u >= 0 && (a.ReceiptTotal = c[u + 1]), a.ReceiptDiscounts = [];
                    const p = l + 2,
                        m = d - 1;
                    if (p < m)
                        for (let e = p; e <= m; e += 2) a.ReceiptDiscounts.push({
                            DiscountName: c[e],
                            DiscountValue: cleanFloat0(cleanCurrency(c[e + 1]))
                        });
                    const f = c.findIndex(e => e.includes("AID:"));
                    f >= 0 && (a.ReceiptAID = c[f] && c[f].replace("AID:", "").trim(), a.ReceiptPaymentType = c[f + 1]);
                    const g = c.indexOf("AUTH CODE:");
                    g >= 0 && (a.ReceiptAuthCode = c[g + 1]), a.ReceiptPaymentMethod = [];
                    const h = u + 2,
                        S = f - 1;
                    if (h < S)
                        for (let e = h; e <= S; e += 2) a.ReceiptPaymentMethod.push({
                            method: c[e],
                            amount: cleanFloat0(cleanCurrency(c[e + 1]))
                        });
                    const v = n.find("div.date").last().text().trim();
                    a.ReceiptPurchaseDate = "Invalid Date" == cleanDate(v) ? v : cleanDate(v);
                    let O = [];
                    n.find("div.store_info").toArray().forEach(e => {
                        O.push(t(e).text().trim())
                    }), a.ReceiptStoreAddress = O.join(" "), a.ReceiptStoreName = n.find("div.store_info").first().prev().text().trim();
                    const y = n.find('div:contains("REC#")').last().text().trim(),
                        I = y.match(/REC#[0-9-]+/g),
                        A = y.match(/VCD#[0-9-]+/g);
                    a.ReceiptNumber = I && I.length && I[0] && I[0].replace("REC#", "").trim() || "", a.ReceiptVCD = A && A.length && A[0] && A[0].replace("VCD#", "").trim() || "";
                    let D = [];
                    n.find('div:contains("Help make your Target Run better")').last().parent().children().toArray().forEach(e => {
                        D.push(t(e).text().trim())
                    }), a.ReceiptSurveyDetails = D.join(" ");
                    const C = {
                        T: "Taxable item",
                        N: "Nontaxable item",
                        F: "Food item"
                    };
                    let T = {},
                        P = [],
                        b = "";
                    o.forEach((e, r) => {
                        if (/^[A-Z ]*$/.test(e) && !T.id) b = e;
                        else if (/^\d{9}$/.test(e)) T = {
                            id: e,
                            category: b
                        };
                        else if (T.id && !T.title) T.title = e;
                        else if (T.title && /^\w{1}$/.test(e)) T.types ? T.types.push(C[e]) : T.types = [C[e]];
                        else if (T.title && !T.totalPrice) T.totalPrice = e;
                        else if (T.totalPrice && /\d+\W+@\W+\$/.test(e)) {
                            const r = e.match(/(\d+)\W+@/g),
                                t = e.match(/@\W+(\$\d+.\d+)\W+/g);
                            T.quantity = r && r.length && r[0] && r[0].replace("@", "").trim() || "1", T.unitprice = t && t.length && t[0] && t[0].replace("@", "").trim() || T.totalPrice
                        } else /^\d{9}$/.test(e) || /^[A-Z ]*$/.test(e) || (T.otherDetails ? T.otherDetails.push(e) : T.otherDetails = [e]);
                        T.id && T.title && T.totalPrice && (!o[r + 1] || o[r + 1] && /^\d{9}$/.test(o[r + 1]) || o[r + 1] && /^[A-Z ]*$/.test(o[r + 1])) && function () {
                            T.unitprice || (T.quantity = "1", T.unitprice = T.totalPrice);
                            T.otherDetails || (T.otherDetails = []);
                            P.push(T), T = {}
                        }()
                    });
                    const L = P.map((e, r) => ({
                        OrderItemIndex: cleanInt(r),
                        OrderItemTitle: e.title,
                        OrderItemUnitPrice: cleanFloat0(cleanCurrency(e.unitprice)),
                        OrderItemUnitPriceCurrency: "USD",
                        OrderItemTotalPrice: cleanFloat0(cleanCurrency(e.totalPrice)),
                        OrderItemTotalPriceCurrency: "USD",
                        OrderItemQuantity: e.quantity,
                        OrderItemDetails: e.otherDetails,
                        OrderItemType: e.types,
                        OrderItemCategory: e.category,
                        ID: e.id
                    }));
                    return a.ItemsData = L, a
                }, 
                merchant.apiKey = "ff457966e64d5e877fdbad070f276d18ecec4a01";
                merchant.handleInitialiseScrapeTier2 = function (e, r, t, a, n) {
                  if("Online" == t.OrderType && "ORDER" == n){
                      return `
                        window.isTier2Counter = 2;
                        document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                        console.log(document.querySelectorAll("[id*=tier2Scrape]").length, "${t.OrderType}");
                        function getOrderData(){
                          fetch("https://api.target.com/guest_order_aggregations/v1/${t.OrderID}?pending_order=true&shipt_status=true", {
                              headers: {
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              method: "GET",
                              credentials: "include"
                          }).then(e => e.json()).then(e => {
                              window.isTier2Counter -= 1;
                              if(!document.getElementById("tier2Scraper")){    
                              const r = document.createElement("div");
                              r.id = "tier2Scraper", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)} 
                              let a = JSON.parse(JSON.stringify(e)),
                                  n = "";
                              a.shipment_trackers.forEach(e => {
                                  window.isTier2Counter += 1;
                                  let r = e.receipt_id.replace(/-/g, "");
                                  n = r, getInvoiceDetails("${t.OrderID}", r)
                              })
                          })
                        }
  
                      function getInvoiceDetails(orderId, invoiceId){
                          fetch("https://api.target.com/post_order_invoices/v1/orders/" + orderId + "/invoices/" + invoiceId, {
                              headers: {
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              method: "GET",
                              credentials: "include"
                          }).then(e => e.json()).then(e => {
                              window.isTier2Counter-=1;
                              if(!document.getElementById("tier2ScraperInvoice")){const r = document.createElement("div");
                              r.id = "tier2ScraperInvoice", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)}
                          })
                      }
  
                      function getCircleEarnings(orderId){
                          fetch("https://api.target.com/loyalty_activities/v1/benefits/balances?order_id=" + orderId, {
                              headers: {
                                  accept: "application/json",
                                  "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                                  "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                                  "sec-ch-ua-mobile": "?0",
                                  "sec-ch-ua-platform": '"macOS"',
                                  "sec-fetch-dest": "empty",
                                  "sec-fetch-mode": "cors",
                                  "sec-fetch-site": "same-site",
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              referrer: "https://www.target.com/orders/" + orderId,
                              referrerPolicy: "no-referrer-when-downgrade",
                              body: null,
                              method: "GET",
                              mode: "cors",
                              credentials: "include"
                          }).then(e => e.text()).then(e => {
                            window.isTier2Counter-=1;
                            if(!document.getElementById("tier2ScraperCircleEarnings")){const r = document.createElement("div");
                              r.id = "tier2ScraperCircleEarnings", r.textContent = e, document.documentElement.appendChild(r)}
                          })
                      }

                      document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                      getOrderData();
                      getCircleEarnings("${t.OrderID}");
                      `
                  }
  
                  if("Online" == t.OrderType && "INVOICE" == n){
                      return `
                      document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                      console.log(document.querySelectorAll("[id*=tier2Scrape]").length, "${t.OrderType}");
                        function getInvoiceDetails(orderId, invoiceId){
                          fetch("https://api.target.com/post_order_invoices/v1/orders/" + orderId + "/invoices/" + invoiceId, {
                              headers: {
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              method: "GET",
                              credentials: "include"
                          }).then(e => e.json()).then(e => {
                              if(!document.getElementById("tier2ScraperInvoice")){const r = document.createElement("div");
                              r.id = "tier2ScraperInvoice", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)}
                          })
                      }
  
                      getInvoiceDetails("${t.OrderNumber}", ${t.OrderID});
                      `
                  }
  
                  if("Instore" == t.OrderType && "ORDER" == n){
                      return `
                      window.isTier2Counter = 3;
                      document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                      console.log(document.querySelectorAll("[id*=tier2Scrape]").length, "${t.OrderType}");
                       function getOrderData(){
                          fetch("https://api.target.com/guest_order_aggregations/v1/${t.OrderID}/store_order_details?subscription=false", {
                              headers: {
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              method: "GET",
                              credentials: "include"
                          }).then(e => e.json()).then(e => {                            
                              window.isTier2Counter -= 1;
                              if(!document.getElementById("tier2Scraper")){const r = document.createElement("div");
                              r.id = "tier2Scraper", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)} 
                              getReceiptDetails("${t.OrderID}")
                          })
                      }
  
                      function getCircleEarnings(orderId){
                          fetch("https://api.target.com/loyalty_activities/v1/benefits/balances?order_id=" + orderId, {
                              headers: {
                                  accept: "application/json",
                                  "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                                  "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                                  "sec-ch-ua-mobile": "?0",
                                  "sec-ch-ua-platform": '"macOS"',
                                  "sec-fetch-dest": "empty",
                                  "sec-fetch-mode": "cors",
                                  "sec-fetch-site": "same-site",
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              referrer: "https://www.target.com/orders/" + orderId,
                              referrerPolicy: "no-referrer-when-downgrade",
                              body: null,
                              method: "GET",
                              mode: "cors",
                              credentials: "include"
                          }).then(e => e.text()).then(e => {
                              window.isTier2Counter -= 1;
                              if(!document.getElementById("tier2ScraperCircleEarnings")){const r = document.createElement("div");
                              r.id = "tier2ScraperCircleEarnings", r.textContent = e, document.documentElement.appendChild(r)}
                          })
                      }
  
                      function getReceiptDetails(orderId){
                          let r = orderId.replace(/-/g, "");
                          fetch("https://api.target.com/receipts/v1/invoice", {
                              headers: {
                                  accept: "text/plain;charset=UTF-8",
                                  "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                                  "content-type": "application/json",
                                  "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                                  "sec-ch-ua-mobile": "?0",
                                  "sec-ch-ua-platform": '"macOS"',
                                  "sec-fetch-dest": "empty",
                                  "sec-fetch-mode": "cors",
                                  "sec-fetch-site": "same-site",
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              referrer: "https://www.target.com/orders/stores/" + orderId,
                              referrerPolicy: "no-referrer-when-downgrade",
                              body: '{"receipt_name":"Guest Sale Receipt","receipt_id":"' + r + '","printer_type":"html"}',
                              method: "POST",
                              mode: "cors",
                              credentials: "include"
                          }).then(e => e.text()).then(e => {
                              window.isTier2Counter -= 1;
                              if(!document.getElementById("tier2ScraperReceipt")){const r = document.createElement("div");
                              r.id = "tier2ScraperReceipt", r.textContent = e, document.documentElement.appendChild(r)}
                          })
                      }
  
                      getOrderData();
                      getCircleEarnings("${t.OrderID}");
                      `
                  }
  
                  if("Instore" == t.OrderType && "RECEIPT" == n){
                      return `
                      document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                      console.log(document.querySelectorAll("[id*=tier2Scrape]").length, "${t.OrderType}");
                        function getReceiptDetails(orderId){
                          let r = orderId.replace(/-/g, "");
                          fetch("https://api.target.com/receipts/v1/invoice", {
                              headers: {
                                  accept: "text/plain;charset=UTF-8",
                                  "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                                  "content-type": "application/json",
                                  "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                                  "sec-ch-ua-mobile": "?0",
                                  "sec-ch-ua-platform": '"macOS"',
                                  "sec-fetch-dest": "empty",
                                  "sec-fetch-mode": "cors",
                                  "sec-fetch-site": "same-site",
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              referrer: "https://www.target.com/orders/stores/" + orderId,
                              referrerPolicy: "no-referrer-when-downgrade",
                              body: '{"receipt_name":"Guest Sale Receipt","receipt_id":"' + r + '","printer_type":"html"}',
                              method: "POST",
                              mode: "cors",
                              credentials: "include"
                          }).then(e => e.text()).then(e => {
                              if(!document.getElementById("tier2ScraperReceipt")){const r = document.createElement("div");
                              r.id = "tier2ScraperReceipt", r.textContent = e, document.documentElement.appendChild(r)}
                          })
                      }
  
                      getReceiptDetails(${t.OrderID});
                      `
                  }
  
                  if("Online_TIP" == t.OrderType && "ORDER" == n){
                      return `
                      window.isTier2Counter = 1;
                      document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                      console.log(document.querySelectorAll("[id*=tier2Scrape]").length, "${t.OrderType}");
                        function getOrderData(){
                          fetch("https://api.target.com/post_order_modifications/v1/shipt/${t.OrderID.substring(2)}", {
                              headers: {
                                  accept: "application/json",
                                  "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                                  "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                                  "sec-ch-ua-mobile": "?0",
                                  "sec-ch-ua-platform": '"macOS"',
                                  "sec-fetch-dest": "empty",
                                  "sec-fetch-mode": "cors",
                                  "sec-fetch-site": "same-site",
                                  "x-api-key": "${merchant.apiKey}"
                              },
                              referrer: "https://www.target.com/orders/${t.OrderID.substring(2)}/shopper-feedback",
                              referrerPolicy: "no-referrer-when-downgrade",
                              body: null,
                              method: "GET",
                              mode: "cors",
                              credentials: "include"
                          }).then(e => e.json()).then(e => {
                            window.isTier2Counter -= 1;
                            if(!document.getElementById("tier2Scraper")){
                              const r = document.createElement("div");
                              r.id = "tier2Scraper", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)
                            }
                          })
                      }
                      document.querySelectorAll("[id*=tier2Scrape]").forEach(s=>s.remove());
                      getOrderData();
                      `
                  }
  
                  return 'could not find any matching order case';
  
                  //   return "Online" == t.OrderType && "ORDER" == n && fetch("https://api.target.com/guest_order_aggregations/v1/" + t.OrderID + "?pending_order=true&shipt_status=true", {
                  //       headers: {
                  //           "x-api-key": "ff457966e64d5e877fdbad070f276d18ecec4a01"
                  //       },
                  //       method: "GET",
                  //       credentials: "include"
                  //   }).then(e => e.json()).then(e => {
                  //       if(!document.getElementById("tier2Scraper")){    const r = document.createElement("div");
                  //       r.id = "tier2Scraper", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)} 
                  //       merchant.getCircleEarnings(t.OrderID);
                  //       let a = JSON.parse(JSON.stringify(e)),
                  //           n = "";
                  //       a.shipment_trackers.forEach(e => {
                  //           let r = e.receipt_id.replace(/-/g, "");
                  //           n = r, merchant.getInvoiceDetails(t.OrderID, r)
                  //       })
                  //   }), "Online" == t.OrderType && "INVOICE" == n && merchant.getInvoiceDetails(t.OrderNumber, t.OrderID), 
                  //   "Instore" == t.OrderType && "ORDER" == n && (fetch("https://api.target.com/guest_order_aggregations/v1/" + t.OrderID + "/store_order_details?subscription=false", {
                  //       headers: {
                  //           "x-api-key": "ff457966e64d5e877fdbad070f276d18ecec4a01"
                  //       },
                  //       method: "GET",
                  //       credentials: "include"
                  //   }).then(e => e.json()).then(e => {
                  //       if(!document.getElementById("tier2Scraper")){const r = document.createElement("div");
                  //       r.id = "tier2Scraper", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)} merchant.getReceiptDetails(t.OrderID)
                  //   }), merchant.getCircleEarnings(t.OrderID)), "Instore" == t.OrderType && "RECEIPT" == n && merchant.getReceiptDetails(t.OrderID), 
                  //   "Online_TIP" == t.OrderType && "ORDER" == n && 
                  //   fetch("https://api.target.com/post_order_modifications/v1/shipt/" + t.OrderID.substring(2), {
                  //       headers: {
                  //           accept: "application/json",
                  //           "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                  //           "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                  //           "sec-ch-ua-mobile": "?0",
                  //           "sec-ch-ua-platform": '"macOS"',
                  //           "sec-fetch-dest": "empty",
                  //           "sec-fetch-mode": "cors",
                  //           "sec-fetch-site": "same-site",
                  //           "x-api-key": "ff457966e64d5e877fdbad070f276d18ecec4a01"
                  //       },
                  //       referrer: "https://www.target.com/orders/" + t.OrderID.substring(2) + "/shopper-feedback",
                  //       referrerPolicy: "no-referrer-when-downgrade",
                  //       body: null,
                  //       method: "GET",
                  //       mode: "cors",
                  //       credentials: "include"
                  //   }).then(e => e.json()).then(e => {
                  //       const r = document.createElement("div");
                  //       r.id = "tier2Scraper", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)
                  //   }), 2e3
                }, merchant.handleScrapeTier3 = function (e, r, t) {
                    const a = merchant.extractTier3PageData(r),
                        n = t.OrderItemProductURL,
                        i = n && n.match(/A-\d{8}/g) || null,
                        s = i && i.length && i[0] ? i[0].replace("A-", "").trim() : t.ID,
                        o = jpQuery(a, "$..product.children")[0],
                        c = jpQuery(a, "$..product.item")[0];
                    let l = null;
                    const d = (l = o ? o && o.find(e => e.tcin == s) || null : c || null) && jpQuery(l, "$..primary_barcode")[0] || "",
                        u = l && jpQuery(l, "$..primary_brand.name")[0] || "",
                        p = l && jpQuery(l, "$..title")[0] || "",
                        m = l && jpQuery(l, "$..handling")[0] || "",
                        f = l && jpQuery(l, "$..package_dimensions.weight")[0] || "",
                        g = l && jpQuery(l, "$..package_dimensions.weight_unit_of_measure")[0] || "",
                        h = l && jpQuery(l, "$..package_dimensions.height")[0] || "",
                        S = l && jpQuery(l, "$..package_dimensions.depth")[0] || "",
                        v = l && jpQuery(l, "$..package_dimensions.width")[0] || "",
                        O = l && jpQuery(l, "$..package_dimensions.dimension_unit_of_measure")[0] || "",
                        y = l && jpQuery(l, "$..merchandise_classification")[0] || "",
                        I = l && jpQuery(l, "$..product_classification")[0] || "";
                    let A = {
                        OrderItemAmazonCategoryName: "Regular"
                    };
                    return A.OrderItemBrand = u, A.OrderItemManufacturer = m, A.OrderItemProductURL = t.OrderItemProductURL, A.OrderItemTitle = p, A.OrderItemUPC = d, A.OrderItemWeight = f, A.OrderItemHeight = h, A.OrderItemDepth = S, A.OrderItemWidth = v, A.OrderItemWeightUnit = g, A.OrderItemDimensionUnit = O, A.OrderItemDepartment = y, A.OrderItemCategory = I, A.T3MiscInfo = a, {
                        order: A,
                        requiredFields: TIER3_REQUIRED_FIELDS,
                        forcedValidationError: void 0
                    }
                }, merchant.extractTier3PageData = function (e) {
                    let r = [];
                    const t = e("script:contains('__CONFIG__')").cleanScript().matchAll(/deepFreeze\(JSON.parse\((.*?)\)\),/gm);
                    for (const e of t) {
                        const t = e && e[1] || null;
                        if (isSafeValue(t)) try {
                            const e = JSON.parse(t);
                            r.push(JSON.parse(e))
                        } catch (e) { }
                    }
                    return r
                }, merchant.handleRepeatedTags = function (e) { }, merchant.switchHistoryTabs = '\n    var onlineLink = document.querySelector(\'a[data-test="tabOnline"]\');\n    if (onlineLink != undefined && onlineLink.ariaLabel.endsWith("selected") == false) {\n        onlineLink.click();\n        return;\n    }\n    var instoreLink = document.querySelector(\'a[data-test="tabInstore"]\');\n    if (instoreLink != undefined && instoreLink.ariaLabel.endsWith("selected") == false) {\n        instoreLink.click();\n        return;\n    }\n', merchant.endScrapingOrderHistory = function (e) {
                    let r = [];
                    for (let e = null != merchant.validOrdersList ? merchant.validOrdersList : [], t = 0, a = void 0; a = e[t], t < e.length; t++) {
                        let e = {};
                        e.OrderNumber = a.orderId, e.OrderID = a.orderId, e.OrderAmazonService = scraper.tier1Service, e.OrderType = a.orderType, e.OrderPurchaseDate = cleanDate(a.dateTime), e.T1MiscInfo = JSON.stringify(a), e.OrderDetailURL = `${merchant.baseUrl}${a.orderUrl}`, r.push(e)
                    }
                    return scraper.finishedOrdersHistory(r), {
                        command: "runAjax",
                        progress: scraper.progressCurrent,
                        script: "",
                        script2: "true",
                        state: scraper.state,
                        scraperStorageJson: scraperStorageAsJson(),
                        tag: `moving to drain all orders [${e}]`
                    }
                }, merchant.getUnifiedOrderId = function (e) {
                    return jpQueryMany(e, ["$..order_number", "$..store_receipt_id"])[0]
                }, merchant.extractPageData = function ($) {
                    let pageDataJson = {},
                        pageDataScript = $("script:contains(__PRELOADED_STATE__)");
                    if (isSafeValue(pageDataScript[0]) && isSafeValue(pageDataScript[0].children) && isSafeValue(pageDataScript[0].children[0]) && isSafeValue(pageDataScript[0].children[0].data)) {
                        let script = String(pageDataScript[0].children[0].data);
                        "string" == typeof script && (script.replace("window.__PRELOADED_STATE__ =", ""), pageDataJson = eval(script))
                    }
                    return pageDataJson
                }, merchant.constructSignInScript = function (e, r, t) {
                    let a = escapePassword(t);
                    scraper.runAjaxMinDelay, Math.random(), scraper.runAjaxMaxDelay, scraper.runAjaxMinDelay;
                    return `\n        let delay = 0;\n        \n        ${reactSetValueScript()}\n        \n        let sleep = function (delay) {\n            var start = new Date().getTime();\n            while (new Date().getTime() < start + delay);\n        }\n        \n        let username = '${r}';\n        let password = '${a}';\n                                \n        let perform = function(callback) {\n            setTimeout(function() {\n                callback();\n            }, delay);\n            delay += 4000 + Math.random() * 500;\n        }\n                    \n        let emailField = document.querySelector("input[name=username],input[id=username],input[id=email],input[id=email],input[name=email]");\n        if (emailField != undefined) {\n            perform(function() {\n                enterText(emailField, username);\n            });\n        }\n        \n        let passwordField = document.querySelector("input[type=password]");\n        if (passwordField != undefined) {\n            perform(function() {\n                enterText(passwordField, password);\n            });\n        }\n        \n        let rememberMe = document.querySelector("input[name=keepMeSignedIn]");\n        if (rememberMe != undefined && rememberMe.checked == false) {\n            perform(function() {\n                rememberMe.click();\n            });\n        }\n        \n        var shouldClickDefaultSubmitButton = true;\n        \n        if (shouldClickDefaultSubmitButton == true) {\n            let signInBtn1 = document.querySelector("button[type=submit]");\n            if (signInBtn1 != undefined) {\n                perform(function() {\n                    signInBtn1.click();\n                });\n            }\n        }\n                    \n        return true;\n    `
                }, merchant.getInvoiceDetails = function (e, r) {
                    fetch("https://api.target.com/post_order_invoices/v1/orders/" + e + "/invoices/" + r, {
                        headers: {
                            "x-api-key": "ff457966e64d5e877fdbad070f276d18ecec4a01"
                        },
                        method: "GET",
                        credentials: "include"
                    }).then(e => e.json()).then(e => {
                        if(!document.getElementById("tier2ScraperInvoice")){const r = document.createElement("div");
                        r.id = "tier2ScraperInvoice", r.textContent = JSON.stringify(e), document.documentElement.appendChild(r)}
                    })
                }, merchant.getReceiptDetails = function (e) {
                    let r = e.replace(/-/g, "");
                    fetch("https://api.target.com/receipts/v1/invoice", {
                        headers: {
                            accept: "text/plain;charset=UTF-8",
                            "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                            "content-type": "application/json",
                            "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                            "sec-ch-ua-mobile": "?0",
                            "sec-ch-ua-platform": '"macOS"',
                            "sec-fetch-dest": "empty",
                            "sec-fetch-mode": "cors",
                            "sec-fetch-site": "same-site",
                            "x-api-key": "ff457966e64d5e877fdbad070f276d18ecec4a01"
                        },
                        referrer: "https://www.target.com/orders/stores/" + e,
                        referrerPolicy: "no-referrer-when-downgrade",
                        body: '{"receipt_name":"Guest Sale Receipt","receipt_id":"' + r + '","printer_type":"html"}',
                        method: "POST",
                        mode: "cors",
                        credentials: "include"
                    }).then(e => e.text()).then(e => {
                        if(!document.getElementById("tier2ScraperReceipt")){const r = document.createElement("div");
                        r.id = "tier2ScraperReceipt", r.textContent = e, document.documentElement.appendChild(r)}
                    })
                }, merchant.getCircleEarnings = function (e) {
                    fetch("https://api.target.com/loyalty_activities/v1/benefits/balances?order_id=" + e, {
                        headers: {
                            accept: "application/json",
                            "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
                            "sec-ch-ua": '"Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"',
                            "sec-ch-ua-mobile": "?0",
                            "sec-ch-ua-platform": '"macOS"',
                            "sec-fetch-dest": "empty",
                            "sec-fetch-mode": "cors",
                            "sec-fetch-site": "same-site",
                            "x-api-key": "ff457966e64d5e877fdbad070f276d18ecec4a01"
                        },
                        referrer: "https://www.target.com/orders/" + e,
                        referrerPolicy: "no-referrer-when-downgrade",
                        body: null,
                        method: "GET",
                        mode: "cors",
                        credentials: "include"
                    }).then(e => e.text()).then(e => {
                        if(!document.getElementById("tier2ScraperCircleEarnings")){const r = document.createElement("div");
                        r.id = "tier2ScraperCircleEarnings", r.textContent = e, document.documentElement.appendChild(r)}
                    })
                }, merchant.debugNextStep = function (e, r, t, a) {
                    return merchant.numberExpectedTotalOrders = 0, merchant.numberOrdersInPreviousGroups = 0, scraper.delayAfterLoadCommand && global.nextStep(e), global.nextStep(e)
                }, merchant.getPwdCaptureScript = function () {
                    return '\n        if (true) { let password = undefined; let passwordDiv = document.querySelector("input[type=password]"); if (passwordDiv != undefined) { password = passwordDiv.value; } password; }\n    '
                }, merchant.getUsernameCaptureScript = function () {
                    return '\n        if (true) { let email = undefined; let emailDiv = document.querySelector("input[name=username],input[id=username],input[id=email],input[type=email],input[name=email]"); if (emailDiv != undefined) { email = emailDiv.value; } email; }\n    '
                }, merchant.getAdditionalVerificationScript = function (e, r, t) {
                    return `\n        ${SHIELDS_UP}\n        ${getAdditionalVerificationScript()}\n    `
                }, merchant.confirmOrderListPageUrl = function (e) {
                    let r = ["status=success"];
                    if (hasRover) return r;
                    for (let t = null != r ? r : [], a = 0, n = void 0; n = t[a], a < t.length; a++)
                        if (stringContainsAnyCase(n, e)) return !0;
                    return !1
                };
  
            }).call(this)
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, require("buffer").Buffer)
    }, {
        "buffer": 79,
        "cheerio": 12,
        "jsonpath": 58,
        "moment": 59
    }],
    2: [function (require, module, exports) {
        module.exports = {
            trueFunc: function () {
                return !0
            },
            falseFunc: function () {
                return !1
            }
        };
  
    }, {}],
    3: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.groupSelectors = exports.getDocumentRoot = void 0;
        var positionals_js_1 = require("./positionals.js");
  
        function getDocumentRoot(o) {
            for (; o.parent;) o = o.parent;
            return o
        }
  
        function groupSelectors(o) {
            for (var e = [], t = [], r = 0, s = o; r < s.length; r++) {
                var u = s[r];
                u.some(positionals_js_1.isFilter) ? e.push(u) : t.push(u)
            }
            return [t, e]
        }
        exports.getDocumentRoot = getDocumentRoot, exports.groupSelectors = groupSelectors;
  
    }, {
        "./positionals.js": 5
    }],
    4: [function (require, module, exports) {
        "use strict";
        var __assign = this && this.__assign || function () {
            return (__assign = Object.assign || function (e) {
                for (var t, r = 1, s = arguments.length; r < s; r++)
                    for (var n in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                return e
            }).apply(this, arguments)
        },
            __createBinding = this && this.__createBinding || (Object.create ? function (e, t, r, s) {
                void 0 === s && (s = r);
                var n = Object.getOwnPropertyDescriptor(t, r);
                n && ("get" in n ? t.__esModule : !n.writable && !n.configurable) || (n = {
                    enumerable: !0,
                    get: function () {
                        return t[r]
                    }
                }), Object.defineProperty(e, s, n)
            } : function (e, t, r, s) {
                void 0 === s && (s = r), e[s] = t[r]
            }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && __createBinding(t, e, r);
                return __setModuleDefault(t, e), t
            },
            __spreadArray = this && this.__spreadArray || function (e, t, r) {
                if (r || 2 === arguments.length)
                    for (var s, n = 0, i = t.length; n < i; n++) !s && n in t || (s || (s = Array.prototype.slice.call(t, 0, n)), s[n] = t[n]);
                return e.concat(s || Array.prototype.slice.call(t))
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.select = exports.filter = exports.some = exports.is = exports.aliases = exports.pseudos = exports.filters = void 0;
        var css_what_1 = require("css-what"),
            css_select_1 = require("css-select"),
            DomUtils = __importStar(require("domutils")),
            boolbase = __importStar(require("boolbase")),
            helpers_js_1 = require("./helpers.js"),
            positionals_js_1 = require("./positionals.js"),
            css_select_2 = require("css-select");
        Object.defineProperty(exports, "filters", {
            enumerable: !0,
            get: function () {
                return css_select_2.filters
            }
        }), Object.defineProperty(exports, "pseudos", {
            enumerable: !0,
            get: function () {
                return css_select_2.pseudos
            }
        }), Object.defineProperty(exports, "aliases", {
            enumerable: !0,
            get: function () {
                return css_select_2.aliases
            }
        });
        var UNIVERSAL_SELECTOR = {
            type: css_what_1.SelectorType.Universal,
            namespace: null
        },
            SCOPE_PSEUDO = {
                type: css_what_1.SelectorType.Pseudo,
                name: "scope",
                data: null
            };
  
        function is(e, t, r) {
            return void 0 === r && (r = {}), some([e], t, r)
        }
  
        function some(e, t, r) {
            if (void 0 === r && (r = {}), "function" == typeof t) return e.some(t);
            var s = (0, helpers_js_1.groupSelectors)((0, css_what_1.parse)(t)),
                n = s[0],
                i = s[1];
            return n.length > 0 && e.some((0, css_select_1._compileToken)(n, r)) || i.some(function (t) {
                return filterBySelector(t, e, r).length > 0
            })
        }
  
        function filterByPosition(e, t, r, s) {
            var n = "string" == typeof r ? parseInt(r, 10) : NaN;
            switch (e) {
                case "first":
                case "lt":
                    return t;
                case "last":
                    return t.length > 0 ? [t[t.length - 1]] : t;
                case "nth":
                case "eq":
                    return isFinite(n) && Math.abs(n) < t.length ? [n < 0 ? t[t.length + n] : t[n]] : [];
                case "gt":
                    return isFinite(n) ? t.slice(n + 1) : [];
                case "even":
                    return t.filter(function (e, t) {
                        return t % 2 == 0
                    });
                case "odd":
                    return t.filter(function (e, t) {
                        return t % 2 == 1
                    });
                case "not":
                    var i = new Set(filterParsed(r, t, s));
                    return t.filter(function (e) {
                        return !i.has(e)
                    })
            }
        }
  
        function filter(e, t, r) {
            return void 0 === r && (r = {}), filterParsed((0, css_what_1.parse)(e), t, r)
        }
  
        function filterParsed(e, t, r) {
            if (0 === t.length) return [];
            var s, n = (0, helpers_js_1.groupSelectors)(e),
                i = n[0],
                l = n[1];
            if (i.length) {
                var o = filterElements(t, i, r);
                if (0 === l.length) return o;
                o.length && (s = new Set(o))
            }
            for (var a = 0; a < l.length && (null == s ? void 0 : s.size) !== t.length; a++) {
                var c = l[a];
                if (0 === (s ? t.filter(function (e) {
                    return DomUtils.isTag(e) && !s.has(e)
                }) : t).length) break;
                if ((o = filterBySelector(c, t, r)).length)
                    if (s) o.forEach(function (e) {
                        return s.add(e)
                    });
                    else {
                        if (a === l.length - 1) return o;
                        s = new Set(o)
                    }
            }
            return void 0 !== s ? s.size === t.length ? t : t.filter(function (e) {
                return s.has(e)
            }) : []
        }
  
        function filterBySelector(e, t, r) {
            var s;
            if (e.some(css_what_1.isTraversal)) {
                var n = null !== (s = r.root) && void 0 !== s ? s : (0, helpers_js_1.getDocumentRoot)(t[0]),
                    i = __assign(__assign({}, r), {
                        context: t,
                        relativeSelector: !1
                    });
                return e.push(SCOPE_PSEUDO), findFilterElements(n, e, i, !0, t.length)
            }
            return findFilterElements(t, e, r, !1, t.length)
        }
  
        function select(e, t, r, s) {
            if (void 0 === r && (r = {}), void 0 === s && (s = 1 / 0), "function" == typeof e) return find(t, e);
            var n = (0, helpers_js_1.groupSelectors)((0, css_what_1.parse)(e)),
                i = n[0],
                l = n[1].map(function (e) {
                    return findFilterElements(t, e, r, !0, s)
                });
            return i.length && l.push(findElements(t, i, r, s)), 0 === l.length ? [] : 1 === l.length ? l[0] : DomUtils.uniqueSort(l.reduce(function (e, t) {
                return __spreadArray(__spreadArray([], e, !0), t, !0)
            }))
        }
  
        function findFilterElements(e, t, r, s, n) {
            var i = t.findIndex(positionals_js_1.isFilter),
                l = t.slice(0, i),
                o = t[i],
                a = t.length - 1 === i ? n : 1 / 0,
                c = (0, positionals_js_1.getLimit)(o.name, o.data, a);
            if (0 === c) return [];
            var u = (0 !== l.length || Array.isArray(e) ? 0 === l.length ? (Array.isArray(e) ? e : [e]).filter(DomUtils.isTag) : s || l.some(css_what_1.isTraversal) ? findElements(e, [l], r, c) : filterElements(e, [l], r) : DomUtils.getChildren(e).filter(DomUtils.isTag)).slice(0, c),
                _ = filterByPosition(o.name, u, o.data, r);
            if (0 === _.length || t.length === i + 1) return _;
            var f = t.slice(i + 1),
                p = f.some(css_what_1.isTraversal);
            if (p) {
                if ((0, css_what_1.isTraversal)(f[0])) {
                    var h = f[0].type;
                    h !== css_what_1.SelectorType.Sibling && h !== css_what_1.SelectorType.Adjacent || (_ = (0, css_select_1.prepareContext)(_, DomUtils, !0)), f.unshift(UNIVERSAL_SELECTOR)
                }
                r = __assign(__assign({}, r), {
                    relativeSelector: !1,
                    rootFunc: function (e) {
                        return _.includes(e)
                    }
                })
            } else r.rootFunc && r.rootFunc !== boolbase.trueFunc && (r = __assign(__assign({}, r), {
                rootFunc: boolbase.trueFunc
            }));
            return f.some(positionals_js_1.isFilter) ? findFilterElements(_, f, r, !1, n) : p ? findElements(_, [f], r, n) : filterElements(_, [f], r)
        }
  
        function findElements(e, t, r, s) {
            return find(e, (0, css_select_1._compileToken)(t, r, e), s)
        }
  
        function find(e, t, r) {
            void 0 === r && (r = 1 / 0);
            var s = (0, css_select_1.prepareContext)(e, DomUtils, t.shouldTestNextSiblings);
            return DomUtils.find(function (e) {
                return DomUtils.isTag(e) && t(e)
            }, s, !0, r)
        }
  
        function filterElements(e, t, r) {
            var s = (Array.isArray(e) ? e : [e]).filter(DomUtils.isTag);
            if (0 === s.length) return s;
            var n = (0, css_select_1._compileToken)(t, r);
            return n === boolbase.trueFunc ? s : s.filter(n)
        }
        exports.is = is, exports.some = some, exports.filter = filter, exports.select = select;
  
    }, {
        "./helpers.js": 3,
        "./positionals.js": 5,
        "boolbase": 2,
        "css-select": 23,
        "css-what": 30,
        "domutils": 41
    }],
    5: [function (require, module, exports) {
        "use strict";
  
        function isFilter(e) {
            return "pseudo" === e.type && (!!exports.filterNames.has(e.name) || !("not" !== e.name || !Array.isArray(e.data)) && e.data.some(function (e) {
                return e.some(isFilter)
            }))
        }
  
        function getLimit(e, t, r) {
            var s = null != t ? parseInt(t, 10) : NaN;
            switch (e) {
                case "first":
                    return 1;
                case "nth":
                case "eq":
                    return isFinite(s) ? s >= 0 ? s + 1 : 1 / 0 : 0;
                case "lt":
                    return isFinite(s) ? s >= 0 ? Math.min(s, r) : 1 / 0 : 0;
                case "gt":
                    return isFinite(s) ? 1 / 0 : 0;
                case "odd":
                    return 2 * r;
                case "even":
                    return 2 * r - 1;
                case "last":
                case "not":
                    return 1 / 0
            }
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.getLimit = exports.isFilter = exports.filterNames = void 0, exports.filterNames = new Set(["first", "last", "eq", "gt", "nth", "lt", "even", "odd"]), exports.isFilter = isFilter, exports.getLimit = getLimit;
  
    }, {}],
    6: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.removeAttr = exports.val = exports.data = exports.prop = exports.attr = void 0;
        var static_js_1 = require("../static.js"),
            utils_js_1 = require("../utils.js"),
            domutils_1 = require("domutils"),
            hasOwn = Object.prototype.hasOwnProperty,
            rspace = /\s+/,
            dataAttrPrefix = "data-",
            primitives = {
                null: null,
                true: !0,
                false: !1
            },
            rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
            rbrace = /^{[^]*}$|^\[[^]*]$/;
  
        function getAttr(t, s, e) {
            var a;
            if (t && (0, utils_js_1.isTag)(t)) return null !== (a = t.attribs) && void 0 !== a || (t.attribs = {}), s ? hasOwn.call(t.attribs, s) ? !e && rboolean.test(s) ? s : t.attribs[s] : "option" === t.name && "value" === s ? (0, static_js_1.text)(t.children) : "input" !== t.name || "radio" !== t.attribs.type && "checkbox" !== t.attribs.type || "value" !== s ? void 0 : "on" : t.attribs
        }
  
        function setAttr(t, s, e) {
            null === e ? removeAttribute(t, s) : t.attribs[s] = "".concat(e)
        }
  
        function attr(t, s) {
            if ("object" == typeof t || void 0 !== s) {
                if ("function" == typeof s) {
                    if ("string" != typeof t) throw new Error("Bad combination of arguments.");
                    return (0, utils_js_1.domEach)(this, function (e, a) {
                        (0, utils_js_1.isTag)(e) && setAttr(e, t, s.call(e, a, e.attribs[t]))
                    })
                }
                return (0, utils_js_1.domEach)(this, function (e) {
                    (0, utils_js_1.isTag)(e) && ("object" == typeof t ? Object.keys(t).forEach(function (s) {
                        var a = t[s];
                        setAttr(e, s, a)
                    }) : setAttr(e, t, s))
                })
            }
            return arguments.length > 1 ? this : getAttr(this[0], t, this.options.xmlMode)
        }
  
        function getProp(t, s, e) {
            return s in t ? t[s] : !e && rboolean.test(s) ? void 0 !== getAttr(t, s, !1) : getAttr(t, s, e)
        }
  
        function setProp(t, s, e, a) {
            s in t ? t[s] = e : setAttr(t, s, !a && rboolean.test(s) ? e ? "" : null : "".concat(e))
        }
  
        function prop(t, s) {
            var e, a = this;
            if ("string" == typeof t && void 0 === s) {
                var r = this[0];
                if (!r || !(0, utils_js_1.isTag)(r)) return;
                switch (t) {
                    case "style":
                        var i = this.css(),
                            o = Object.keys(i);
                        return o.forEach(function (t, s) {
                            i[s] = t
                        }), i.length = o.length, i;
                    case "tagName":
                    case "nodeName":
                        return r.name.toUpperCase();
                    case "href":
                    case "src":
                        var n = null === (e = r.attribs) || void 0 === e ? void 0 : e[t];
                        return "undefined" == typeof URL || ("href" !== t || "a" !== r.tagName && "link" !== r.name) && ("src" !== t || "img" !== r.tagName && "iframe" !== r.tagName && "audio" !== r.tagName && "video" !== r.tagName && "source" !== r.tagName) || void 0 === n || !this.options.baseURI ? n : new URL(n, this.options.baseURI).href;
                    case "innerText":
                        return (0, domutils_1.innerText)(r);
                    case "textContent":
                        return (0, domutils_1.textContent)(r);
                    case "outerHTML":
                        return this.clone().wrap("<container />").parent().html();
                    case "innerHTML":
                        return this.html();
                    default:
                        return getProp(r, t, this.options.xmlMode)
                }
            }
            if ("object" == typeof t || void 0 !== s) {
                if ("function" == typeof s) {
                    if ("object" == typeof t) throw new Error("Bad combination of arguments.");
                    return (0, utils_js_1.domEach)(this, function (e, r) {
                        (0, utils_js_1.isTag)(e) && setProp(e, t, s.call(e, r, getProp(e, t, a.options.xmlMode)), a.options.xmlMode)
                    })
                }
                return (0, utils_js_1.domEach)(this, function (e) {
                    (0, utils_js_1.isTag)(e) && ("object" == typeof t ? Object.keys(t).forEach(function (s) {
                        var r = t[s];
                        setProp(e, s, r, a.options.xmlMode)
                    }) : setProp(e, t, s, a.options.xmlMode))
                })
            }
        }
  
        function setData(t, s, e) {
            var a, r = t;
            null !== (a = r.data) && void 0 !== a || (r.data = {}), "object" == typeof s ? Object.assign(r.data, s) : "string" == typeof s && void 0 !== e && (r.data[s] = e)
        }
  
        function readData(t, s) {
            var e, a, r;
            null == s ? a = (e = Object.keys(t.attribs).filter(function (t) {
                return t.startsWith(dataAttrPrefix)
            })).map(function (t) {
                return (0, utils_js_1.camelCase)(t.slice(dataAttrPrefix.length))
            }) : (e = [dataAttrPrefix + (0, utils_js_1.cssCase)(s)], a = [s]);
            for (var i = 0; i < e.length; ++i) {
                var o = e[i],
                    n = a[i];
                if (hasOwn.call(t.attribs, o) && !hasOwn.call(t.data, n)) {
                    if (r = t.attribs[o], hasOwn.call(primitives, r)) r = primitives[r];
                    else if (r === String(Number(r))) r = Number(r);
                    else if (rbrace.test(r)) try {
                        r = JSON.parse(r)
                    } catch (t) { }
                    t.data[n] = r
                }
            }
            return null == s ? t.data : r
        }
  
        function data(t, s) {
            var e, a = this[0];
            if (a && (0, utils_js_1.isTag)(a)) {
                var r = a;
                return null !== (e = r.data) && void 0 !== e || (r.data = {}), t ? "object" == typeof t || void 0 !== s ? ((0, utils_js_1.domEach)(this, function (e) {
                    (0, utils_js_1.isTag)(e) && ("object" == typeof t ? setData(e, t) : setData(e, t, s))
                }), this) : hasOwn.call(r.data, t) ? r.data[t] : readData(r, t) : readData(r)
            }
        }
  
        function val(t) {
            var s = 0 === arguments.length,
                e = this[0];
            if (!e || !(0, utils_js_1.isTag)(e)) return s ? void 0 : this;
            switch (e.name) {
                case "textarea":
                    return this.text(t);
                case "select":
                    var a = this.find("option:selected");
                    if (!s) {
                        if (null == this.attr("multiple") && "object" == typeof t) return this;
                        this.find("option").removeAttr("selected");
                        for (var r = "object" != typeof t ? [t] : t, i = 0; i < r.length; i++) this.find('option[value="'.concat(r[i], '"]')).attr("selected", "");
                        return this
                    }
                    return this.attr("multiple") ? a.toArray().map(function (t) {
                        return (0, static_js_1.text)(t.children)
                    }) : a.attr("value");
                case "input":
                case "option":
                    return s ? this.attr("value") : this.attr("value", t)
            }
        }
  
        function removeAttribute(t, s) {
            t.attribs && hasOwn.call(t.attribs, s) && delete t.attribs[s]
        }
  
        function splitNames(t) {
            return t ? t.trim().split(rspace) : []
        }
  
        function removeAttr(t) {
            for (var s = splitNames(t), e = function (t) {
                (0, utils_js_1.domEach)(a, function (e) {
                    (0, utils_js_1.isTag)(e) && removeAttribute(e, s[t])
                })
            }, a = this, r = 0; r < s.length; r++) e(r);
            return this
        }
  
        function hasClass(t) {
            return this.toArray().some(function (s) {
                var e = (0, utils_js_1.isTag)(s) && s.attribs.class,
                    a = -1;
                if (e && t.length)
                    for (;
                        (a = e.indexOf(t, a + 1)) > -1;) {
                        var r = a + t.length;
                        if ((0 === a || rspace.test(e[a - 1])) && (r === e.length || rspace.test(e[r]))) return !0
                    }
                return !1
            })
        }
  
        function addClass(t) {
            if ("function" == typeof t) return (0, utils_js_1.domEach)(this, function (s, e) {
                if ((0, utils_js_1.isTag)(s)) {
                    var a = s.attribs.class || "";
                    addClass.call([s], t.call(s, e, a))
                }
            });
            if (!t || "string" != typeof t) return this;
            for (var s = t.split(rspace), e = this.length, a = 0; a < e; a++) {
                var r = this[a];
                if ((0, utils_js_1.isTag)(r)) {
                    var i = getAttr(r, "class", !1);
                    if (i) {
                        for (var o = " ".concat(i, " "), n = 0; n < s.length; n++) {
                            var l = "".concat(s[n], " ");
                            o.includes(" ".concat(l)) || (o += l)
                        }
                        setAttr(r, "class", o.trim())
                    } else setAttr(r, "class", s.join(" ").trim())
                }
            }
            return this
        }
  
        function removeClass(t) {
            if ("function" == typeof t) return (0, utils_js_1.domEach)(this, function (s, e) {
                (0, utils_js_1.isTag)(s) && removeClass.call([s], t.call(s, e, s.attribs.class || ""))
            });
            var s = splitNames(t),
                e = s.length,
                a = 0 === arguments.length;
            return (0, utils_js_1.domEach)(this, function (t) {
                if ((0, utils_js_1.isTag)(t))
                    if (a) t.attribs.class = "";
                    else {
                        for (var r = splitNames(t.attribs.class), i = !1, o = 0; o < e; o++) {
                            var n = r.indexOf(s[o]);
                            n >= 0 && (r.splice(n, 1), i = !0, o--)
                        }
                        i && (t.attribs.class = r.join(" "))
                    }
            })
        }
  
        function toggleClass(t, s) {
            if ("function" == typeof t) return (0, utils_js_1.domEach)(this, function (e, a) {
                (0, utils_js_1.isTag)(e) && toggleClass.call([e], t.call(e, a, e.attribs.class || "", s), s)
            });
            if (!t || "string" != typeof t) return this;
            for (var e = t.split(rspace), a = e.length, r = "boolean" == typeof s ? s ? 1 : -1 : 0, i = this.length, o = 0; o < i; o++) {
                var n = this[o];
                if ((0, utils_js_1.isTag)(n)) {
                    for (var l = splitNames(n.attribs.class), c = 0; c < a; c++) {
                        var u = l.indexOf(e[c]);
                        r >= 0 && u < 0 ? l.push(e[c]) : r <= 0 && u >= 0 && l.splice(u, 1)
                    }
                    n.attribs.class = l.join(" ")
                }
            }
            return this
        }
        exports.attr = attr, exports.prop = prop, exports.data = data, exports.val = val, exports.removeAttr = removeAttr, exports.hasClass = hasClass, exports.addClass = addClass, exports.removeClass = removeClass, exports.toggleClass = toggleClass;
  
    }, {
        "../static.js": 17,
        "../utils.js": 19,
        "domutils": 41
    }],
    7: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.css = void 0;
        var utils_js_1 = require("../utils.js");
  
        function css(t, s) {
            return null != t && null != s || "object" == typeof t && !Array.isArray(t) ? (0, utils_js_1.domEach)(this, function (e, r) {
                (0, utils_js_1.isTag)(e) && setCss(e, t, s, r)
            }) : 0 !== this.length ? getCss(this[0], t) : void 0
        }
  
        function setCss(t, s, e, r) {
            if ("string" == typeof s) {
                var i = getCss(t),
                    n = "function" == typeof e ? e.call(t, r, i[s]) : e;
                "" === n ? delete i[s] : null != n && (i[s] = n), t.attribs.style = stringify(i)
            } else "object" == typeof s && Object.keys(s).forEach(function (e, r) {
                setCss(t, e, s[e], r)
            })
        }
  
        function getCss(t, s) {
            if (t && (0, utils_js_1.isTag)(t)) {
                var e = parse(t.attribs.style);
                if ("string" == typeof s) return e[s];
                if (Array.isArray(s)) {
                    var r = {};
                    return s.forEach(function (t) {
                        null != e[t] && (r[t] = e[t])
                    }), r
                }
                return e
            }
        }
  
        function stringify(t) {
            return Object.keys(t).reduce(function (s, e) {
                return "".concat(s).concat(s ? " " : "").concat(e, ": ").concat(t[e], ";")
            }, "")
        }
  
        function parse(t) {
            if (!(t = (t || "").trim())) return {};
            for (var s, e = {}, r = 0, i = t.split(";"); r < i.length; r++) {
                var n = i[r],
                    c = n.indexOf(":");
                if (c < 1 || c === n.length - 1) {
                    var o = n.trimEnd();
                    o.length > 0 && void 0 !== s && (e[s] += ";".concat(o))
                } else e[s = n.slice(0, c).trim()] = n.slice(c + 1).trim()
            }
            return e
        }
        exports.css = css;
  
    }, {
        "../utils.js": 19
    }],
    8: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.serializeArray = exports.serialize = void 0;
        var utils_js_1 = require("../utils.js"),
            submittableSelector = "input,select,textarea,keygen",
            r20 = /%20/g,
            rCRLF = /\r?\n/g;
  
        function serialize() {
            return this.serializeArray().map(function (e) {
                return "".concat(encodeURIComponent(e.name), "=").concat(encodeURIComponent(e.value))
            }).join("&").replace(r20, "+")
        }
  
        function serializeArray() {
            var e = this;
            return this.map(function (r, t) {
                var a = e._make(t);
                return (0, utils_js_1.isTag)(t) && "form" === t.name ? a.find(submittableSelector).toArray() : a.filter(submittableSelector).toArray()
            }).filter('[name!=""]:enabled:not(:submit, :button, :image, :reset, :file):matches([checked], :not(:checkbox, :radio))').map(function (r, t) {
                var a, i = e._make(t),
                    n = i.attr("name"),
                    o = null !== (a = i.val()) && void 0 !== a ? a : "";
                return Array.isArray(o) ? o.map(function (e) {
                    return {
                        name: n,
                        value: e.replace(rCRLF, "\r\n")
                    }
                }) : {
                    name: n,
                    value: o.replace(rCRLF, "\r\n")
                }
            }).toArray()
        }
        exports.serialize = serialize, exports.serializeArray = serializeArray;
  
    }, {
        "../utils.js": 19
    }],
    9: [function (require, module, exports) {
        "use strict";
        var __spreadArray = this && this.__spreadArray || function (e, r, t) {
            if (t || 2 === arguments.length)
                for (var n, i = 0, s = r.length; i < s; i++) !n && i in r || (n || (n = Array.prototype.slice.call(r, 0, i)), n[i] = r[i]);
            return e.concat(n || Array.prototype.slice.call(r))
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;
        var domhandler_1 = require("domhandler"),
            parse_js_1 = require("../parse.js"),
            static_js_1 = require("../static.js"),
            utils_js_1 = require("../utils.js"),
            domutils_1 = require("domutils");
  
        function _makeDomArray(e, r) {
            var t = this;
            return null == e ? [] : (0, utils_js_1.isCheerio)(e) ? r ? (0, utils_js_1.cloneDom)(e.get()) : e.get() : Array.isArray(e) ? e.reduce(function (e, n) {
                return e.concat(t._makeDomArray(n, r))
            }, []) : "string" == typeof e ? this._parse(e, this.options, !1, null).children : r ? (0, utils_js_1.cloneDom)([e]) : [e]
        }
  
        function _insert(e) {
            return function () {
                for (var r = this, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                var i = this.length - 1;
                return (0, utils_js_1.domEach)(this, function (n, s) {
                    if ((0, domhandler_1.hasChildren)(n)) {
                        var a = "function" == typeof t[0] ? t[0].call(n, s, r._render(n.children)) : t,
                            o = r._makeDomArray(a, s < i);
                        e(o, n.children, n)
                    }
                })
            }
        }
  
        function uniqueSplice(e, r, t, n, i) {
            for (var s, a, o = __spreadArray([r, t], n, !0), l = 0 === r ? null : e[r - 1], p = r + t >= e.length ? null : e[r + t], h = 0; h < n.length; ++h) {
                var u = n[h],
                    c = u.parent;
                if (c) {
                    var d = c.children.indexOf(u);
                    d > -1 && (c.children.splice(d, 1), i === c && r > d && o[0]--)
                }
                u.parent = i, u.prev && (u.prev.next = null !== (s = u.next) && void 0 !== s ? s : null), u.next && (u.next.prev = null !== (a = u.prev) && void 0 !== a ? a : null), u.prev = 0 === h ? l : n[h - 1], u.next = h === n.length - 1 ? p : n[h + 1]
            }
            return l && (l.next = n[0]), p && (p.prev = n[n.length - 1]), e.splice.apply(e, o)
        }
  
        function appendTo(e) {
            return ((0, utils_js_1.isCheerio)(e) ? e : this._make(e)).append(this), this
        }
  
        function prependTo(e) {
            return ((0, utils_js_1.isCheerio)(e) ? e : this._make(e)).prepend(this), this
        }
  
        function _wrap(e) {
            return function (r) {
                for (var t = this.length - 1, n = this.parents().last(), i = 0; i < this.length; i++) {
                    var s = this[i],
                        a = "function" == typeof r ? r.call(s, i, s) : "string" != typeof r || (0, utils_js_1.isHtml)(r) ? r : n.find(r).clone(),
                        o = this._makeDomArray(a, i < t)[0];
                    if (o && (0, domhandler_1.hasChildren)(o)) {
                        for (var l = o, p = 0; p < l.children.length;) {
                            var h = l.children[p];
                            (0, utils_js_1.isTag)(h) ? (l = h, p = 0) : p++
                        }
                        e(s, l, [o])
                    }
                }
                return this
            }
        }
  
        function unwrap(e) {
            var r = this;
            return this.parent(e).not("body").each(function (e, t) {
                r._make(t).replaceWith(t.children)
            }), this
        }
  
        function wrapAll(e) {
            var r = this[0];
            if (r) {
                for (var t = this._make("function" == typeof e ? e.call(r, 0, r) : e).insertBefore(r), n = void 0, i = 0; i < t.length; i++) "tag" === t[i].type && (n = t[i]);
                for (var s = 0; n && s < n.children.length;) {
                    var a = n.children[s];
                    "tag" === a.type ? (n = a, s = 0) : s++
                }
                n && this._make(n).append(this)
            }
            return this
        }
  
        function after() {
            for (var e = this, r = [], t = 0; t < arguments.length; t++) r[t] = arguments[t];
            var n = this.length - 1;
            return (0, utils_js_1.domEach)(this, function (t, i) {
                var s = t.parent;
                if ((0, domhandler_1.hasChildren)(t) && s) {
                    var a = s.children,
                        o = a.indexOf(t);
                    if (!(o < 0)) {
                        var l = "function" == typeof r[0] ? r[0].call(t, i, e._render(t.children)) : r;
                        uniqueSplice(a, o + 1, 0, e._makeDomArray(l, i < n), s)
                    }
                }
            })
        }
  
        function insertAfter(e) {
            var r = this;
            "string" == typeof e && (e = this._make(e)), this.remove();
            var t = [];
            return this._makeDomArray(e).forEach(function (e) {
                var n = r.clone().toArray(),
                    i = e.parent;
                if (i) {
                    var s = i.children,
                        a = s.indexOf(e);
                    a < 0 || (uniqueSplice(s, a + 1, 0, n, i), t.push.apply(t, n))
                }
            }), this._make(t)
        }
  
        function before() {
            for (var e = this, r = [], t = 0; t < arguments.length; t++) r[t] = arguments[t];
            var n = this.length - 1;
            return (0, utils_js_1.domEach)(this, function (t, i) {
                var s = t.parent;
                if ((0, domhandler_1.hasChildren)(t) && s) {
                    var a = s.children,
                        o = a.indexOf(t);
                    if (!(o < 0)) {
                        var l = "function" == typeof r[0] ? r[0].call(t, i, e._render(t.children)) : r;
                        uniqueSplice(a, o, 0, e._makeDomArray(l, i < n), s)
                    }
                }
            })
        }
  
        function insertBefore(e) {
            var r = this,
                t = this._make(e);
            this.remove();
            var n = [];
            return (0, utils_js_1.domEach)(t, function (e) {
                var t = r.clone().toArray(),
                    i = e.parent;
                if (i) {
                    var s = i.children,
                        a = s.indexOf(e);
                    a < 0 || (uniqueSplice(s, a, 0, t, i), n.push.apply(n, t))
                }
            }), this._make(n)
        }
  
        function remove(e) {
            var r = e ? this.filter(e) : this;
            return (0, utils_js_1.domEach)(r, function (e) {
                (0, domutils_1.removeElement)(e), e.prev = e.next = e.parent = null
            }), this
        }
  
        function replaceWith(e) {
            var r = this;
            return (0, utils_js_1.domEach)(this, function (t, n) {
                var i = t.parent;
                if (i) {
                    var s = i.children,
                        a = "function" == typeof e ? e.call(t, n, t) : e,
                        o = r._makeDomArray(a);
                    (0, parse_js_1.update)(o, null);
                    var l = s.indexOf(t);
                    uniqueSplice(s, l, 1, o, i), o.includes(t) || (t.parent = t.prev = t.next = null)
                }
            })
        }
  
        function empty() {
            return (0, utils_js_1.domEach)(this, function (e) {
                (0, domhandler_1.hasChildren)(e) && (e.children.forEach(function (e) {
                    e.next = e.prev = e.parent = null
                }), e.children.length = 0)
            })
        }
  
        function html(e) {
            var r = this;
            if (void 0 === e) {
                var t = this[0];
                return t && (0, domhandler_1.hasChildren)(t) ? this._render(t.children) : null
            }
            return (0, utils_js_1.domEach)(this, function (t) {
                if ((0, domhandler_1.hasChildren)(t)) {
                    t.children.forEach(function (e) {
                        e.next = e.prev = e.parent = null
                    });
                    var n = (0, utils_js_1.isCheerio)(e) ? e.toArray() : r._parse("".concat(e), r.options, !1, t).children;
                    (0, parse_js_1.update)(n, t)
                }
            })
        }
  
        function toString() {
            return this._render(this)
        }
  
        function text(e) {
            var r = this;
            return void 0 === e ? (0, static_js_1.text)(this) : "function" == typeof e ? (0, utils_js_1.domEach)(this, function (t, n) {
                return r._make(t).text(e.call(t, n, (0, static_js_1.text)([t])))
            }) : (0, utils_js_1.domEach)(this, function (r) {
                if ((0, domhandler_1.hasChildren)(r)) {
                    r.children.forEach(function (e) {
                        e.next = e.prev = e.parent = null
                    });
                    var t = new domhandler_1.Text("".concat(e));
                    (0, parse_js_1.update)(t, r)
                }
            })
        }
  
        function clone() {
            return this._make((0, utils_js_1.cloneDom)(this.get()))
        }
        exports._makeDomArray = _makeDomArray, exports.appendTo = appendTo, exports.prependTo = prependTo, exports.append = _insert(function (e, r, t) {
            uniqueSplice(r, r.length, 0, e, t)
        }), exports.prepend = _insert(function (e, r, t) {
            uniqueSplice(r, 0, 0, e, t)
        }), exports.wrap = _wrap(function (e, r, t) {
            var n = e.parent;
            if (n) {
                var i = n.children,
                    s = i.indexOf(e);
                (0, parse_js_1.update)([e], r), uniqueSplice(i, s, 0, t, n)
            }
        }), exports.wrapInner = _wrap(function (e, r, t) {
            (0, domhandler_1.hasChildren)(e) && ((0, parse_js_1.update)(e.children, r), (0, parse_js_1.update)(t, e))
        }), exports.unwrap = unwrap, exports.wrapAll = wrapAll, exports.after = after, exports.insertAfter = insertAfter, exports.before = before, exports.insertBefore = insertBefore, exports.remove = remove, exports.replaceWith = replaceWith, exports.empty = empty, exports.html = html, exports.toString = toString, exports.text = text, exports.clone = clone;
  
    }, {
        "../parse.js": 15,
        "../static.js": 17,
        "../utils.js": 19,
        "domhandler": 37,
        "domutils": 41
    }],
    10: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
            void 0 === n && (n = r);
            var i = Object.getOwnPropertyDescriptor(e, r);
            i && ("get" in i ? e.__esModule : !i.writable && !i.configurable) || (i = {
                enumerable: !0,
                get: function () {
                    return e[r]
                }
            }), Object.defineProperty(t, n, i)
        } : function (t, e, r, n) {
            void 0 === n && (n = r), t[n] = e[r]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function (t, e) {
                t.default = e
            }),
            __importStar = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) "default" !== r && Object.prototype.hasOwnProperty.call(t, r) && __createBinding(e, t, r);
                return __setModuleDefault(e, t), e
            },
            __spreadArray = this && this.__spreadArray || function (t, e, r) {
                if (r || 2 === arguments.length)
                    for (var n, i = 0, s = e.length; i < s; i++) !n && i in e || (n || (n = Array.prototype.slice.call(e, 0, i)), n[i] = e[i]);
                return t.concat(n || Array.prototype.slice.call(e))
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.addBack = exports.add = exports.end = exports.slice = exports.index = exports.toArray = exports.get = exports.eq = exports.last = exports.first = exports.has = exports.not = exports.is = exports.filterArray = exports.filter = exports.map = exports.each = exports.contents = exports.children = exports.siblings = exports.prevUntil = exports.prevAll = exports.prev = exports.nextUntil = exports.nextAll = exports.next = exports.closest = exports.parentsUntil = exports.parents = exports.parent = exports.find = void 0;
        var domhandler_1 = require("domhandler"),
            select = __importStar(require("cheerio-select")),
            utils_js_1 = require("../utils.js"),
            static_js_1 = require("../static.js"),
            domutils_1 = require("domutils"),
            reSiblingSelector = /^\s*[~+]/;
  
        function find(t) {
            var e;
            if (!t) return this._make([]);
            var r = this.toArray();
            if ("string" != typeof t) {
                var n = (0, utils_js_1.isCheerio)(t) ? t.toArray() : [t];
                return this._make(n.filter(function (t) {
                    return r.some(function (e) {
                        return (0, static_js_1.contains)(e, t)
                    })
                }))
            }
            var i = reSiblingSelector.test(t) ? r : this.children().toArray(),
                s = {
                    context: r,
                    root: null === (e = this._root) || void 0 === e ? void 0 : e[0],
                    xmlMode: this.options.xmlMode,
                    lowerCaseTags: this.options.lowerCaseTags,
                    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,
                    pseudos: this.options.pseudos,
                    quirksMode: this.options.quirksMode
                };
            return this._make(select.select(t, i, s))
        }
  
        function _getMatcher(t) {
            return function (e) {
                for (var r = [], n = 1; n < arguments.length; n++) r[n - 1] = arguments[n];
                return function (n) {
                    var i, s = t(e, this);
                    return n && (s = filterArray(s, n, this.options.xmlMode, null === (i = this._root) || void 0 === i ? void 0 : i[0])), this._make(this.length > 1 && s.length > 1 ? r.reduce(function (t, e) {
                        return e(t)
                    }, s) : s)
                }
            }
        }
        exports.find = find;
        var _matcher = _getMatcher(function (t, e) {
            for (var r, n = [], i = 0; i < e.length; i++) {
                var s = t(e[i]);
                n.push(s)
            }
            return (r = new Array).concat.apply(r, n)
        }),
            _singleMatcher = _getMatcher(function (t, e) {
                for (var r = [], n = 0; n < e.length; n++) {
                    var i = t(e[n]);
                    null !== i && r.push(i)
                }
                return r
            });
  
        function _matchUntil(t) {
            for (var e = [], r = 1; r < arguments.length; r++) e[r - 1] = arguments[r];
            var n = null,
                i = _getMatcher(function (t, e) {
                    var r = [];
                    return (0, utils_js_1.domEach)(e, function (e) {
                        for (var i;
                            (i = t(e)) && (null == n ? !void 0 : !n(i, r.length)); e = i) r.push(i)
                    }), r
                }).apply(void 0, __spreadArray([t], e, !1));
            return function (t, e) {
                var r = this;
                n = "string" == typeof t ? function (e) {
                    return select.is(e, t, r.options)
                } : t ? getFilterFn(t) : null;
                var s = i.call(this, e);
                return n = null, s
            }
        }
  
        function _removeDuplicates(t) {
            return Array.from(new Set(t))
        }
  
        function closest(t) {
            var e, r = [];
            if (!t) return this._make(r);
            var n = {
                xmlMode: this.options.xmlMode,
                root: null === (e = this._root) || void 0 === e ? void 0 : e[0]
            },
                i = "string" == typeof t ? function (e) {
                    return select.is(e, t, n)
                } : getFilterFn(t);
            return (0, utils_js_1.domEach)(this, function (t) {
                for (; t && (0, utils_js_1.isTag)(t);) {
                    if (i(t, 0)) {
                        r.includes(t) || r.push(t);
                        break
                    }
                    t = t.parent
                }
            }), this._make(r)
        }
  
        function contents() {
            var t = this.toArray().reduce(function (t, e) {
                return (0, domhandler_1.hasChildren)(e) ? t.concat(e.children) : t
            }, []);
            return this._make(t)
        }
  
        function each(t) {
            for (var e = 0, r = this.length; e < r && !1 !== t.call(this[e], e, this[e]);) ++e;
            return this
        }
  
        function map(t) {
            for (var e = [], r = 0; r < this.length; r++) {
                var n = this[r],
                    i = t.call(n, r, n);
                null != i && (e = e.concat(i))
            }
            return this._make(e)
        }
  
        function getFilterFn(t) {
            return "function" == typeof t ? function (e, r) {
                return t.call(e, r, e)
            } : (0, utils_js_1.isCheerio)(t) ? function (e) {
                return Array.prototype.includes.call(t, e)
            } : function (e) {
                return t === e
            }
        }
  
        function filter(t) {
            var e;
            return this._make(filterArray(this.toArray(), t, this.options.xmlMode, null === (e = this._root) || void 0 === e ? void 0 : e[0]))
        }
  
        function filterArray(t, e, r, n) {
            return "string" == typeof e ? select.filter(e, t, {
                xmlMode: r,
                root: n
            }) : t.filter(getFilterFn(e))
        }
  
        function is(t) {
            var e = this.toArray();
            return "string" == typeof t ? select.some(e.filter(utils_js_1.isTag), t, this.options) : !!t && e.some(getFilterFn(t))
        }
  
        function not(t) {
            var e = this.toArray();
            if ("string" == typeof t) {
                var r = new Set(select.filter(t, e, this.options));
                e = e.filter(function (t) {
                    return !r.has(t)
                })
            } else {
                var n = getFilterFn(t);
                e = e.filter(function (t, e) {
                    return !n(t, e)
                })
            }
            return this._make(e)
        }
  
        function has(t) {
            var e = this;
            return this.filter("string" == typeof t ? ":has(".concat(t, ")") : function (r, n) {
                return e._make(n).find(t).length > 0
            })
        }
  
        function first() {
            return this.length > 1 ? this._make(this[0]) : this
        }
  
        function last() {
            return this.length > 0 ? this._make(this[this.length - 1]) : this
        }
  
        function eq(t) {
            var e;
            return 0 === (t = +t) && this.length <= 1 ? this : (t < 0 && (t = this.length + t), this._make(null !== (e = this[t]) && void 0 !== e ? e : []))
        }
  
        function get(t) {
            return null == t ? this.toArray() : this[t < 0 ? this.length + t : t]
        }
  
        function toArray() {
            return Array.prototype.slice.call(this)
        }
  
        function index(t) {
            var e, r;
            return null == t ? (e = this.parent().children(), r = this[0]) : "string" == typeof t ? (e = this._make(t), r = this[0]) : (e = this, r = (0, utils_js_1.isCheerio)(t) ? t[0] : t), Array.prototype.indexOf.call(e, r)
        }
  
        function slice(t, e) {
            return this._make(Array.prototype.slice.call(this, t, e))
        }
  
        function end() {
            var t;
            return null !== (t = this.prevObject) && void 0 !== t ? t : this._make([])
        }
  
        function add(t, e) {
            var r = this._make(t, e),
                n = (0, domutils_1.uniqueSort)(__spreadArray(__spreadArray([], this.get(), !0), r.get(), !0));
            return this._make(n)
        }
  
        function addBack(t) {
            return this.prevObject ? this.add(t ? this.prevObject.filter(t) : this.prevObject) : this
        }
        exports.parent = _singleMatcher(function (t) {
            var e = t.parent;
            return e && !(0, domhandler_1.isDocument)(e) ? e : null
        }, _removeDuplicates), exports.parents = _matcher(function (t) {
            for (var e = []; t.parent && !(0, domhandler_1.isDocument)(t.parent);) e.push(t.parent), t = t.parent;
            return e
        }, domutils_1.uniqueSort, function (t) {
            return t.reverse()
        }), exports.parentsUntil = _matchUntil(function (t) {
            var e = t.parent;
            return e && !(0, domhandler_1.isDocument)(e) ? e : null
        }, domutils_1.uniqueSort, function (t) {
            return t.reverse()
        }), exports.closest = closest, exports.next = _singleMatcher(function (t) {
            return (0, domutils_1.nextElementSibling)(t)
        }), exports.nextAll = _matcher(function (t) {
            for (var e = []; t.next;) t = t.next, (0, utils_js_1.isTag)(t) && e.push(t);
            return e
        }, _removeDuplicates), exports.nextUntil = _matchUntil(function (t) {
            return (0, domutils_1.nextElementSibling)(t)
        }, _removeDuplicates), exports.prev = _singleMatcher(function (t) {
            return (0, domutils_1.prevElementSibling)(t)
        }), exports.prevAll = _matcher(function (t) {
            for (var e = []; t.prev;) t = t.prev, (0, utils_js_1.isTag)(t) && e.push(t);
            return e
        }, _removeDuplicates), exports.prevUntil = _matchUntil(function (t) {
            return (0, domutils_1.prevElementSibling)(t)
        }, _removeDuplicates), exports.siblings = _matcher(function (t) {
            return (0, domutils_1.getSiblings)(t).filter(function (e) {
                return (0, utils_js_1.isTag)(e) && e !== t
            })
        }, domutils_1.uniqueSort), exports.children = _matcher(function (t) {
            return (0, domutils_1.getChildren)(t).filter(utils_js_1.isTag)
        }, _removeDuplicates), exports.contents = contents, exports.each = each, exports.map = map, exports.filter = filter, exports.filterArray = filterArray, exports.is = is, exports.not = not, exports.has = has, exports.first = first, exports.last = last, exports.eq = eq, exports.get = get, exports.toArray = toArray, exports.index = index, exports.slice = slice, exports.end = end, exports.add = add, exports.addBack = addBack;
  
    }, {
        "../static.js": 17,
        "../utils.js": 19,
        "cheerio-select": 4,
        "domhandler": 37,
        "domutils": 41
    }],
    11: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, t, r, i) {
            void 0 === i && (i = r);
            var o = Object.getOwnPropertyDescriptor(t, r);
            o && ("get" in o ? t.__esModule : !o.writable && !o.configurable) || (o = {
                enumerable: !0,
                get: function () {
                    return t[r]
                }
            }), Object.defineProperty(e, i, o)
        } : function (e, t, r, i) {
            void 0 === i && (i = r), e[i] = t[r]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && __createBinding(t, e, r);
                return __setModuleDefault(t, e), t
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.Cheerio = void 0;
        var Attributes = __importStar(require("./api/attributes.js")),
            Traversing = __importStar(require("./api/traversing.js")),
            Manipulation = __importStar(require("./api/manipulation.js")),
            Css = __importStar(require("./api/css.js")),
            Forms = __importStar(require("./api/forms.js")),
            Cheerio = function () {
                return function (e, t, r) {
                    if (this.length = 0, this.options = r, this._root = t, e) {
                        for (var i = 0; i < e.length; i++) this[i] = e[i];
                        this.length = e.length
                    }
                }
            }();
        exports.Cheerio = Cheerio, Cheerio.prototype.cheerio = "[cheerio object]", Cheerio.prototype.splice = Array.prototype.splice, Cheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator], Object.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);
  
    }, {
        "./api/attributes.js": 6,
        "./api/css.js": 7,
        "./api/forms.js": 8,
        "./api/manipulation.js": 9,
        "./api/traversing.js": 10
    }],
    12: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, t, r, s) {
            void 0 === s && (s = r);
            var a = Object.getOwnPropertyDescriptor(t, r);
            a && ("get" in a ? t.__esModule : !a.writable && !a.configurable) || (a = {
                enumerable: !0,
                get: function () {
                    return t[r]
                }
            }), Object.defineProperty(e, s, a)
        } : function (e, t, r, s) {
            void 0 === s && (s = r), e[s] = t[r]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __exportStar = this && this.__exportStar || function (e, t) {
                for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || __createBinding(t, e, r)
            },
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && __createBinding(t, e, r);
                return __setModuleDefault(t, e), t
            },
            __importDefault = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.root = exports.parseHTML = exports.merge = exports.contains = exports.text = exports.xml = exports.html = exports.load = void 0, __exportStar(require("./types.js"), exports);
        var load_js_1 = require("./load.js"),
            parse_js_1 = require("./parse.js"),
            parse5_adapter_js_1 = require("./parsers/parse5-adapter.js"),
            dom_serializer_1 = __importDefault(require("dom-serializer")),
            htmlparser2_1 = require("htmlparser2"),
            parse = (0, parse_js_1.getParse)(function (e, t, r, s) {
                return t.xmlMode || t._useHtmlParser2 ? (0, htmlparser2_1.parseDocument)(e, t) : (0, parse5_adapter_js_1.parseWithParse5)(e, t, r, s)
            });
        exports.load = (0, load_js_1.getLoad)(parse, function (e, t) {
            return t.xmlMode || t._useHtmlParser2 ? (0, dom_serializer_1.default)(e, t) : (0, parse5_adapter_js_1.renderWithParse5)(e)
        }), exports.default = (0, exports.load)([]);
        var static_js_1 = require("./static.js");
        Object.defineProperty(exports, "html", {
            enumerable: !0,
            get: function () {
                return static_js_1.html
            }
        }), Object.defineProperty(exports, "xml", {
            enumerable: !0,
            get: function () {
                return static_js_1.xml
            }
        }), Object.defineProperty(exports, "text", {
            enumerable: !0,
            get: function () {
                return static_js_1.text
            }
        });
        var staticMethods = __importStar(require("./static.js"));
        exports.contains = staticMethods.contains, exports.merge = staticMethods.merge, exports.parseHTML = staticMethods.parseHTML, exports.root = staticMethods.root;
  
    }, {
        "./load.js": 13,
        "./parse.js": 15,
        "./parsers/parse5-adapter.js": 16,
        "./static.js": 17,
        "./types.js": 18,
        "dom-serializer": 35,
        "htmlparser2": 57
    }],
    13: [function (require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function () {
            var t = function (e, r) {
                return (t = Object.setPrototypeOf || {
                    __proto__: []
                }
                    instanceof Array && function (t, e) {
                        t.__proto__ = e
                    } || function (t, e) {
                        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
                    })(e, r)
            };
            return function (e, r) {
                if ("function" != typeof r && null !== r) throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
  
                function n() {
                    this.constructor = e
                }
                t(e, r), e.prototype = null === r ? Object.create(r) : (n.prototype = r.prototype, new n)
            }
        }(),
            __assign = this && this.__assign || function () {
                return (__assign = Object.assign || function (t) {
                    for (var e, r = 1, n = arguments.length; r < n; r++)
                        for (var o in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
                    return t
                }).apply(this, arguments)
            },
            __createBinding = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r);
                var o = Object.getOwnPropertyDescriptor(e, r);
                o && ("get" in o ? e.__esModule : !o.writable && !o.configurable) || (o = {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                }), Object.defineProperty(t, n, o)
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function (t, e) {
                t.default = e
            }),
            __importStar = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) "default" !== r && Object.prototype.hasOwnProperty.call(t, r) && __createBinding(e, t, r);
                return __setModuleDefault(e, t), e
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.getLoad = void 0;
        var options_js_1 = __importStar(require("./options.js")),
            staticMethods = __importStar(require("./static.js")),
            cheerio_js_1 = require("./cheerio.js"),
            utils_js_1 = require("./utils.js");
  
        function getLoad(t, e) {
            return function r(n, o, i) {
                if (void 0 === i && (i = !0), null == n) throw new Error("cheerio.load() expects a string");
                var s = __assign(__assign({}, options_js_1.default), (0, options_js_1.flatten)(o)),
                    u = t(n, s, i, null),
                    _ = function (r) {
                        function n() {
                            return null !== r && r.apply(this, arguments) || this
                        }
                        return __extends(n, r), n.prototype._make = function (t, e) {
                            var r = a(t, e);
                            return r.prevObject = this, r
                        }, n.prototype._parse = function (e, r, n, o) {
                            return t(e, r, n, o)
                        }, n.prototype._render = function (t) {
                            return e(t, this.options)
                        }, n
                    }(cheerio_js_1.Cheerio);
  
                function a(e, r, n, o) {
                    if (void 0 === n && (n = u), e && (0, utils_js_1.isCheerio)(e)) return e;
                    var i = __assign(__assign({}, s), (0, options_js_1.flatten)(o)),
                        a = "string" == typeof n ? [t(n, i, !1, null)] : "length" in n ? n : [n],
                        c = (0, utils_js_1.isCheerio)(a) ? a : new _(a, null, i);
                    if (c._root = c, !e) return new _(void 0, c, i);
                    var l = "string" == typeof e && (0, utils_js_1.isHtml)(e) ? t(e, i, !1, null).children : isNode(e) ? [e] : Array.isArray(e) ? e : void 0,
                        p = new _(l, c, i);
                    if (l) return p;
                    if ("string" != typeof e) throw new Error("Unexpected type of selector");
                    var f = e,
                        d = r ? "string" == typeof r ? (0, utils_js_1.isHtml)(r) ? new _([t(r, i, !1, null)], c, i) : (f = "".concat(r, " ").concat(f), c) : (0, utils_js_1.isCheerio)(r) ? r : new _(Array.isArray(r) ? r : [r], c, i) : c;
                    return d ? d.find(f) : p
                }
                return Object.assign(a, staticMethods, {
                    load: r,
                    _root: u,
                    _options: s,
                    fn: _.prototype,
                    prototype: _.prototype
                }), a
            }
        }
  
        function isNode(t) {
            return !!t.name || "root" === t.type || "text" === t.type || "comment" === t.type
        }
        exports.getLoad = getLoad;
  
    }, {
        "./cheerio.js": 11,
        "./options.js": 14,
        "./static.js": 17,
        "./utils.js": 19
    }],
    14: [function (require, module, exports) {
        "use strict";
        var __assign = this && this.__assign || function () {
            return (__assign = Object.assign || function (t) {
                for (var e, l = 1, s = arguments.length; l < s; l++)
                    for (var a in e = arguments[l]) Object.prototype.hasOwnProperty.call(e, a) && (t[a] = e[a]);
                return t
            }).apply(this, arguments)
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.flatten = void 0;
        var defaultOpts = {
            xml: !1,
            decodeEntities: !0
        };
        exports.default = defaultOpts;
        var xmlModeDefault = {
            _useHtmlParser2: !0,
            xmlMode: !0
        };
  
        function flatten(t) {
            return (null == t ? void 0 : t.xml) ? "boolean" == typeof t.xml ? xmlModeDefault : __assign(__assign({}, xmlModeDefault), t.xml) : null != t ? t : void 0
        }
        exports.flatten = flatten;
  
    }, {}],
    15: [function (require, module, exports) {
        (function (Buffer) {
            (function () {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: !0
                }), exports.update = exports.getParse = void 0;
                var domutils_1 = require("domutils"),
                    domhandler_1 = require("domhandler");
  
                function getParse(e) {
                    return function (r, t, n, u) {
                        if ("undefined" != typeof Buffer && Buffer.isBuffer(r) && (r = r.toString()), "string" == typeof r) return e(r, t, n, u);
                        var a = r;
                        if (!Array.isArray(a) && (0, domhandler_1.isDocument)(a)) return a;
                        var o = new domhandler_1.Document([]);
                        return update(a, o), o
                    }
                }
  
                function update(e, r) {
                    var t = Array.isArray(e) ? e : [e];
                    r ? r.children = t : r = null;
                    for (var n = 0; n < t.length; n++) {
                        var u = t[n];
                        u.parent && u.parent.children !== t && (0, domutils_1.removeElement)(u), r ? (u.prev = t[n - 1] || null, u.next = t[n + 1] || null) : u.prev = u.next = null, u.parent = r
                    }
                    return r
                }
                exports.getParse = getParse, exports.update = update;
  
            }).call(this)
        }).call(this, require("buffer").Buffer)
    }, {
        "buffer": 79,
        "domhandler": 37,
        "domutils": 41
    }],
    16: [function (require, module, exports) {
        "use strict";
        var __spreadArray = this && this.__spreadArray || function (r, e, a) {
            if (a || 2 === arguments.length)
                for (var t, s = 0, p = e.length; s < p; s++) !t && s in e || (t || (t = Array.prototype.slice.call(e, 0, s)), t[s] = e[s]);
            return r.concat(t || Array.prototype.slice.call(e))
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.renderWithParse5 = exports.parseWithParse5 = void 0;
        var domhandler_1 = require("domhandler"),
            parse5_1 = require("parse5"),
            parse5_htmlparser2_tree_adapter_1 = require("parse5-htmlparser2-tree-adapter");
  
        function parseWithParse5(r, e, a, t) {
            var s = {
                scriptingEnabled: "boolean" != typeof e.scriptingEnabled || e.scriptingEnabled,
                treeAdapter: parse5_htmlparser2_tree_adapter_1.adapter,
                sourceCodeLocationInfo: e.sourceCodeLocationInfo
            };
            return a ? (0, parse5_1.parse)(r, s) : (0, parse5_1.parseFragment)(t, r, s)
        }
        exports.parseWithParse5 = parseWithParse5;
        var renderOpts = {
            treeAdapter: parse5_htmlparser2_tree_adapter_1.adapter
        };
  
        function renderWithParse5(r) {
            for (var e, a = ("length" in r ? r : [r]), t = 0; t < a.length; t += 1) {
                var s = a[t];
                (0, domhandler_1.isDocument)(s) && (e = Array.prototype.splice).call.apply(e, __spreadArray([a, t, 1], s.children, !1))
            }
            var p = "";
            for (t = 0; t < a.length; t += 1) {
                s = a[t];
                p += (0, parse5_1.serializeOuter)(s, renderOpts)
            }
            return p
        }
        exports.renderWithParse5 = renderWithParse5;
  
    }, {
        "domhandler": 37,
        "parse5": 70,
        "parse5-htmlparser2-tree-adapter": 63
    }],
    17: [function (require, module, exports) {
        "use strict";
        var __assign = this && this.__assign || function () {
            return (__assign = Object.assign || function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++)
                    for (var o in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
                return t
            }).apply(this, arguments)
        },
            __createBinding = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r);
                var o = Object.getOwnPropertyDescriptor(e, r);
                o && ("get" in o ? e.__esModule : !o.writable && !o.configurable) || (o = {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                }), Object.defineProperty(t, n, o)
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function (t, e) {
                t.default = e
            }),
            __importStar = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) "default" !== r && Object.prototype.hasOwnProperty.call(t, r) && __createBinding(e, t, r);
                return __setModuleDefault(e, t), e
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.merge = exports.contains = exports.root = exports.parseHTML = exports.text = exports.xml = exports.html = void 0;
        var domutils_1 = require("domutils"),
            options_js_1 = __importStar(require("./options.js"));
  
        function render(t, e, r) {
            return t ? t(null != e ? e : t._root.children, null, void 0, r).toString() : ""
        }
  
        function isOptions(t, e) {
            return !(e || "object" != typeof t || null == t || "length" in t || "type" in t)
        }
  
        function html(t, e) {
            return render(this, isOptions(t) ? void (e = t) : t, __assign(__assign(__assign({}, options_js_1.default), null == this ? void 0 : this._options), (0, options_js_1.flatten)(null != e ? e : {})))
        }
  
        function xml(t) {
            return render(this, t, __assign(__assign({}, this._options), {
                xmlMode: !0
            }))
        }
  
        function text(t) {
            for (var e = t || (this ? this.root() : []), r = "", n = 0; n < e.length; n++) r += (0, domutils_1.textContent)(e[n]);
            return r
        }
  
        function parseHTML(t, e, r) {
            if (void 0 === r && (r = "boolean" == typeof e && e), !t || "string" != typeof t) return null;
            "boolean" == typeof e && (r = e);
            var n = this.load(t, options_js_1.default, !1);
            return r || n("script").remove(), n.root()[0].children.slice()
        }
  
        function root() {
            return this(this._root)
        }
  
        function contains(t, e) {
            if (e === t) return !1;
            for (var r = e; r && r !== r.parent;)
                if ((r = r.parent) === t) return !0;
            return !1
        }
  
        function merge(t, e) {
            if (isArrayLike(t) && isArrayLike(e)) {
                for (var r = t.length, n = +e.length, o = 0; o < n; o++) t[r++] = e[o];
                return t.length = r, t
            }
        }
  
        function isArrayLike(t) {
            if (Array.isArray(t)) return !0;
            if ("object" != typeof t || !Object.prototype.hasOwnProperty.call(t, "length") || "number" != typeof t.length || t.length < 0) return !1;
            for (var e = 0; e < t.length; e++)
                if (!(e in t)) return !1;
            return !0
        }
        exports.html = html, exports.xml = xml, exports.text = text, exports.parseHTML = parseHTML, exports.root = root, exports.contains = contains, exports.merge = merge;
  
    }, {
        "./options.js": 14,
        "domutils": 41
    }],
    18: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
  
    }, {}],
    19: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.isHtml = exports.cloneDom = exports.domEach = exports.cssCase = exports.camelCase = exports.isCheerio = exports.isTag = void 0;
        var CharacterCodes, domhandler_1 = require("domhandler"),
            domhandler_2 = require("domhandler");
  
        function isCheerio(e) {
            return null != e.cheerio
        }
  
        function camelCase(e) {
            return e.replace(/[_.-](\w|$)/g, function (e, r) {
                return r.toUpperCase()
            })
        }
  
        function cssCase(e) {
            return e.replace(/[A-Z]/g, "-$&").toLowerCase()
        }
  
        function domEach(e, r) {
            for (var o = e.length, t = 0; t < o; t++) r(e[t], t);
            return e
        }
  
        function cloneDom(e) {
            var r = "length" in e ? Array.prototype.map.call(e, function (e) {
                return (0, domhandler_1.cloneNode)(e, !0)
            }) : [(0, domhandler_1.cloneNode)(e, !0)],
                o = new domhandler_1.Document(r);
            return r.forEach(function (e) {
                e.parent = o
            }), r
        }
  
        function isHtml(e) {
            var r = e.indexOf("<");
            if (r < 0 || r > e.length - 3) return !1;
            var o = e.charCodeAt(r + 1);
            return (o >= CharacterCodes.LowerA && o <= CharacterCodes.LowerZ || o >= CharacterCodes.UpperA && o <= CharacterCodes.UpperZ || o === CharacterCodes.Exclamation) && e.includes(">", r + 2)
        }
        Object.defineProperty(exports, "isTag", {
            enumerable: !0,
            get: function () {
                return domhandler_2.isTag
            }
        }), exports.isCheerio = isCheerio, exports.camelCase = camelCase, exports.cssCase = cssCase, exports.domEach = domEach, exports.cloneDom = cloneDom,
            function (e) {
                e[e.LowerA = 97] = "LowerA", e[e.LowerZ = 122] = "LowerZ", e[e.UpperA = 65] = "UpperA", e[e.UpperZ = 90] = "UpperZ", e[e.Exclamation = 33] = "Exclamation"
            }(CharacterCodes || (CharacterCodes = {})), exports.isHtml = isHtml;
  
    }, {
        "domhandler": 37
    }],
    20: [function (require, module, exports) {
        "use strict";
        var __importDefault = this && this.__importDefault || function (e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.attributeRules = void 0;
        var boolbase_1 = __importDefault(require("boolbase")),
            reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;
  
        function escapeRegex(e) {
            return e.replace(reChars, "\\$&")
        }
        var caseInsensitiveAttributes = new Set(["accept", "accept-charset", "align", "alink", "axis", "bgcolor", "charset", "checked", "clear", "codetype", "color", "compact", "declare", "defer", "dir", "direction", "disabled", "enctype", "face", "frame", "hreflang", "http-equiv", "lang", "language", "link", "media", "method", "multiple", "nohref", "noresize", "noshade", "nowrap", "readonly", "rel", "rev", "rules", "scope", "scrolling", "selected", "shape", "target", "text", "type", "valign", "valuetype", "vlink"]);
  
        function shouldIgnoreCase(e, t) {
            return "boolean" == typeof e.ignoreCase ? e.ignoreCase : "quirks" === e.ignoreCase ? !!t.quirksMode : !t.xmlMode && caseInsensitiveAttributes.has(e.name)
        }
        exports.attributeRules = {
            equals: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value;
                return shouldIgnoreCase(t, r) ? (u = u.toLowerCase(), function (t) {
                    var r = n.getAttributeValue(t, a);
                    return null != r && r.length === u.length && r.toLowerCase() === u && e(t)
                }) : function (t) {
                    return n.getAttributeValue(t, a) === u && e(t)
                }
            },
            hyphen: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value,
                    o = u.length;
                return shouldIgnoreCase(t, r) ? (u = u.toLowerCase(), function (t) {
                    var r = n.getAttributeValue(t, a);
                    return null != r && (r.length === o || "-" === r.charAt(o)) && r.substr(0, o).toLowerCase() === u && e(t)
                }) : function (t) {
                    var r = n.getAttributeValue(t, a);
                    return null != r && (r.length === o || "-" === r.charAt(o)) && r.substr(0, o) === u && e(t)
                }
            },
            element: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value;
                if (/\s/.test(u)) return boolbase_1.default.falseFunc;
                var o = new RegExp("(?:^|\\s)".concat(escapeRegex(u), "(?:$|\\s)"), shouldIgnoreCase(t, r) ? "i" : "");
                return function (t) {
                    var r = n.getAttributeValue(t, a);
                    return null != r && r.length >= u.length && o.test(r) && e(t)
                }
            },
            exists: function (e, t, r) {
                var n = t.name,
                    a = r.adapter;
                return function (t) {
                    return a.hasAttrib(t, n) && e(t)
                }
            },
            start: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value,
                    o = u.length;
                return 0 === o ? boolbase_1.default.falseFunc : shouldIgnoreCase(t, r) ? (u = u.toLowerCase(), function (t) {
                    var r = n.getAttributeValue(t, a);
                    return null != r && r.length >= o && r.substr(0, o).toLowerCase() === u && e(t)
                }) : function (t) {
                    var r;
                    return !!(null === (r = n.getAttributeValue(t, a)) || void 0 === r ? void 0 : r.startsWith(u)) && e(t)
                }
            },
            end: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value,
                    o = -u.length;
                return 0 === o ? boolbase_1.default.falseFunc : shouldIgnoreCase(t, r) ? (u = u.toLowerCase(), function (t) {
                    var r;
                    return (null === (r = n.getAttributeValue(t, a)) || void 0 === r ? void 0 : r.substr(o).toLowerCase()) === u && e(t)
                }) : function (t) {
                    var r;
                    return !!(null === (r = n.getAttributeValue(t, a)) || void 0 === r ? void 0 : r.endsWith(u)) && e(t)
                }
            },
            any: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value;
                if ("" === u) return boolbase_1.default.falseFunc;
                if (shouldIgnoreCase(t, r)) {
                    var o = new RegExp(escapeRegex(u), "i");
                    return function (t) {
                        var r = n.getAttributeValue(t, a);
                        return null != r && r.length >= u.length && o.test(r) && e(t)
                    }
                }
                return function (t) {
                    var r;
                    return !!(null === (r = n.getAttributeValue(t, a)) || void 0 === r ? void 0 : r.includes(u)) && e(t)
                }
            },
            not: function (e, t, r) {
                var n = r.adapter,
                    a = t.name,
                    u = t.value;
                return "" === u ? function (t) {
                    return !!n.getAttributeValue(t, a) && e(t)
                } : shouldIgnoreCase(t, r) ? (u = u.toLowerCase(), function (t) {
                    var r = n.getAttributeValue(t, a);
                    return (null == r || r.length !== u.length || r.toLowerCase() !== u) && e(t)
                }) : function (t) {
                    return n.getAttributeValue(t, a) !== u && e(t)
                }
            }
        };
  
    }, {
        "boolbase": 2
    }],
    21: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, t, r, o) {
            void 0 === o && (o = r);
            var s = Object.getOwnPropertyDescriptor(t, r);
            s && ("get" in s ? t.__esModule : !s.writable && !s.configurable) || (s = {
                enumerable: !0,
                get: function () {
                    return t[r]
                }
            }), Object.defineProperty(e, o, s)
        } : function (e, t, r, o) {
            void 0 === o && (o = r), e[o] = t[r]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && __createBinding(t, e, r);
                return __setModuleDefault(t, e), t
            },
            __importDefault = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.compileToken = exports.compileUnsafe = exports.compile = void 0;
        var css_what_1 = require("css-what"),
            boolbase_1 = __importDefault(require("boolbase")),
            sort_js_1 = __importStar(require("./sort.js")),
            general_js_1 = require("./general.js"),
            subselects_js_1 = require("./pseudo-selectors/subselects.js");
  
        function compile(e, t, r) {
            var o = compileUnsafe(e, t, r);
            return (0, subselects_js_1.ensureIsTag)(o, t.adapter)
        }
  
        function compileUnsafe(e, t, r) {
            return compileToken("string" == typeof e ? (0, css_what_1.parse)(e) : e, t, r)
        }
  
        function includesScopePseudo(e) {
            return e.type === css_what_1.SelectorType.Pseudo && ("scope" === e.name || Array.isArray(e.data) && e.data.some(function (e) {
                return e.some(includesScopePseudo)
            }))
        }
        exports.compile = compile, exports.compileUnsafe = compileUnsafe;
        var DESCENDANT_TOKEN = {
            type: css_what_1.SelectorType.Descendant
        },
            FLEXIBLE_DESCENDANT_TOKEN = {
                type: "_flexibleDescendant"
            },
            SCOPE_TOKEN = {
                type: css_what_1.SelectorType.Pseudo,
                name: "scope",
                data: null
            };
  
        function absolutize(e, t, r) {
            for (var o = t.adapter, s = !!(null == r ? void 0 : r.every(function (e) {
                var t = o.isTag(e) && o.getParent(e);
                return e === subselects_js_1.PLACEHOLDER_ELEMENT || t && o.isTag(t)
            })), n = 0, a = e; n < a.length; n++) {
                var l = a[n];
                if (l.length > 0 && (0, sort_js_1.isTraversal)(l[0]) && l[0].type !== css_what_1.SelectorType.Descendant);
                else {
                    if (!s || l.some(includesScopePseudo)) continue;
                    l.unshift(DESCENDANT_TOKEN)
                }
                l.unshift(SCOPE_TOKEN)
            }
        }
  
        function compileToken(e, t, r) {
            var o;
            e.forEach(sort_js_1.default), r = null !== (o = t.context) && void 0 !== o ? o : r;
            var s = Array.isArray(r),
                n = r && (Array.isArray(r) ? r : [r]);
            if (!1 !== t.relativeSelector) absolutize(e, t, n);
            else if (e.some(function (e) {
                return e.length > 0 && (0, sort_js_1.isTraversal)(e[0])
            })) throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled");
            var a = !1,
                l = e.map(function (e) {
                    if (e.length >= 2) {
                        var r = e[0],
                            o = e[1];
                        r.type !== css_what_1.SelectorType.Pseudo || "scope" !== r.name || (s && o.type === css_what_1.SelectorType.Descendant ? e[1] = FLEXIBLE_DESCENDANT_TOKEN : o.type !== css_what_1.SelectorType.Adjacent && o.type !== css_what_1.SelectorType.Sibling || (a = !0))
                    }
                    return compileRules(e, t, n)
                }).reduce(reduceRules, boolbase_1.default.falseFunc);
            return l.shouldTestNextSiblings = a, l
        }
  
        function compileRules(e, t, r) {
            var o;
            return e.reduce(function (e, o) {
                return e === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : (0, general_js_1.compileGeneralSelector)(e, o, t, r, compileToken)
            }, null !== (o = t.rootFunc) && void 0 !== o ? o : boolbase_1.default.trueFunc)
        }
  
        function reduceRules(e, t) {
            return t === boolbase_1.default.falseFunc || e === boolbase_1.default.trueFunc ? e : e === boolbase_1.default.falseFunc || t === boolbase_1.default.trueFunc ? t : function (r) {
                return e(r) || t(r)
            }
        }
        exports.compileToken = compileToken;
  
    }, {
        "./general.js": 22,
        "./pseudo-selectors/subselects.js": 28,
        "./sort.js": 29,
        "boolbase": 2,
        "css-what": 30
    }],
    22: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.compileGeneralSelector = void 0;
        var attributes_js_1 = require("./attributes.js"),
            index_js_1 = require("./pseudo-selectors/index.js"),
            css_what_1 = require("css-what");
  
        function getElementParent(e, t) {
            var r = t.getParent(e);
            return r && t.isTag(r) ? r : null
        }
  
        function compileGeneralSelector(e, t, r, n, s) {
            var a = r.adapter,
                o = r.equals;
            switch (t.type) {
                case css_what_1.SelectorType.PseudoElement:
                    throw new Error("Pseudo-elements are not supported by css-select");
                case css_what_1.SelectorType.ColumnCombinator:
                    throw new Error("Column combinators are not yet supported by css-select");
                case css_what_1.SelectorType.Attribute:
                    if (null != t.namespace) throw new Error("Namespaced attributes are not yet supported by css-select");
                    return r.xmlMode && !r.lowerCaseAttributeNames || (t.name = t.name.toLowerCase()), attributes_js_1.attributeRules[t.action](e, t, r);
                case css_what_1.SelectorType.Pseudo:
                    return (0, index_js_1.compilePseudoSelector)(e, t, r, n, s);
                case css_what_1.SelectorType.Tag:
                    if (null != t.namespace) throw new Error("Namespaced tag names are not yet supported by css-select");
                    var c = t.name;
                    return r.xmlMode && !r.lowerCaseTags || (c = c.toLowerCase()),
                        function (t) {
                            return a.getName(t) === c && e(t)
                        };
                case css_what_1.SelectorType.Descendant:
                    if (!1 === r.cacheResults || "undefined" == typeof WeakSet) return function (t) {
                        for (var r = t; r = getElementParent(r, a);)
                            if (e(r)) return !0;
                        return !1
                    };
                    var l = new WeakSet;
                    return function (t) {
                        for (var r = t; r = getElementParent(r, a);)
                            if (!l.has(r)) {
                                if (a.isTag(r) && e(r)) return !0;
                                l.add(r)
                            } return !1
                    };
                case "_flexibleDescendant":
                    return function (t) {
                        var r = t;
                        do {
                            if (e(r)) return !0
                        } while (r = getElementParent(r, a));
                        return !1
                    };
                case css_what_1.SelectorType.Parent:
                    return function (t) {
                        return a.getChildren(t).some(function (t) {
                            return a.isTag(t) && e(t)
                        })
                    };
                case css_what_1.SelectorType.Child:
                    return function (t) {
                        var r = a.getParent(t);
                        return null != r && a.isTag(r) && e(r)
                    };
                case css_what_1.SelectorType.Sibling:
                    return function (t) {
                        for (var r = a.getSiblings(t), n = 0; n < r.length; n++) {
                            var s = r[n];
                            if (o(t, s)) break;
                            if (a.isTag(s) && e(s)) return !0
                        }
                        return !1
                    };
                case css_what_1.SelectorType.Adjacent:
                    return a.prevElementSibling ? function (t) {
                        var r = a.prevElementSibling(t);
                        return null != r && e(r)
                    } : function (t) {
                        for (var r, n = a.getSiblings(t), s = 0; s < n.length; s++) {
                            var c = n[s];
                            if (o(t, c)) break;
                            a.isTag(c) && (r = c)
                        }
                        return !!r && e(r)
                    };
                case css_what_1.SelectorType.Universal:
                    if (null != t.namespace && "*" !== t.namespace) throw new Error("Namespaced universal selectors are not yet supported by css-select");
                    return e
            }
        }
        exports.compileGeneralSelector = compileGeneralSelector;
  
    }, {
        "./attributes.js": 20,
        "./pseudo-selectors/index.js": 26,
        "css-what": 30
    }],
    23: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, t, r, o) {
            void 0 === o && (o = r);
            var n = Object.getOwnPropertyDescriptor(t, r);
            n && ("get" in n ? t.__esModule : !n.writable && !n.configurable) || (n = {
                enumerable: !0,
                get: function () {
                    return t[r]
                }
            }), Object.defineProperty(e, o, n)
        } : function (e, t, r, o) {
            void 0 === o && (o = r), e[o] = t[r]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && __createBinding(t, e, r);
                return __setModuleDefault(t, e), t
            },
            __importDefault = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.aliases = exports.pseudos = exports.filters = exports.is = exports.selectOne = exports.selectAll = exports.prepareContext = exports._compileToken = exports._compileUnsafe = exports.compile = void 0;
        var DomUtils = __importStar(require("domutils")),
            boolbase_1 = __importDefault(require("boolbase")),
            compile_js_1 = require("./compile.js"),
            subselects_js_1 = require("./pseudo-selectors/subselects.js"),
            defaultEquals = function (e, t) {
                return e === t
            },
            defaultOptions = {
                adapter: DomUtils,
                equals: defaultEquals
            };
  
        function convertOptionFormats(e) {
            var t, r, o, n, s = null != e ? e : defaultOptions;
            return null !== (t = s.adapter) && void 0 !== t || (s.adapter = DomUtils), null !== (r = s.equals) && void 0 !== r || (s.equals = null !== (n = null === (o = s.adapter) || void 0 === o ? void 0 : o.equals) && void 0 !== n ? n : defaultEquals), s
        }
  
        function wrapCompile(e) {
            return function (t, r, o) {
                var n = convertOptionFormats(r);
                return e(t, n, o)
            }
        }
  
        function getSelectorFunc(e) {
            return function (t, r, o) {
                var n = convertOptionFormats(o);
                "function" != typeof t && (t = (0, compile_js_1.compileUnsafe)(t, n, r));
                var s = prepareContext(r, n.adapter, t.shouldTestNextSiblings);
                return e(t, s, n)
            }
        }
  
        function prepareContext(e, t, r) {
            return void 0 === r && (r = !1), r && (e = appendNextSiblings(e, t)), Array.isArray(e) ? t.removeSubsets(e) : t.getChildren(e)
        }
  
        function appendNextSiblings(e, t) {
            for (var r = Array.isArray(e) ? e.slice(0) : [e], o = r.length, n = 0; n < o; n++) {
                var s = (0, subselects_js_1.getNextSiblings)(r[n], t);
                r.push.apply(r, s)
            }
            return r
        }
  
        function is(e, t, r) {
            var o = convertOptionFormats(r);
            return ("function" == typeof t ? t : (0, compile_js_1.compile)(t, o))(e)
        }
        exports.compile = wrapCompile(compile_js_1.compile), exports._compileUnsafe = wrapCompile(compile_js_1.compileUnsafe), exports._compileToken = wrapCompile(compile_js_1.compileToken), exports.prepareContext = prepareContext, exports.selectAll = getSelectorFunc(function (e, t, r) {
            return e !== boolbase_1.default.falseFunc && t && 0 !== t.length ? r.adapter.findAll(e, t) : []
        }), exports.selectOne = getSelectorFunc(function (e, t, r) {
            return e !== boolbase_1.default.falseFunc && t && 0 !== t.length ? r.adapter.findOne(e, t) : null
        }), exports.is = is, exports.default = exports.selectAll;
        var index_js_1 = require("./pseudo-selectors/index.js");
        Object.defineProperty(exports, "filters", {
            enumerable: !0,
            get: function () {
                return index_js_1.filters
            }
        }), Object.defineProperty(exports, "pseudos", {
            enumerable: !0,
            get: function () {
                return index_js_1.pseudos
            }
        }), Object.defineProperty(exports, "aliases", {
            enumerable: !0,
            get: function () {
                return index_js_1.aliases
            }
        });
  
    }, {
        "./compile.js": 21,
        "./pseudo-selectors/index.js": 26,
        "./pseudo-selectors/subselects.js": 28,
        "boolbase": 2,
        "domutils": 41
    }],
    24: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.aliases = void 0, exports.aliases = {
            "any-link": ":is(a, area, link)[href]",
            link: ":any-link:not(:visited)",
            disabled: ":is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )",
            enabled: ":not(:disabled)",
            checked: ":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)",
            required: ":is(input, select, textarea)[required]",
            optional: ":is(input, select, textarea):not([required])",
            selected: "option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)",
            checkbox: "[type=checkbox]",
            file: "[type=file]",
            password: "[type=password]",
            radio: "[type=radio]",
            reset: "[type=reset]",
            image: "[type=image]",
            submit: "[type=submit]",
            parent: ":not(:empty)",
            header: ":is(h1, h2, h3, h4, h5, h6)",
            button: ":is(button, input[type=button])",
            input: ":is(input, textarea, select, button)",
            text: "input:is(:not([type!='']), [type=text])"
        };
  
    }, {}],
    25: [function (require, module, exports) {
        "use strict";
        var __importDefault = this && this.__importDefault || function (e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.filters = void 0;
        var nth_check_1 = __importDefault(require("nth-check")),
            boolbase_1 = __importDefault(require("boolbase"));
  
        function getChildFunc(e, t) {
            return function (n) {
                var a = t.getParent(n);
                return null != a && t.isTag(a) && e(n)
            }
        }
  
        function dynamicStatePseudo(e) {
            return function (t, n, a) {
                var u = a.adapter[e];
                return "function" != typeof u ? boolbase_1.default.falseFunc : function (e) {
                    return u(e) && t(e)
                }
            }
        }
        exports.filters = {
            contains: function (e, t, n) {
                var a = n.adapter;
                return function (n) {
                    return e(n) && a.getText(n).includes(t)
                }
            },
            icontains: function (e, t, n) {
                var a = n.adapter,
                    u = t.toLowerCase();
                return function (t) {
                    return e(t) && a.getText(t).toLowerCase().includes(u)
                }
            },
            "nth-child": function (e, t, n) {
                var a = n.adapter,
                    u = n.equals,
                    r = (0, nth_check_1.default)(t);
                return r === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : r === boolbase_1.default.trueFunc ? getChildFunc(e, a) : function (t) {
                    for (var n = a.getSiblings(t), o = 0, l = 0; l < n.length && !u(t, n[l]); l++) a.isTag(n[l]) && o++;
                    return r(o) && e(t)
                }
            },
            "nth-last-child": function (e, t, n) {
                var a = n.adapter,
                    u = n.equals,
                    r = (0, nth_check_1.default)(t);
                return r === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : r === boolbase_1.default.trueFunc ? getChildFunc(e, a) : function (t) {
                    for (var n = a.getSiblings(t), o = 0, l = n.length - 1; l >= 0 && !u(t, n[l]); l--) a.isTag(n[l]) && o++;
                    return r(o) && e(t)
                }
            },
            "nth-of-type": function (e, t, n) {
                var a = n.adapter,
                    u = n.equals,
                    r = (0, nth_check_1.default)(t);
                return r === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : r === boolbase_1.default.trueFunc ? getChildFunc(e, a) : function (t) {
                    for (var n = a.getSiblings(t), o = 0, l = 0; l < n.length; l++) {
                        var i = n[l];
                        if (u(t, i)) break;
                        a.isTag(i) && a.getName(i) === a.getName(t) && o++
                    }
                    return r(o) && e(t)
                }
            },
            "nth-last-of-type": function (e, t, n) {
                var a = n.adapter,
                    u = n.equals,
                    r = (0, nth_check_1.default)(t);
                return r === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : r === boolbase_1.default.trueFunc ? getChildFunc(e, a) : function (t) {
                    for (var n = a.getSiblings(t), o = 0, l = n.length - 1; l >= 0; l--) {
                        var i = n[l];
                        if (u(t, i)) break;
                        a.isTag(i) && a.getName(i) === a.getName(t) && o++
                    }
                    return r(o) && e(t)
                }
            },
            root: function (e, t, n) {
                var a = n.adapter;
                return function (t) {
                    var n = a.getParent(t);
                    return (null == n || !a.isTag(n)) && e(t)
                }
            },
            scope: function (e, t, n, a) {
                var u = n.equals;
                return a && 0 !== a.length ? 1 === a.length ? function (t) {
                    return u(a[0], t) && e(t)
                } : function (t) {
                    return a.includes(t) && e(t)
                } : exports.filters.root(e, t, n)
            },
            hover: dynamicStatePseudo("isHovered"),
            visited: dynamicStatePseudo("isVisited"),
            active: dynamicStatePseudo("isActive")
        };
  
    }, {
        "boolbase": 2,
        "nth-check": 61
    }],
    26: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.compilePseudoSelector = exports.aliases = exports.pseudos = exports.filters = void 0;
        var css_what_1 = require("css-what"),
            filters_js_1 = require("./filters.js");
        Object.defineProperty(exports, "filters", {
            enumerable: !0,
            get: function () {
                return filters_js_1.filters
            }
        });
        var pseudos_js_1 = require("./pseudos.js");
        Object.defineProperty(exports, "pseudos", {
            enumerable: !0,
            get: function () {
                return pseudos_js_1.pseudos
            }
        });
        var aliases_js_1 = require("./aliases.js");
        Object.defineProperty(exports, "aliases", {
            enumerable: !0,
            get: function () {
                return aliases_js_1.aliases
            }
        });
        var subselects_js_1 = require("./subselects.js");
  
        function compilePseudoSelector(e, s, r, t, o) {
            var u, i = s.name,
                n = s.data;
            if (Array.isArray(n)) {
                if (!(i in subselects_js_1.subselects)) throw new Error("Unknown pseudo-class :".concat(i, "(").concat(n, ")"));
                return subselects_js_1.subselects[i](e, n, r, t, o)
            }
            var a = null === (u = r.pseudos) || void 0 === u ? void 0 : u[i],
                l = "string" == typeof a ? a : aliases_js_1.aliases[i];
            if ("string" == typeof l) {
                if (null != n) throw new Error("Pseudo ".concat(i, " doesn't have any arguments"));
                var c = (0, css_what_1.parse)(l);
                return subselects_js_1.subselects.is(e, c, r, t, o)
            }
            if ("function" == typeof a) return (0, pseudos_js_1.verifyPseudoArgs)(a, i, n, 1),
                function (s) {
                    return a(s, n) && e(s)
                };
            if (i in filters_js_1.filters) return filters_js_1.filters[i](e, n, r, t);
            if (i in pseudos_js_1.pseudos) {
                var _ = pseudos_js_1.pseudos[i];
                return (0, pseudos_js_1.verifyPseudoArgs)(_, i, n, 2),
                    function (s) {
                        return _(s, r, n) && e(s)
                    }
            }
            throw new Error("Unknown pseudo-class :".concat(i))
        }
        exports.compilePseudoSelector = compilePseudoSelector;
  
    }, {
        "./aliases.js": 24,
        "./filters.js": 25,
        "./pseudos.js": 27,
        "./subselects.js": 28,
        "css-what": 30
    }],
    27: [function (require, module, exports) {
        "use strict";
  
        function verifyPseudoArgs(e, r, t, n) {
            if (null === t) {
                if (e.length > n) throw new Error("Pseudo-class :".concat(r, " requires an argument"))
            } else if (e.length === n) throw new Error("Pseudo-class :".concat(r, " doesn't have any arguments"))
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.verifyPseudoArgs = exports.pseudos = void 0, exports.pseudos = {
            empty: function (e, r) {
                var t = r.adapter;
                return !t.getChildren(e).some(function (e) {
                    return t.isTag(e) || "" !== t.getText(e)
                })
            },
            "first-child": function (e, r) {
                var t = r.adapter,
                    n = r.equals;
                if (t.prevElementSibling) return null == t.prevElementSibling(e);
                var i = t.getSiblings(e).find(function (e) {
                    return t.isTag(e)
                });
                return null != i && n(e, i)
            },
            "last-child": function (e, r) {
                for (var t = r.adapter, n = r.equals, i = t.getSiblings(e), a = i.length - 1; a >= 0; a--) {
                    if (n(e, i[a])) return !0;
                    if (t.isTag(i[a])) break
                }
                return !1
            },
            "first-of-type": function (e, r) {
                for (var t = r.adapter, n = r.equals, i = t.getSiblings(e), a = t.getName(e), s = 0; s < i.length; s++) {
                    var u = i[s];
                    if (n(e, u)) return !0;
                    if (t.isTag(u) && t.getName(u) === a) break
                }
                return !1
            },
            "last-of-type": function (e, r) {
                for (var t = r.adapter, n = r.equals, i = t.getSiblings(e), a = t.getName(e), s = i.length - 1; s >= 0; s--) {
                    var u = i[s];
                    if (n(e, u)) return !0;
                    if (t.isTag(u) && t.getName(u) === a) break
                }
                return !1
            },
            "only-of-type": function (e, r) {
                var t = r.adapter,
                    n = r.equals,
                    i = t.getName(e);
                return t.getSiblings(e).every(function (r) {
                    return n(e, r) || !t.isTag(r) || t.getName(r) !== i
                })
            },
            "only-child": function (e, r) {
                var t = r.adapter,
                    n = r.equals;
                return t.getSiblings(e).every(function (r) {
                    return n(e, r) || !t.isTag(r)
                })
            }
        }, exports.verifyPseudoArgs = verifyPseudoArgs;
  
    }, {}],
    28: [function (require, module, exports) {
        "use strict";
        var __spreadArray = this && this.__spreadArray || function (e, t, r) {
            if (r || 2 === arguments.length)
                for (var s, a = 0, o = t.length; a < o; a++) !s && a in t || (s || (s = Array.prototype.slice.call(t, 0, a)), s[a] = t[a]);
            return e.concat(s || Array.prototype.slice.call(t))
        },
            __importDefault = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.subselects = exports.getNextSiblings = exports.ensureIsTag = exports.PLACEHOLDER_ELEMENT = void 0;
        var boolbase_1 = __importDefault(require("boolbase")),
            sort_js_1 = require("../sort.js");
  
        function ensureIsTag(e, t) {
            return e === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : function (r) {
                return t.isTag(r) && e(r)
            }
        }
  
        function getNextSiblings(e, t) {
            var r = t.getSiblings(e);
            if (r.length <= 1) return [];
            var s = r.indexOf(e);
            return s < 0 || s === r.length - 1 ? [] : r.slice(s + 1).filter(t.isTag)
        }
  
        function copyOptions(e) {
            return {
                xmlMode: !!e.xmlMode,
                lowerCaseAttributeNames: !!e.lowerCaseAttributeNames,
                lowerCaseTags: !!e.lowerCaseTags,
                quirksMode: !!e.quirksMode,
                cacheResults: !!e.cacheResults,
                pseudos: e.pseudos,
                adapter: e.adapter,
                equals: e.equals
            }
        }
        exports.PLACEHOLDER_ELEMENT = {}, exports.ensureIsTag = ensureIsTag, exports.getNextSiblings = getNextSiblings;
        var is = function (e, t, r, s, a) {
            var o = a(t, copyOptions(r), s);
            return o === boolbase_1.default.trueFunc ? e : o === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : function (t) {
                return o(t) && e(t)
            }
        };
        exports.subselects = {
            is: is,
            matches: is,
            where: is,
            not: function (e, t, r, s, a) {
                var o = a(t, copyOptions(r), s);
                return o === boolbase_1.default.falseFunc ? e : o === boolbase_1.default.trueFunc ? boolbase_1.default.falseFunc : function (t) {
                    return !o(t) && e(t)
                }
            },
            has: function (e, t, r, s, a) {
                var o = r.adapter,
                    n = copyOptions(r);
                n.relativeSelector = !0;
                var u = t.some(function (e) {
                    return e.some(sort_js_1.isTraversal)
                }) ? [exports.PLACEHOLDER_ELEMENT] : void 0,
                    l = a(t, n, u);
                if (l === boolbase_1.default.falseFunc) return boolbase_1.default.falseFunc;
                var i = ensureIsTag(l, o);
                if (u && l !== boolbase_1.default.trueFunc) {
                    var c = l.shouldTestNextSiblings,
                        f = void 0 !== c && c;
                    return function (t) {
                        if (!e(t)) return !1;
                        u[0] = t;
                        var r = o.getChildren(t),
                            s = f ? __spreadArray(__spreadArray([], r, !0), getNextSiblings(t, o), !0) : r;
                        return o.existsOne(i, s)
                    }
                }
                return function (t) {
                    return e(t) && o.existsOne(i, o.getChildren(t))
                }
            }
        };
  
    }, {
        "../sort.js": 29,
        "boolbase": 2
    }],
    29: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.isTraversal = void 0;
        var css_what_1 = require("css-what"),
            procedure = new Map([
                [css_what_1.SelectorType.Universal, 50],
                [css_what_1.SelectorType.Tag, 30],
                [css_what_1.SelectorType.Attribute, 1],
                [css_what_1.SelectorType.Pseudo, 0]
            ]);
  
        function isTraversal(t) {
            return !procedure.has(t.type)
        }
        exports.isTraversal = isTraversal;
        var attributes = new Map([
            [css_what_1.AttributeAction.Exists, 10],
            [css_what_1.AttributeAction.Equals, 8],
            [css_what_1.AttributeAction.Not, 7],
            [css_what_1.AttributeAction.Start, 6],
            [css_what_1.AttributeAction.End, 6],
            [css_what_1.AttributeAction.Any, 5]
        ]);
  
        function sortByProcedure(t) {
            for (var e = t.map(getProcedure), r = 1; r < t.length; r++) {
                var a = e[r];
                if (!(a < 0))
                    for (var s = r - 1; s >= 0 && a < e[s]; s--) {
                        var c = t[s + 1];
                        t[s + 1] = t[s], t[s] = c, e[s + 1] = e[s], e[s] = a
                    }
            }
        }
  
        function getProcedure(t) {
            var e, r, a = null !== (e = procedure.get(t.type)) && void 0 !== e ? e : -1;
            return t.type === css_what_1.SelectorType.Attribute ? (a = null !== (r = attributes.get(t.action)) && void 0 !== r ? r : 4, t.action === css_what_1.AttributeAction.Equals && "id" === t.name && (a = 9), t.ignoreCase && (a >>= 1)) : t.type === css_what_1.SelectorType.Pseudo && (t.data ? "has" === t.name || "contains" === t.name ? a = 0 : Array.isArray(t.data) ? (a = Math.min.apply(Math, t.data.map(function (t) {
                return Math.min.apply(Math, t.map(getProcedure))
            }))) < 0 && (a = 0) : a = 2 : a = 3), a
        }
        exports.default = sortByProcedure;
  
    }, {
        "css-what": 30
    }],
    30: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, r, t, i) {
            void 0 === i && (i = t);
            var n = Object.getOwnPropertyDescriptor(r, t);
            n && ("get" in n ? r.__esModule : !n.writable && !n.configurable) || (n = {
                enumerable: !0,
                get: function () {
                    return r[t]
                }
            }), Object.defineProperty(e, i, n)
        } : function (e, r, t, i) {
            void 0 === i && (i = t), e[i] = r[t]
        }),
            __exportStar = this && this.__exportStar || function (e, r) {
                for (var t in e) "default" === t || Object.prototype.hasOwnProperty.call(r, t) || __createBinding(r, e, t)
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.stringify = exports.parse = exports.isTraversal = void 0, __exportStar(require("./types"), exports);
        var parse_1 = require("./parse");
        Object.defineProperty(exports, "isTraversal", {
            enumerable: !0,
            get: function () {
                return parse_1.isTraversal
            }
        }), Object.defineProperty(exports, "parse", {
            enumerable: !0,
            get: function () {
                return parse_1.parse
            }
        });
        var stringify_1 = require("./stringify");
        Object.defineProperty(exports, "stringify", {
            enumerable: !0,
            get: function () {
                return stringify_1.stringify
            }
        });
  
    }, {
        "./parse": 31,
        "./stringify": 32,
        "./types": 33
    }],
    31: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.parse = exports.isTraversal = void 0;
        var types_1 = require("./types"),
            reName = /^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/,
            reEscape = /\\([\da-f]{1,6}\s?|(\s)|.)/gi,
            actionTypes = new Map([
                [126, types_1.AttributeAction.Element],
                [94, types_1.AttributeAction.Start],
                [36, types_1.AttributeAction.End],
                [42, types_1.AttributeAction.Any],
                [33, types_1.AttributeAction.Not],
                [124, types_1.AttributeAction.Hyphen]
            ]),
            unpackPseudos = new Set(["has", "not", "matches", "is", "where", "host", "host-context"]);
  
        function isTraversal(e) {
            switch (e.type) {
                case types_1.SelectorType.Adjacent:
                case types_1.SelectorType.Child:
                case types_1.SelectorType.Descendant:
                case types_1.SelectorType.Parent:
                case types_1.SelectorType.Sibling:
                case types_1.SelectorType.ColumnCombinator:
                    return !0;
                default:
                    return !1
            }
        }
        exports.isTraversal = isTraversal;
        var stripQuotesFromPseudos = new Set(["contains", "icontains"]);
  
        function funescape(e, t, r) {
            var a = parseInt(t, 16) - 65536;
            return a != a || r ? t : a < 0 ? String.fromCharCode(a + 65536) : String.fromCharCode(a >> 10 | 55296, 1023 & a | 56320)
        }
  
        function unescapeCSS(e) {
            return e.replace(reEscape, funescape)
        }
  
        function isQuote(e) {
            return 39 === e || 34 === e
        }
  
        function isWhitespace(e) {
            return 32 === e || 9 === e || 10 === e || 12 === e || 13 === e
        }
  
        function parse(e) {
            var t = [],
                r = parseSelector(t, "".concat(e), 0);
            if (r < e.length) throw new Error("Unmatched selector: ".concat(e.slice(r)));
            return t
        }
  
        function parseSelector(e, t, r) {
            var a = [];
  
            function s(e) {
                var a = t.slice(r + e).match(reName);
                if (!a) throw new Error("Expected name, found ".concat(t.slice(r)));
                var s = a[0];
                return r += e + s.length, unescapeCSS(s)
            }
  
            function n(e) {
                for (r += e; r < t.length && isWhitespace(t.charCodeAt(r));) r++
            }
  
            function o() {
                for (var e = r += 1, a = 1; a > 0 && r < t.length; r++) 40 !== t.charCodeAt(r) || c(r) ? 41 !== t.charCodeAt(r) || c(r) || a-- : a++;
                if (a) throw new Error("Parenthesis not matched");
                return unescapeCSS(t.slice(e, r - 1))
            }
  
            function c(e) {
                for (var r = 0; 92 === t.charCodeAt(--e);) r++;
                return 1 == (1 & r)
            }
  
            function i() {
                if (a.length > 0 && isTraversal(a[a.length - 1])) throw new Error("Did not expect successive traversals.")
            }
  
            function p(e) {
                a.length > 0 && a[a.length - 1].type === types_1.SelectorType.Descendant ? a[a.length - 1].type = e : (i(), a.push({
                    type: e
                }))
            }
  
            function l(e, t) {
                a.push({
                    type: types_1.SelectorType.Attribute,
                    name: e,
                    action: t,
                    value: s(1),
                    namespace: null,
                    ignoreCase: "quirks"
                })
            }
  
            function u() {
                if (a.length && a[a.length - 1].type === types_1.SelectorType.Descendant && a.pop(), 0 === a.length) throw new Error("Empty sub-selector");
                e.push(a)
            }
            if (n(0), t.length === r) return r;
            e: for (; r < t.length;) {
                var h = t.charCodeAt(r);
                switch (h) {
                    case 32:
                    case 9:
                    case 10:
                    case 12:
                    case 13:
                        0 !== a.length && a[0].type === types_1.SelectorType.Descendant || (i(), a.push({
                            type: types_1.SelectorType.Descendant
                        })), n(1);
                        break;
                    case 62:
                        p(types_1.SelectorType.Child), n(1);
                        break;
                    case 60:
                        p(types_1.SelectorType.Parent), n(1);
                        break;
                    case 126:
                        p(types_1.SelectorType.Sibling), n(1);
                        break;
                    case 43:
                        p(types_1.SelectorType.Adjacent), n(1);
                        break;
                    case 46:
                        l("class", types_1.AttributeAction.Element);
                        break;
                    case 35:
                        l("id", types_1.AttributeAction.Equals);
                        break;
                    case 91:
                        n(1);
                        var d = void 0,
                            y = null;
                        124 === t.charCodeAt(r) ? d = s(1) : t.startsWith("*|", r) ? (y = "*", d = s(2)) : (d = s(0), 124 === t.charCodeAt(r) && 61 !== t.charCodeAt(r + 1) && (y = d, d = s(1))), n(0);
                        var A = types_1.AttributeAction.Exists,
                            f = actionTypes.get(t.charCodeAt(r));
                        if (f) {
                            if (A = f, 61 !== t.charCodeAt(r + 1)) throw new Error("Expected `=`");
                            n(2)
                        } else 61 === t.charCodeAt(r) && (A = types_1.AttributeAction.Equals, n(1));
                        var C = "",
                            S = null;
                        if ("exists" !== A) {
                            if (isQuote(t.charCodeAt(r))) {
                                for (var v = t.charCodeAt(r), b = r + 1; b < t.length && (t.charCodeAt(b) !== v || c(b));) b += 1;
                                if (t.charCodeAt(b) !== v) throw new Error("Attribute value didn't end");
                                C = unescapeCSS(t.slice(r + 1, b)), r = b + 1
                            } else {
                                for (var _ = r; r < t.length && (!isWhitespace(t.charCodeAt(r)) && 93 !== t.charCodeAt(r) || c(r));) r += 1;
                                C = unescapeCSS(t.slice(_, r))
                            }
                            n(0);
                            var m = 32 | t.charCodeAt(r);
                            115 === m ? (S = !1, n(1)) : 105 === m && (S = !0, n(1))
                        }
                        if (93 !== t.charCodeAt(r)) throw new Error("Attribute selector didn't terminate");
                        r += 1;
                        var w = {
                            type: types_1.SelectorType.Attribute,
                            name: d,
                            action: A,
                            value: C,
                            namespace: y,
                            ignoreCase: S
                        };
                        a.push(w);
                        break;
                    case 58:
                        if (58 === t.charCodeAt(r + 1)) {
                            a.push({
                                type: types_1.SelectorType.PseudoElement,
                                name: s(2).toLowerCase(),
                                data: 40 === t.charCodeAt(r) ? o() : null
                            });
                            continue
                        }
                        var g = s(1).toLowerCase(),
                            T = null;
                        if (40 === t.charCodeAt(r))
                            if (unpackPseudos.has(g)) {
                                if (isQuote(t.charCodeAt(r + 1))) throw new Error("Pseudo-selector ".concat(g, " cannot be quoted"));
                                if (r = parseSelector(T = [], t, r + 1), 41 !== t.charCodeAt(r)) throw new Error("Missing closing parenthesis in :".concat(g, " (").concat(t, ")"));
                                r += 1
                            } else {
                                if (T = o(), stripQuotesFromPseudos.has(g)) {
                                    var E = T.charCodeAt(0);
                                    E === T.charCodeAt(T.length - 1) && isQuote(E) && (T = T.slice(1, -1))
                                }
                                T = unescapeCSS(T)
                            } a.push({
                                type: types_1.SelectorType.Pseudo,
                                name: g,
                                data: T
                            });
                        break;
                    case 44:
                        u(), a = [], n(1);
                        break;
                    default:
                        if (t.startsWith("/*", r)) {
                            var k = t.indexOf("*/", r + 2);
                            if (k < 0) throw new Error("Comment was not terminated");
                            r = k + 2, 0 === a.length && n(0);
                            break
                        }
                        y = null;
                        var x = void 0;
                        if (42 === h) r += 1, x = "*";
                        else if (124 === h) {
                            if (x = "", 124 === t.charCodeAt(r + 1)) {
                                p(types_1.SelectorType.ColumnCombinator), n(2);
                                break
                            }
                        } else {
                            if (!reName.test(t.slice(r))) break e;
                            x = s(0)
                        }
                        124 === t.charCodeAt(r) && 124 !== t.charCodeAt(r + 1) && (y = x, 42 === t.charCodeAt(r + 1) ? (x = "*", r += 2) : x = s(1)), a.push("*" === x ? {
                            type: types_1.SelectorType.Universal,
                            namespace: y
                        } : {
                            type: types_1.SelectorType.Tag,
                            name: x,
                            namespace: y
                        })
                }
            }
            return u(), r
        }
        exports.parse = parse;
  
    }, {
        "./types": 33
    }],
    32: [function (require, module, exports) {
        "use strict";
        var __spreadArray = this && this.__spreadArray || function (e, t, a) {
            if (a || 2 === arguments.length)
                for (var r, c = 0, n = t.length; c < n; c++) !r && c in t || (r || (r = Array.prototype.slice.call(t, 0, c)), r[c] = t[c]);
            return e.concat(r || Array.prototype.slice.call(t))
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.stringify = void 0;
        var types_1 = require("./types"),
            attribValChars = ["\\", '"'],
            pseudoValChars = __spreadArray(__spreadArray([], attribValChars, !0), ["(", ")"], !1),
            charsToEscapeInAttributeValue = new Set(attribValChars.map(function (e) {
                return e.charCodeAt(0)
            })),
            charsToEscapeInPseudoValue = new Set(pseudoValChars.map(function (e) {
                return e.charCodeAt(0)
            })),
            charsToEscapeInName = new Set(__spreadArray(__spreadArray([], pseudoValChars, !0), ["~", "^", "$", "*", "+", "!", "|", ":", "[", "]", " ", "."], !1).map(function (e) {
                return e.charCodeAt(0)
            }));
  
        function stringify(e) {
            return e.map(function (e) {
                return e.map(stringifyToken).join("")
            }).join(", ")
        }
  
        function stringifyToken(e, t, a) {
            switch (e.type) {
                case types_1.SelectorType.Child:
                    return 0 === t ? "> " : " > ";
                case types_1.SelectorType.Parent:
                    return 0 === t ? "< " : " < ";
                case types_1.SelectorType.Sibling:
                    return 0 === t ? "~ " : " ~ ";
                case types_1.SelectorType.Adjacent:
                    return 0 === t ? "+ " : " + ";
                case types_1.SelectorType.Descendant:
                    return " ";
                case types_1.SelectorType.ColumnCombinator:
                    return 0 === t ? "|| " : " || ";
                case types_1.SelectorType.Universal:
                    return "*" === e.namespace && t + 1 < a.length && "name" in a[t + 1] ? "" : "".concat(getNamespace(e.namespace), "*");
                case types_1.SelectorType.Tag:
                    return getNamespacedName(e);
                case types_1.SelectorType.PseudoElement:
                    return "::".concat(escapeName(e.name, charsToEscapeInName)).concat(null === e.data ? "" : "(".concat(escapeName(e.data, charsToEscapeInPseudoValue), ")"));
                case types_1.SelectorType.Pseudo:
                    return ":".concat(escapeName(e.name, charsToEscapeInName)).concat(null === e.data ? "" : "(".concat("string" == typeof e.data ? escapeName(e.data, charsToEscapeInPseudoValue) : stringify(e.data), ")"));
                case types_1.SelectorType.Attribute:
                    if ("id" === e.name && e.action === types_1.AttributeAction.Equals && "quirks" === e.ignoreCase && !e.namespace) return "#".concat(escapeName(e.value, charsToEscapeInName));
                    if ("class" === e.name && e.action === types_1.AttributeAction.Element && "quirks" === e.ignoreCase && !e.namespace) return ".".concat(escapeName(e.value, charsToEscapeInName));
                    var r = getNamespacedName(e);
                    return e.action === types_1.AttributeAction.Exists ? "[".concat(r, "]") : "[".concat(r).concat(getActionValue(e.action), '="').concat(escapeName(e.value, charsToEscapeInAttributeValue), '"').concat(null === e.ignoreCase ? "" : e.ignoreCase ? " i" : " s", "]")
            }
        }
  
        function getActionValue(e) {
            switch (e) {
                case types_1.AttributeAction.Equals:
                    return "";
                case types_1.AttributeAction.Element:
                    return "~";
                case types_1.AttributeAction.Start:
                    return "^";
                case types_1.AttributeAction.End:
                    return "$";
                case types_1.AttributeAction.Any:
                    return "*";
                case types_1.AttributeAction.Not:
                    return "!";
                case types_1.AttributeAction.Hyphen:
                    return "|";
                case types_1.AttributeAction.Exists:
                    throw new Error("Shouldn't be here")
            }
        }
  
        function getNamespacedName(e) {
            return "".concat(getNamespace(e.namespace)).concat(escapeName(e.name, charsToEscapeInName))
        }
  
        function getNamespace(e) {
            return null !== e ? "".concat("*" === e ? "*" : escapeName(e, charsToEscapeInName), "|") : ""
        }
  
        function escapeName(e, t) {
            for (var a = 0, r = "", c = 0; c < e.length; c++) t.has(e.charCodeAt(c)) && (r += "".concat(e.slice(a, c), "\\").concat(e.charAt(c)), a = c + 1);
            return r.length > 0 ? r + e.slice(a) : e
        }
        exports.stringify = stringify;
  
    }, {
        "./types": 33
    }],
    33: [function (require, module, exports) {
        "use strict";
        var SelectorType, AttributeAction;
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.AttributeAction = exports.IgnoreCaseMode = exports.SelectorType = void 0,
            function (e) {
                e.Attribute = "attribute", e.Pseudo = "pseudo", e.PseudoElement = "pseudo-element", e.Tag = "tag", e.Universal = "universal", e.Adjacent = "adjacent", e.Child = "child", e.Descendant = "descendant", e.Parent = "parent", e.Sibling = "sibling", e.ColumnCombinator = "column-combinator"
            }(SelectorType = exports.SelectorType || (exports.SelectorType = {})), exports.IgnoreCaseMode = {
                Unknown: null,
                QuirksMode: "quirks",
                IgnoreCase: !0,
                CaseSensitive: !1
            },
            function (e) {
                e.Any = "any", e.Element = "element", e.End = "end", e.Equals = "equals", e.Exists = "exists", e.Hyphen = "hyphen", e.Not = "not", e.Start = "start"
            }(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));
  
    }, {}],
    34: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.attributeNames = exports.elementNames = void 0, exports.elementNames = new Map(["altGlyph", "altGlyphDef", "altGlyphItem", "animateColor", "animateMotion", "animateTransform", "clipPath", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "foreignObject", "glyphRef", "linearGradient", "radialGradient", "textPath"].map(function (e) {
            return [e.toLowerCase(), e]
        })), exports.attributeNames = new Map(["definitionURL", "attributeName", "attributeType", "baseFrequency", "baseProfile", "calcMode", "clipPathUnits", "diffuseConstant", "edgeMode", "filterUnits", "glyphRef", "gradientTransform", "gradientUnits", "kernelMatrix", "kernelUnitLength", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "limitingConeAngle", "markerHeight", "markerUnits", "markerWidth", "maskContentUnits", "maskUnits", "numOctaves", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "refX", "refY", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "specularConstant", "specularExponent", "spreadMethod", "startOffset", "stdDeviation", "stitchTiles", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textLength", "viewBox", "viewTarget", "xChannelSelector", "yChannelSelector", "zoomAndPan"].map(function (e) {
            return [e.toLowerCase(), e]
        }));
  
    }, {}],
    35: [function (require, module, exports) {
        "use strict";
        var __assign = this && this.__assign || function () {
            return (__assign = Object.assign || function (e) {
                for (var t, n = 1, r = arguments.length; n < r; n++)
                    for (var i in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e
            }).apply(this, arguments)
        },
            __createBinding = this && this.__createBinding || (Object.create ? function (e, t, n, r) {
                void 0 === r && (r = n);
                var i = Object.getOwnPropertyDescriptor(t, n);
                i && ("get" in i ? t.__esModule : !i.writable && !i.configurable) || (i = {
                    enumerable: !0,
                    get: function () {
                        return t[n]
                    }
                }), Object.defineProperty(e, r, i)
            } : function (e, t, n, r) {
                void 0 === r && (r = n), e[r] = t[n]
            }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var n in e) "default" !== n && Object.prototype.hasOwnProperty.call(e, n) && __createBinding(t, e, n);
                return __setModuleDefault(t, e), t
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.render = void 0;
        var ElementType = __importStar(require("domelementtype")),
            entities_1 = require("entities"),
            foreignNames_js_1 = require("./foreignNames.js"),
            unencodedElements = new Set(["style", "script", "xmp", "iframe", "noembed", "noframes", "plaintext", "noscript"]);
  
        function replaceQuotes(e) {
            return e.replace(/"/g, "&quot;")
        }
  
        function formatAttributes(e, t) {
            var n;
            if (e) {
                var r = !1 === (null !== (n = t.encodeEntities) && void 0 !== n ? n : t.decodeEntities) ? replaceQuotes : t.xmlMode || "utf8" !== t.encodeEntities ? entities_1.encodeXML : entities_1.escapeAttribute;
                return Object.keys(e).map(function (n) {
                    var i, a, o = null !== (i = e[n]) && void 0 !== i ? i : "";
                    return "foreign" === t.xmlMode && (n = null !== (a = foreignNames_js_1.attributeNames.get(n)) && void 0 !== a ? a : n), t.emptyAttrs || t.xmlMode || "" !== o ? "".concat(n, '="').concat(r(o), '"') : n
                }).join(" ")
            }
        }
        var singleTag = new Set(["area", "base", "basefont", "br", "col", "command", "embed", "frame", "hr", "img", "input", "isindex", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
  
        function render(e, t) {
            void 0 === t && (t = {});
            for (var n = ("length" in e ? e : [e]), r = "", i = 0; i < n.length; i++) r += renderNode(n[i], t);
            return r
        }
  
        function renderNode(e, t) {
            switch (e.type) {
                case ElementType.Root:
                    return render(e.children, t);
                case ElementType.Doctype:
                case ElementType.Directive:
                    return renderDirective(e);
                case ElementType.Comment:
                    return renderComment(e);
                case ElementType.CDATA:
                    return renderCdata(e);
                case ElementType.Script:
                case ElementType.Style:
                case ElementType.Tag:
                    return renderTag(e, t);
                case ElementType.Text:
                    return renderText(e, t)
            }
        }
        exports.render = render, exports.default = render;
        var foreignModeIntegrationPoints = new Set(["mi", "mo", "mn", "ms", "mtext", "annotation-xml", "foreignObject", "desc", "title"]),
            foreignElements = new Set(["svg", "math"]);
  
        function renderTag(e, t) {
            var n;
            "foreign" === t.xmlMode && (e.name = null !== (n = foreignNames_js_1.elementNames.get(e.name)) && void 0 !== n ? n : e.name, e.parent && foreignModeIntegrationPoints.has(e.parent.name) && (t = __assign(__assign({}, t), {
                xmlMode: !1
            }))), !t.xmlMode && foreignElements.has(e.name) && (t = __assign(__assign({}, t), {
                xmlMode: "foreign"
            }));
            var r = "<".concat(e.name),
                i = formatAttributes(e.attribs, t);
            return i && (r += " ".concat(i)), 0 === e.children.length && (t.xmlMode ? !1 !== t.selfClosingTags : t.selfClosingTags && singleTag.has(e.name)) ? (t.xmlMode || (r += " "), r += "/>") : (r += ">", e.children.length > 0 && (r += render(e.children, t)), !t.xmlMode && singleTag.has(e.name) || (r += "</".concat(e.name, ">"))), r
        }
  
        function renderDirective(e) {
            return "<".concat(e.data, ">")
        }
  
        function renderText(e, t) {
            var n, r = e.data || "";
            return !1 === (null !== (n = t.encodeEntities) && void 0 !== n ? n : t.decodeEntities) || !t.xmlMode && e.parent && unencodedElements.has(e.parent.name) || (r = t.xmlMode || "utf8" !== t.encodeEntities ? (0, entities_1.encodeXML)(r) : (0, entities_1.escapeText)(r)), r
        }
  
        function renderCdata(e) {
            return "<![CDATA[".concat(e.children[0].data, "]]>")
        }
  
        function renderComment(e) {
            return "\x3c!--".concat(e.data, "--\x3e")
        }
  
    }, {
        "./foreignNames.js": 34,
        "domelementtype": 36,
        "entities": 54
    }],
    36: [function (require, module, exports) {
        "use strict";
        var ElementType;
  
        function isTag(e) {
            return e.type === ElementType.Tag || e.type === ElementType.Script || e.type === ElementType.Style
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0,
            function (e) {
                e.Root = "root", e.Text = "text", e.Directive = "directive", e.Comment = "comment", e.Script = "script", e.Style = "style", e.Tag = "tag", e.CDATA = "cdata", e.Doctype = "doctype"
            }(ElementType = exports.ElementType || (exports.ElementType = {})), exports.isTag = isTag, exports.Root = ElementType.Root, exports.Text = ElementType.Text, exports.Directive = ElementType.Directive, exports.Comment = ElementType.Comment, exports.Script = ElementType.Script, exports.Style = ElementType.Style, exports.Tag = ElementType.Tag, exports.CDATA = ElementType.CDATA, exports.Doctype = ElementType.Doctype;
  
    }, {}],
    37: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (t, e, n, o) {
            void 0 === o && (o = n);
            var i = Object.getOwnPropertyDescriptor(e, n);
            i && ("get" in i ? e.__esModule : !i.writable && !i.configurable) || (i = {
                enumerable: !0,
                get: function () {
                    return e[n]
                }
            }), Object.defineProperty(t, o, i)
        } : function (t, e, n, o) {
            void 0 === o && (o = n), t[o] = e[n]
        }),
            __exportStar = this && this.__exportStar || function (t, e) {
                for (var n in t) "default" === n || Object.prototype.hasOwnProperty.call(e, n) || __createBinding(e, t, n)
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.DomHandler = void 0;
        var domelementtype_1 = require("domelementtype"),
            node_js_1 = require("./node.js");
        __exportStar(require("./node.js"), exports);
        var defaultOpts = {
            withStartIndices: !1,
            withEndIndices: !1,
            xmlMode: !1
        },
            DomHandler = function () {
                function t(t, e, n) {
                    this.dom = [], this.root = new node_js_1.Document(this.dom), this.done = !1, this.tagStack = [this.root], this.lastNode = null, this.parser = null, "function" == typeof e && (n = e, e = defaultOpts), "object" == typeof t && (e = t, t = void 0), this.callback = null != t ? t : null, this.options = null != e ? e : defaultOpts, this.elementCB = null != n ? n : null
                }
                return t.prototype.onparserinit = function (t) {
                    this.parser = t
                }, t.prototype.onreset = function () {
                    this.dom = [], this.root = new node_js_1.Document(this.dom), this.done = !1, this.tagStack = [this.root], this.lastNode = null, this.parser = null
                }, t.prototype.onend = function () {
                    this.done || (this.done = !0, this.parser = null, this.handleCallback(null))
                }, t.prototype.onerror = function (t) {
                    this.handleCallback(t)
                }, t.prototype.onclosetag = function () {
                    this.lastNode = null;
                    var t = this.tagStack.pop();
                    this.options.withEndIndices && (t.endIndex = this.parser.endIndex), this.elementCB && this.elementCB(t)
                }, t.prototype.onopentag = function (t, e) {
                    var n = this.options.xmlMode ? domelementtype_1.ElementType.Tag : void 0,
                        o = new node_js_1.Element(t, e, void 0, n);
                    this.addNode(o), this.tagStack.push(o)
                }, t.prototype.ontext = function (t) {
                    var e = this.lastNode;
                    if (e && e.type === domelementtype_1.ElementType.Text) e.data += t, this.options.withEndIndices && (e.endIndex = this.parser.endIndex);
                    else {
                        var n = new node_js_1.Text(t);
                        this.addNode(n), this.lastNode = n
                    }
                }, t.prototype.oncomment = function (t) {
                    if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) this.lastNode.data += t;
                    else {
                        var e = new node_js_1.Comment(t);
                        this.addNode(e), this.lastNode = e
                    }
                }, t.prototype.oncommentend = function () {
                    this.lastNode = null
                }, t.prototype.oncdatastart = function () {
                    var t = new node_js_1.Text(""),
                        e = new node_js_1.CDATA([t]);
                    this.addNode(e), t.parent = e, this.lastNode = t
                }, t.prototype.oncdataend = function () {
                    this.lastNode = null
                }, t.prototype.onprocessinginstruction = function (t, e) {
                    var n = new node_js_1.ProcessingInstruction(t, e);
                    this.addNode(n)
                }, t.prototype.handleCallback = function (t) {
                    if ("function" == typeof this.callback) this.callback(t, this.dom);
                    else if (t) throw t
                }, t.prototype.addNode = function (t) {
                    var e = this.tagStack[this.tagStack.length - 1],
                        n = e.children[e.children.length - 1];
                    this.options.withStartIndices && (t.startIndex = this.parser.startIndex), this.options.withEndIndices && (t.endIndex = this.parser.endIndex), e.children.push(t), n && (t.prev = n, n.next = t), t.parent = e, this.lastNode = null
                }, t
            }();
        exports.DomHandler = DomHandler, exports.default = DomHandler;
  
    }, {
        "./node.js": 38,
        "domelementtype": 36
    }],
    38: [function (require, module, exports) {
        "use strict";
        var __extends = this && this.__extends || function () {
            var e = function (t, n) {
                return (e = Object.setPrototypeOf || {
                    __proto__: []
                }
                    instanceof Array && function (e, t) {
                        e.__proto__ = t
                    } || function (e, t) {
                        for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
                    })(t, n)
            };
            return function (t, n) {
                if ("function" != typeof n && null !== n) throw new TypeError("Class extends value " + String(n) + " is not a constructor or null");
  
                function r() {
                    this.constructor = t
                }
                e(t, n), t.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r)
            }
        }(),
            __assign = this && this.__assign || function () {
                return (__assign = Object.assign || function (e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var o in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                    return e
                }).apply(this, arguments)
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.CDATA = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;
        var domelementtype_1 = require("domelementtype"),
            Node = function () {
                function e() {
                    this.parent = null, this.prev = null, this.next = null, this.startIndex = null, this.endIndex = null
                }
                return Object.defineProperty(e.prototype, "parentNode", {
                    get: function () {
                        return this.parent
                    },
                    set: function (e) {
                        this.parent = e
                    },
                    enumerable: !1,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "previousSibling", {
                    get: function () {
                        return this.prev
                    },
                    set: function (e) {
                        this.prev = e
                    },
                    enumerable: !1,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "nextSibling", {
                    get: function () {
                        return this.next
                    },
                    set: function (e) {
                        this.next = e
                    },
                    enumerable: !1,
                    configurable: !0
                }), e.prototype.cloneNode = function (e) {
                    return void 0 === e && (e = !1), cloneNode(this, e)
                }, e
            }();
        exports.Node = Node;
        var DataNode = function (e) {
            function t(t) {
                var n = e.call(this) || this;
                return n.data = t, n
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeValue", {
                get: function () {
                    return this.data
                },
                set: function (e) {
                    this.data = e
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(Node);
        exports.DataNode = DataNode;
        var Text = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.type = domelementtype_1.ElementType.Text, t
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeType", {
                get: function () {
                    return 3
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(DataNode);
        exports.Text = Text;
        var Comment = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.type = domelementtype_1.ElementType.Comment, t
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeType", {
                get: function () {
                    return 8
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(DataNode);
        exports.Comment = Comment;
        var ProcessingInstruction = function (e) {
            function t(t, n) {
                var r = e.call(this, n) || this;
                return r.name = t, r.type = domelementtype_1.ElementType.Directive, r
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeType", {
                get: function () {
                    return 1
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(DataNode);
        exports.ProcessingInstruction = ProcessingInstruction;
        var NodeWithChildren = function (e) {
            function t(t) {
                var n = e.call(this) || this;
                return n.children = t, n
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "firstChild", {
                get: function () {
                    var e;
                    return null !== (e = this.children[0]) && void 0 !== e ? e : null
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(t.prototype, "lastChild", {
                get: function () {
                    return this.children.length > 0 ? this.children[this.children.length - 1] : null
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(t.prototype, "childNodes", {
                get: function () {
                    return this.children
                },
                set: function (e) {
                    this.children = e
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(Node);
        exports.NodeWithChildren = NodeWithChildren;
        var CDATA = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.type = domelementtype_1.ElementType.CDATA, t
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeType", {
                get: function () {
                    return 4
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(NodeWithChildren);
        exports.CDATA = CDATA;
        var Document = function (e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.type = domelementtype_1.ElementType.Root, t
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeType", {
                get: function () {
                    return 9
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(NodeWithChildren);
        exports.Document = Document;
        var Element = function (e) {
            function t(t, n, r, o) {
                void 0 === r && (r = []), void 0 === o && (o = "script" === t ? domelementtype_1.ElementType.Script : "style" === t ? domelementtype_1.ElementType.Style : domelementtype_1.ElementType.Tag);
                var i = e.call(this, r) || this;
                return i.name = t, i.attribs = n, i.type = o, i
            }
            return __extends(t, e), Object.defineProperty(t.prototype, "nodeType", {
                get: function () {
                    return 1
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(t.prototype, "tagName", {
                get: function () {
                    return this.name
                },
                set: function (e) {
                    this.name = e
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(t.prototype, "attributes", {
                get: function () {
                    var e = this;
                    return Object.keys(this.attribs).map(function (t) {
                        var n, r;
                        return {
                            name: t,
                            value: e.attribs[t],
                            namespace: null === (n = e["x-attribsNamespace"]) || void 0 === n ? void 0 : n[t],
                            prefix: null === (r = e["x-attribsPrefix"]) || void 0 === r ? void 0 : r[t]
                        }
                    })
                },
                enumerable: !1,
                configurable: !0
            }), t
        }(NodeWithChildren);
  
        function isTag(e) {
            return (0, domelementtype_1.isTag)(e)
        }
  
        function isCDATA(e) {
            return e.type === domelementtype_1.ElementType.CDATA
        }
  
        function isText(e) {
            return e.type === domelementtype_1.ElementType.Text
        }
  
        function isComment(e) {
            return e.type === domelementtype_1.ElementType.Comment
        }
  
        function isDirective(e) {
            return e.type === domelementtype_1.ElementType.Directive
        }
  
        function isDocument(e) {
            return e.type === domelementtype_1.ElementType.Root
        }
  
        function hasChildren(e) {
            return Object.prototype.hasOwnProperty.call(e, "children")
        }
  
        function cloneNode(e, t) {
            var n;
            if (void 0 === t && (t = !1), isText(e)) n = new Text(e.data);
            else if (isComment(e)) n = new Comment(e.data);
            else if (isTag(e)) {
                var r = t ? cloneChildren(e.children) : [],
                    o = new Element(e.name, __assign({}, e.attribs), r);
                r.forEach(function (e) {
                    return e.parent = o
                }), null != e.namespace && (o.namespace = e.namespace), e["x-attribsNamespace"] && (o["x-attribsNamespace"] = __assign({}, e["x-attribsNamespace"])), e["x-attribsPrefix"] && (o["x-attribsPrefix"] = __assign({}, e["x-attribsPrefix"])), n = o
            } else if (isCDATA(e)) {
                r = t ? cloneChildren(e.children) : [];
                var i = new CDATA(r);
                r.forEach(function (e) {
                    return e.parent = i
                }), n = i
            } else if (isDocument(e)) {
                r = t ? cloneChildren(e.children) : [];
                var s = new Document(r);
                r.forEach(function (e) {
                    return e.parent = s
                }), e["x-mode"] && (s["x-mode"] = e["x-mode"]), n = s
            } else {
                if (!isDirective(e)) throw new Error("Not implemented yet: ".concat(e.type));
                var u = new ProcessingInstruction(e.name, e.data);
                null != e["x-name"] && (u["x-name"] = e["x-name"], u["x-publicId"] = e["x-publicId"], u["x-systemId"] = e["x-systemId"]), n = u
            }
            return n.startIndex = e.startIndex, n.endIndex = e.endIndex, null != e.sourceCodeLocation && (n.sourceCodeLocation = e.sourceCodeLocation), n
        }
  
        function cloneChildren(e) {
            for (var t = e.map(function (e) {
                return cloneNode(e, !0)
            }), n = 1; n < t.length; n++) t[n].prev = t[n - 1], t[n - 1].next = t[n];
            return t
        }
        exports.Element = Element, exports.isTag = isTag, exports.isCDATA = isCDATA, exports.isText = isText, exports.isComment = isComment, exports.isDirective = isDirective, exports.isDocument = isDocument, exports.hasChildren = hasChildren, exports.cloneNode = cloneNode;
  
    }, {
        "domelementtype": 36
    }],
    39: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.getFeed = void 0;
        var stringify_js_1 = require("./stringify.js"),
            legacy_js_1 = require("./legacy.js");
  
        function getFeed(e) {
            var t = getOneElement(isValidFeed, e);
            return t ? "feed" === t.name ? getAtomFeed(t) : getRssFeed(t) : null
        }
  
        function getAtomFeed(e) {
            var t, i = e.children,
                n = {
                    type: "atom",
                    items: (0, legacy_js_1.getElementsByTagName)("entry", i).map(function (e) {
                        var t, i = e.children,
                            n = {
                                media: getMediaElements(i)
                            };
                        addConditionally(n, "id", "id", i), addConditionally(n, "title", "title", i);
                        var a = null === (t = getOneElement("link", i)) || void 0 === t ? void 0 : t.attribs.href;
                        a && (n.link = a);
                        var d = fetch("summary", i) || fetch("content", i);
                        d && (n.description = d);
                        var l = fetch("updated", i);
                        return l && (n.pubDate = new Date(l)), n
                    })
                };
            addConditionally(n, "id", "id", i), addConditionally(n, "title", "title", i);
            var a = null === (t = getOneElement("link", i)) || void 0 === t ? void 0 : t.attribs.href;
            a && (n.link = a), addConditionally(n, "description", "subtitle", i);
            var d = fetch("updated", i);
            return d && (n.updated = new Date(d)), addConditionally(n, "author", "email", i, !0), n
        }
  
        function getRssFeed(e) {
            var t, i, n = null !== (i = null === (t = getOneElement("channel", e.children)) || void 0 === t ? void 0 : t.children) && void 0 !== i ? i : [],
                a = {
                    type: e.name.substr(0, 3),
                    id: "",
                    items: (0, legacy_js_1.getElementsByTagName)("item", e.children).map(function (e) {
                        var t = e.children,
                            i = {
                                media: getMediaElements(t)
                            };
                        addConditionally(i, "id", "guid", t), addConditionally(i, "title", "title", t), addConditionally(i, "link", "link", t), addConditionally(i, "description", "description", t);
                        var n = fetch("pubDate", t) || fetch("dc:date", t);
                        return n && (i.pubDate = new Date(n)), i
                    })
                };
            addConditionally(a, "title", "title", n), addConditionally(a, "link", "link", n), addConditionally(a, "description", "description", n);
            var d = fetch("lastBuildDate", n);
            return d && (a.updated = new Date(d)), addConditionally(a, "author", "managingEditor", n, !0), a
        }
        exports.getFeed = getFeed;
        var MEDIA_KEYS_STRING = ["url", "type", "lang"],
            MEDIA_KEYS_INT = ["fileSize", "bitrate", "framerate", "samplingrate", "channels", "duration", "height", "width"];
  
        function getMediaElements(e) {
            return (0, legacy_js_1.getElementsByTagName)("media:content", e).map(function (e) {
                for (var t = e.attribs, i = {
                    medium: t.medium,
                    isDefault: !!t.isDefault
                }, n = 0, a = MEDIA_KEYS_STRING; n < a.length; n++) {
                    t[r = a[n]] && (i[r] = t[r])
                }
                for (var d = 0, l = MEDIA_KEYS_INT; d < l.length; d++) {
                    var r;
                    t[r = l[d]] && (i[r] = parseInt(t[r], 10))
                }
                return t.expression && (i.expression = t.expression), i
            })
        }
  
        function getOneElement(e, t) {
            return (0, legacy_js_1.getElementsByTagName)(e, t, !0, 1)[0]
        }
  
        function fetch(e, t, i) {
            return void 0 === i && (i = !1), (0, stringify_js_1.textContent)((0, legacy_js_1.getElementsByTagName)(e, t, i, 1)).trim()
        }
  
        function addConditionally(e, t, i, n, a) {
            void 0 === a && (a = !1);
            var d = fetch(i, n, a);
            d && (e[t] = d)
        }
  
        function isValidFeed(e) {
            return "rss" === e || "feed" === e || "rdf:RDF" === e
        }
  
    }, {
        "./legacy.js": 42,
        "./stringify.js": 45
    }],
    40: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.uniqueSort = exports.compareDocumentPosition = exports.DocumentPosition = exports.removeSubsets = void 0;
        var DocumentPosition, domhandler_1 = require("domhandler");
  
        function removeSubsets(o) {
            for (var e = o.length; --e >= 0;) {
                var t = o[e];
                if (e > 0 && o.lastIndexOf(t, e - 1) >= 0) o.splice(e, 1);
                else
                    for (var n = t.parent; n; n = n.parent)
                        if (o.includes(n)) {
                            o.splice(e, 1);
                            break
                        }
            }
            return o
        }
  
        function compareDocumentPosition(o, e) {
            var t = [],
                n = [];
            if (o === e) return 0;
            for (var r = (0, domhandler_1.hasChildren)(o) ? o : o.parent; r;) t.unshift(r), r = r.parent;
            for (r = (0, domhandler_1.hasChildren)(e) ? e : e.parent; r;) n.unshift(r), r = r.parent;
            for (var i = Math.min(t.length, n.length), u = 0; u < i && t[u] === n[u];) u++;
            if (0 === u) return DocumentPosition.DISCONNECTED;
            var s = t[u - 1],
                c = s.children,
                m = t[u],
                D = n[u];
            return c.indexOf(m) > c.indexOf(D) ? s === e ? DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY : DocumentPosition.FOLLOWING : s === o ? DocumentPosition.PRECEDING | DocumentPosition.CONTAINS : DocumentPosition.PRECEDING
        }
  
        function uniqueSort(o) {
            return (o = o.filter(function (o, e, t) {
                return !t.includes(o, e + 1)
            })).sort(function (o, e) {
                var t = compareDocumentPosition(o, e);
                return t & DocumentPosition.PRECEDING ? -1 : t & DocumentPosition.FOLLOWING ? 1 : 0
            }), o
        }
        exports.removeSubsets = removeSubsets,
            function (o) {
                o[o.DISCONNECTED = 1] = "DISCONNECTED", o[o.PRECEDING = 2] = "PRECEDING", o[o.FOLLOWING = 4] = "FOLLOWING", o[o.CONTAINS = 8] = "CONTAINS", o[o.CONTAINED_BY = 16] = "CONTAINED_BY"
            }(DocumentPosition = exports.DocumentPosition || (exports.DocumentPosition = {})), exports.compareDocumentPosition = compareDocumentPosition, exports.uniqueSort = uniqueSort;
  
    }, {
        "domhandler": 37
    }],
    41: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, r, t, n) {
            void 0 === n && (n = t);
            var o = Object.getOwnPropertyDescriptor(r, t);
            o && ("get" in o ? r.__esModule : !o.writable && !o.configurable) || (o = {
                enumerable: !0,
                get: function () {
                    return r[t]
                }
            }), Object.defineProperty(e, n, o)
        } : function (e, r, t, n) {
            void 0 === n && (n = t), e[n] = r[t]
        }),
            __exportStar = this && this.__exportStar || function (e, r) {
                for (var t in e) "default" === t || Object.prototype.hasOwnProperty.call(r, t) || __createBinding(r, e, t)
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.hasChildren = exports.isDocument = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = void 0, __exportStar(require("./stringify.js"), exports), __exportStar(require("./traversal.js"), exports), __exportStar(require("./manipulation.js"), exports), __exportStar(require("./querying.js"), exports), __exportStar(require("./legacy.js"), exports), __exportStar(require("./helpers.js"), exports), __exportStar(require("./feeds.js"), exports);
        var domhandler_1 = require("domhandler");
        Object.defineProperty(exports, "isTag", {
            enumerable: !0,
            get: function () {
                return domhandler_1.isTag
            }
        }), Object.defineProperty(exports, "isCDATA", {
            enumerable: !0,
            get: function () {
                return domhandler_1.isCDATA
            }
        }), Object.defineProperty(exports, "isText", {
            enumerable: !0,
            get: function () {
                return domhandler_1.isText
            }
        }), Object.defineProperty(exports, "isComment", {
            enumerable: !0,
            get: function () {
                return domhandler_1.isComment
            }
        }), Object.defineProperty(exports, "isDocument", {
            enumerable: !0,
            get: function () {
                return domhandler_1.isDocument
            }
        }), Object.defineProperty(exports, "hasChildren", {
            enumerable: !0,
            get: function () {
                return domhandler_1.hasChildren
            }
        });
  
    }, {
        "./feeds.js": 39,
        "./helpers.js": 40,
        "./legacy.js": 42,
        "./manipulation.js": 43,
        "./querying.js": 44,
        "./stringify.js": 45,
        "./traversal.js": 46,
        "domhandler": 37
    }],
    42: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;
        var domhandler_1 = require("domhandler"),
            querying_js_1 = require("./querying.js"),
            Checks = {
                tag_name: function (e) {
                    return "function" == typeof e ? function (t) {
                        return (0, domhandler_1.isTag)(t) && e(t.name)
                    } : "*" === e ? domhandler_1.isTag : function (t) {
                        return (0, domhandler_1.isTag)(t) && t.name === e
                    }
                },
                tag_type: function (e) {
                    return "function" == typeof e ? function (t) {
                        return e(t.type)
                    } : function (t) {
                        return t.type === e
                    }
                },
                tag_contains: function (e) {
                    return "function" == typeof e ? function (t) {
                        return (0, domhandler_1.isText)(t) && e(t.data)
                    } : function (t) {
                        return (0, domhandler_1.isText)(t) && t.data === e
                    }
                }
            };
  
        function getAttribCheck(e, t) {
            return "function" == typeof t ? function (n) {
                return (0, domhandler_1.isTag)(n) && t(n.attribs[e])
            } : function (n) {
                return (0, domhandler_1.isTag)(n) && n.attribs[e] === t
            }
        }
  
        function combineFuncs(e, t) {
            return function (n) {
                return e(n) || t(n)
            }
        }
  
        function compileTest(e) {
            var t = Object.keys(e).map(function (t) {
                var n = e[t];
                return Object.prototype.hasOwnProperty.call(Checks, t) ? Checks[t](n) : getAttribCheck(t, n)
            });
            return 0 === t.length ? null : t.reduce(combineFuncs)
        }
  
        function testElement(e, t) {
            var n = compileTest(e);
            return !n || n(t)
        }
  
        function getElements(e, t, n, r) {
            void 0 === r && (r = 1 / 0);
            var o = compileTest(e);
            return o ? (0, querying_js_1.filter)(o, t, n, r) : []
        }
  
        function getElementById(e, t, n) {
            return void 0 === n && (n = !0), Array.isArray(t) || (t = [t]), (0, querying_js_1.findOne)(getAttribCheck("id", e), t, n)
        }
  
        function getElementsByTagName(e, t, n, r) {
            return void 0 === n && (n = !0), void 0 === r && (r = 1 / 0), (0, querying_js_1.filter)(Checks.tag_name(e), t, n, r)
        }
  
        function getElementsByTagType(e, t, n, r) {
            return void 0 === n && (n = !0), void 0 === r && (r = 1 / 0), (0, querying_js_1.filter)(Checks.tag_type(e), t, n, r)
        }
        exports.testElement = testElement, exports.getElements = getElements, exports.getElementById = getElementById, exports.getElementsByTagName = getElementsByTagName, exports.getElementsByTagType = getElementsByTagType;
  
    }, {
        "./querying.js": 44,
        "domhandler": 37
    }],
    43: [function (require, module, exports) {
        "use strict";
  
        function removeElement(e) {
            if (e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), e.parent) {
                var n = e.parent.children,
                    r = n.lastIndexOf(e);
                r >= 0 && n.splice(r, 1)
            }
            e.next = null, e.prev = null, e.parent = null
        }
  
        function replaceElement(e, n) {
            var r = n.prev = e.prev;
            r && (r.next = n);
            var p = n.next = e.next;
            p && (p.prev = n);
            var t = n.parent = e.parent;
            if (t) {
                var l = t.children;
                l[l.lastIndexOf(e)] = n, e.parent = null
            }
        }
  
        function appendChild(e, n) {
            if (removeElement(n), n.next = null, n.parent = e, e.children.push(n) > 1) {
                var r = e.children[e.children.length - 2];
                r.next = n, n.prev = r
            } else n.prev = null
        }
  
        function append(e, n) {
            removeElement(n);
            var r = e.parent,
                p = e.next;
            if (n.next = p, n.prev = e, e.next = n, n.parent = r, p) {
                if (p.prev = n, r) {
                    var t = r.children;
                    t.splice(t.lastIndexOf(p), 0, n)
                }
            } else r && r.children.push(n)
        }
  
        function prependChild(e, n) {
            if (removeElement(n), n.parent = e, n.prev = null, 1 !== e.children.unshift(n)) {
                var r = e.children[1];
                r.prev = n, n.next = r
            } else n.next = null
        }
  
        function prepend(e, n) {
            removeElement(n);
            var r = e.parent;
            if (r) {
                var p = r.children;
                p.splice(p.indexOf(e), 0, n)
            }
            e.prev && (e.prev.next = n), n.parent = r, n.prev = e.prev, n.next = e, e.prev = n
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.prepend = exports.prependChild = exports.append = exports.appendChild = exports.replaceElement = exports.removeElement = void 0, exports.removeElement = removeElement, exports.replaceElement = replaceElement, exports.appendChild = appendChild, exports.append = append, exports.prependChild = prependChild, exports.prepend = prepend;
  
    }, {}],
    44: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.findAll = exports.existsOne = exports.findOne = exports.findOneChild = exports.find = exports.filter = void 0;
        var domhandler_1 = require("domhandler");
  
        function filter(n, e, i, r) {
            return void 0 === i && (i = !0), void 0 === r && (r = 1 / 0), find(n, Array.isArray(e) ? e : [e], i, r)
        }
  
        function find(n, e, i, r) {
            for (var t = [], d = [e], f = [0]; ;)
                if (f[0] >= d[0].length) {
                    if (1 === f.length) return t;
                    d.shift(), f.shift()
                } else {
                    var l = d[0][f[0]++];
                    if (n(l) && (t.push(l), --r <= 0)) return t;
                    i && (0, domhandler_1.hasChildren)(l) && l.children.length > 0 && (f.unshift(0), d.unshift(l.children))
                }
        }
  
        function findOneChild(n, e) {
            return e.find(n)
        }
  
        function findOne(n, e, i) {
            void 0 === i && (i = !0);
            for (var r = null, t = 0; t < e.length && !r; t++) {
                var d = e[t];
                (0, domhandler_1.isTag)(d) && (n(d) ? r = d : i && d.children.length > 0 && (r = findOne(n, d.children, !0)))
            }
            return r
        }
  
        function existsOne(n, e) {
            return e.some(function (e) {
                return (0, domhandler_1.isTag)(e) && (n(e) || existsOne(n, e.children))
            })
        }
  
        function findAll(n, e) {
            for (var i = [], r = [e], t = [0]; ;)
                if (t[0] >= r[0].length) {
                    if (1 === r.length) return i;
                    r.shift(), t.shift()
                } else {
                    var d = r[0][t[0]++];
                    (0, domhandler_1.isTag)(d) && (n(d) && i.push(d), d.children.length > 0 && (t.unshift(0), r.unshift(d.children)))
                }
        }
        exports.filter = filter, exports.find = find, exports.findOneChild = findOneChild, exports.findOne = findOne, exports.existsOne = existsOne, exports.findAll = findAll;
  
    }, {
        "domhandler": 37
    }],
    45: [function (require, module, exports) {
        "use strict";
        var __importDefault = this && this.__importDefault || function (e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;
        var domhandler_1 = require("domhandler"),
            dom_serializer_1 = __importDefault(require("dom-serializer")),
            domelementtype_1 = require("domelementtype");
  
        function getOuterHTML(e, t) {
            return (0, dom_serializer_1.default)(e, t)
        }
  
        function getInnerHTML(e, t) {
            return (0, domhandler_1.hasChildren)(e) ? e.children.map(function (e) {
                return getOuterHTML(e, t)
            }).join("") : ""
        }
  
        function getText(e) {
            return Array.isArray(e) ? e.map(getText).join("") : (0, domhandler_1.isTag)(e) ? "br" === e.name ? "\n" : getText(e.children) : (0, domhandler_1.isCDATA)(e) ? getText(e.children) : (0, domhandler_1.isText)(e) ? e.data : ""
        }
  
        function textContent(e) {
            return Array.isArray(e) ? e.map(textContent).join("") : (0, domhandler_1.hasChildren)(e) && !(0, domhandler_1.isComment)(e) ? textContent(e.children) : (0, domhandler_1.isText)(e) ? e.data : ""
        }
  
        function innerText(e) {
            return Array.isArray(e) ? e.map(innerText).join("") : (0, domhandler_1.hasChildren)(e) && (e.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(e)) ? innerText(e.children) : (0, domhandler_1.isText)(e) ? e.data : ""
        }
        exports.getOuterHTML = getOuterHTML, exports.getInnerHTML = getInnerHTML, exports.getText = getText, exports.textContent = textContent, exports.innerText = innerText;
  
    }, {
        "dom-serializer": 35,
        "domelementtype": 36,
        "domhandler": 37
    }],
    46: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;
        var domhandler_1 = require("domhandler");
  
        function getChildren(e) {
            return (0, domhandler_1.hasChildren)(e) ? e.children : []
        }
  
        function getParent(e) {
            return e.parent || null
        }
  
        function getSiblings(e) {
            var t = getParent(e);
            if (null != t) return getChildren(t);
            for (var r = [e], n = e.prev, i = e.next; null != n;) r.unshift(n), n = n.prev;
            for (; null != i;) r.push(i), i = i.next;
            return r
        }
  
        function getAttributeValue(e, t) {
            var r;
            return null === (r = e.attribs) || void 0 === r ? void 0 : r[t]
        }
  
        function hasAttrib(e, t) {
            return null != e.attribs && Object.prototype.hasOwnProperty.call(e.attribs, t) && null != e.attribs[t]
        }
  
        function getName(e) {
            return e.name
        }
  
        function nextElementSibling(e) {
            for (var t = e.next; null !== t && !(0, domhandler_1.isTag)(t);) t = t.next;
            return t
        }
  
        function prevElementSibling(e) {
            for (var t = e.prev; null !== t && !(0, domhandler_1.isTag)(t);) t = t.prev;
            return t
        }
        exports.getChildren = getChildren, exports.getParent = getParent, exports.getSiblings = getSiblings, exports.getAttributeValue = getAttributeValue, exports.hasAttrib = hasAttrib, exports.getName = getName, exports.nextElementSibling = nextElementSibling, exports.prevElementSibling = prevElementSibling;
  
    }, {
        "domhandler": 37
    }],
    47: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, t, r, i) {
            void 0 === i && (i = r);
            var o = Object.getOwnPropertyDescriptor(t, r);
            o && ("get" in o ? t.__esModule : !o.writable && !o.configurable) || (o = {
                enumerable: !0,
                get: function () {
                    return t[r]
                }
            }), Object.defineProperty(e, i, o)
        } : function (e, t, r, i) {
            void 0 === i && (i = r), e[i] = t[r]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function (e, t) {
                e.default = t
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && __createBinding(t, e, r);
                return __setModuleDefault(t, e), t
            },
            __importDefault = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.decodeXML = exports.decodeHTMLStrict = exports.decodeHTMLAttribute = exports.decodeHTML = exports.determineBranch = exports.EntityDecoder = exports.DecodingMode = exports.BinTrieFlags = exports.fromCodePoint = exports.replaceCodePoint = exports.decodeCodePoint = exports.xmlDecodeTree = exports.htmlDecodeTree = void 0;
        var decode_data_html_js_1 = __importDefault(require("./generated/decode-data-html.js"));
        exports.htmlDecodeTree = decode_data_html_js_1.default;
        var decode_data_xml_js_1 = __importDefault(require("./generated/decode-data-xml.js"));
        exports.xmlDecodeTree = decode_data_xml_js_1.default;
        var decode_codepoint_js_1 = __importStar(require("./decode_codepoint.js"));
        exports.decodeCodePoint = decode_codepoint_js_1.default;
        var CharCodes, decode_codepoint_js_2 = require("./decode_codepoint.js");
        Object.defineProperty(exports, "replaceCodePoint", {
            enumerable: !0,
            get: function () {
                return decode_codepoint_js_2.replaceCodePoint
            }
        }), Object.defineProperty(exports, "fromCodePoint", {
            enumerable: !0,
            get: function () {
                return decode_codepoint_js_2.fromCodePoint
            }
        }),
            function (e) {
                e[e.NUM = 35] = "NUM", e[e.SEMI = 59] = "SEMI", e[e.EQUALS = 61] = "EQUALS", e[e.ZERO = 48] = "ZERO", e[e.NINE = 57] = "NINE", e[e.LOWER_A = 97] = "LOWER_A", e[e.LOWER_F = 102] = "LOWER_F", e[e.LOWER_X = 120] = "LOWER_X", e[e.LOWER_Z = 122] = "LOWER_Z", e[e.UPPER_A = 65] = "UPPER_A", e[e.UPPER_F = 70] = "UPPER_F", e[e.UPPER_Z = 90] = "UPPER_Z"
            }(CharCodes || (CharCodes = {}));
        var BinTrieFlags, EntityDecoderState, DecodingMode, TO_LOWER_BIT = 32;
  
        function isNumber(e) {
            return e >= CharCodes.ZERO && e <= CharCodes.NINE
        }
  
        function isHexadecimalCharacter(e) {
            return e >= CharCodes.UPPER_A && e <= CharCodes.UPPER_F || e >= CharCodes.LOWER_A && e <= CharCodes.LOWER_F
        }
  
        function isAsciiAlphaNumeric(e) {
            return e >= CharCodes.UPPER_A && e <= CharCodes.UPPER_Z || e >= CharCodes.LOWER_A && e <= CharCodes.LOWER_Z || isNumber(e)
        }
  
        function isEntityInAttributeInvalidEnd(e) {
            return e === CharCodes.EQUALS || isAsciiAlphaNumeric(e)
        } ! function (e) {
            e[e.VALUE_LENGTH = 49152] = "VALUE_LENGTH", e[e.BRANCH_LENGTH = 16256] = "BRANCH_LENGTH", e[e.JUMP_TABLE = 127] = "JUMP_TABLE"
        }(BinTrieFlags = exports.BinTrieFlags || (exports.BinTrieFlags = {})),
            function (e) {
                e[e.EntityStart = 0] = "EntityStart", e[e.NumericStart = 1] = "NumericStart", e[e.NumericDecimal = 2] = "NumericDecimal", e[e.NumericHex = 3] = "NumericHex", e[e.NamedEntity = 4] = "NamedEntity"
            }(EntityDecoderState || (EntityDecoderState = {})),
            function (e) {
                e[e.Legacy = 0] = "Legacy", e[e.Strict = 1] = "Strict", e[e.Attribute = 2] = "Attribute"
            }(DecodingMode = exports.DecodingMode || (exports.DecodingMode = {}));
        var EntityDecoder = function () {
            function e(e, t, r) {
                this.decodeTree = e, this.emitCodePoint = t, this.errors = r, this.state = EntityDecoderState.EntityStart, this.consumed = 1, this.result = 0, this.treeIndex = 0, this.excess = 1, this.decodeMode = DecodingMode.Strict
            }
            return e.prototype.startEntity = function (e) {
                this.decodeMode = e, this.state = EntityDecoderState.EntityStart, this.result = 0, this.treeIndex = 0, this.excess = 1, this.consumed = 1
            }, e.prototype.write = function (e, t) {
                switch (this.state) {
                    case EntityDecoderState.EntityStart:
                        return e.charCodeAt(t) === CharCodes.NUM ? (this.state = EntityDecoderState.NumericStart, this.consumed += 1, this.stateNumericStart(e, t + 1)) : (this.state = EntityDecoderState.NamedEntity, this.stateNamedEntity(e, t));
                    case EntityDecoderState.NumericStart:
                        return this.stateNumericStart(e, t);
                    case EntityDecoderState.NumericDecimal:
                        return this.stateNumericDecimal(e, t);
                    case EntityDecoderState.NumericHex:
                        return this.stateNumericHex(e, t);
                    case EntityDecoderState.NamedEntity:
                        return this.stateNamedEntity(e, t)
                }
            }, e.prototype.stateNumericStart = function (e, t) {
                return t >= e.length ? -1 : (e.charCodeAt(t) | TO_LOWER_BIT) === CharCodes.LOWER_X ? (this.state = EntityDecoderState.NumericHex, this.consumed += 1, this.stateNumericHex(e, t + 1)) : (this.state = EntityDecoderState.NumericDecimal, this.stateNumericDecimal(e, t))
            }, e.prototype.addToNumericResult = function (e, t, r, i) {
                if (t !== r) {
                    var o = r - t;
                    this.result = this.result * Math.pow(i, o) + parseInt(e.substr(t, o), i), this.consumed += o
                }
            }, e.prototype.stateNumericHex = function (e, t) {
                for (var r = t; t < e.length;) {
                    var i = e.charCodeAt(t);
                    if (!isNumber(i) && !isHexadecimalCharacter(i)) return this.addToNumericResult(e, r, t, 16), this.emitNumericEntity(i, 3);
                    t += 1
                }
                return this.addToNumericResult(e, r, t, 16), -1
            }, e.prototype.stateNumericDecimal = function (e, t) {
                for (var r = t; t < e.length;) {
                    var i = e.charCodeAt(t);
                    if (!isNumber(i)) return this.addToNumericResult(e, r, t, 10), this.emitNumericEntity(i, 2);
                    t += 1
                }
                return this.addToNumericResult(e, r, t, 10), -1
            }, e.prototype.emitNumericEntity = function (e, t) {
                var r;
                if (this.consumed <= t) return null === (r = this.errors) || void 0 === r || r.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
                if (e === CharCodes.SEMI) this.consumed += 1;
                else if (this.decodeMode === DecodingMode.Strict) return 0;
                return this.emitCodePoint((0, decode_codepoint_js_1.replaceCodePoint)(this.result), this.consumed), this.errors && (e !== CharCodes.SEMI && this.errors.missingSemicolonAfterCharacterReference(), this.errors.validateNumericCharacterReference(this.result)), this.consumed
            }, e.prototype.stateNamedEntity = function (e, t) {
                for (var r = this.decodeTree, i = r[this.treeIndex], o = (i & BinTrieFlags.VALUE_LENGTH) >> 14; t < e.length; t++, this.excess++) {
                    var d = e.charCodeAt(t);
                    if (this.treeIndex = determineBranch(r, i, this.treeIndex + Math.max(1, o), d), this.treeIndex < 0) return 0 === this.result || this.decodeMode === DecodingMode.Attribute && (0 === o || isEntityInAttributeInvalidEnd(d)) ? 0 : this.emitNotTerminatedNamedEntity();
                    if (0 !== (o = ((i = r[this.treeIndex]) & BinTrieFlags.VALUE_LENGTH) >> 14)) {
                        if (d === CharCodes.SEMI) return this.emitNamedEntityData(this.treeIndex, o, this.consumed + this.excess);
                        this.decodeMode !== DecodingMode.Strict && (this.result = this.treeIndex, this.consumed += this.excess, this.excess = 0)
                    }
                }
                return -1
            }, e.prototype.emitNotTerminatedNamedEntity = function () {
                var e, t = this.result,
                    r = (this.decodeTree[t] & BinTrieFlags.VALUE_LENGTH) >> 14;
                return this.emitNamedEntityData(t, r, this.consumed), null === (e = this.errors) || void 0 === e || e.missingSemicolonAfterCharacterReference(), this.consumed
            }, e.prototype.emitNamedEntityData = function (e, t, r) {
                var i = this.decodeTree;
                return this.emitCodePoint(1 === t ? i[e] & ~BinTrieFlags.VALUE_LENGTH : i[e + 1], r), 3 === t && this.emitCodePoint(i[e + 2], r), r
            }, e.prototype.end = function () {
                var e;
                switch (this.state) {
                    case EntityDecoderState.NamedEntity:
                        return 0 === this.result || this.decodeMode === DecodingMode.Attribute && this.result !== this.treeIndex ? 0 : this.emitNotTerminatedNamedEntity();
                    case EntityDecoderState.NumericDecimal:
                        return this.emitNumericEntity(0, 2);
                    case EntityDecoderState.NumericHex:
                        return this.emitNumericEntity(0, 3);
                    case EntityDecoderState.NumericStart:
                        return null === (e = this.errors) || void 0 === e || e.absenceOfDigitsInNumericCharacterReference(this.consumed), 0;
                    case EntityDecoderState.EntityStart:
                        return 0
                }
            }, e
        }();
  
        function getDecoder(e) {
            var t = "",
                r = new EntityDecoder(e, function (e) {
                    return t += (0, decode_codepoint_js_1.fromCodePoint)(e)
                });
            return function (e, i) {
                for (var o = 0, d = 0;
                    (d = e.indexOf("&", d)) >= 0;) {
                    t += e.slice(o, d), r.startEntity(i);
                    var n = r.write(e, d + 1);
                    if (n < 0) {
                        o = d + r.end();
                        break
                    }
                    o = d + n, d = 0 === n ? o + 1 : o
                }
                var s = t + e.slice(o);
                return t = "", s
            }
        }
  
        function determineBranch(e, t, r, i) {
            var o = (t & BinTrieFlags.BRANCH_LENGTH) >> 7,
                d = t & BinTrieFlags.JUMP_TABLE;
            if (0 === o) return 0 !== d && i === d ? r : -1;
            if (d) {
                var n = i - d;
                return n < 0 || n >= o ? -1 : e[r + n] - 1
            }
            for (var s = r, c = s + o - 1; s <= c;) {
                var a = s + c >>> 1,
                    u = e[a];
                if (u < i) s = a + 1;
                else {
                    if (!(u > i)) return e[a + o];
                    c = a - 1
                }
            }
            return -1
        }
        exports.EntityDecoder = EntityDecoder, exports.determineBranch = determineBranch;
        var htmlDecoder = getDecoder(decode_data_html_js_1.default),
            xmlDecoder = getDecoder(decode_data_xml_js_1.default);
  
        function decodeHTML(e, t) {
            return void 0 === t && (t = DecodingMode.Legacy), htmlDecoder(e, t)
        }
  
        function decodeHTMLAttribute(e) {
            return htmlDecoder(e, DecodingMode.Attribute)
        }
  
        function decodeHTMLStrict(e) {
            return htmlDecoder(e, DecodingMode.Strict)
        }
  
        function decodeXML(e) {
            return xmlDecoder(e, DecodingMode.Strict)
        }
        exports.decodeHTML = decodeHTML, exports.decodeHTMLAttribute = decodeHTMLAttribute, exports.decodeHTMLStrict = decodeHTMLStrict, exports.decodeXML = decodeXML;
  
    }, {
        "./decode_codepoint.js": 48,
        "./generated/decode-data-html.js": 51,
        "./generated/decode-data-xml.js": 52
    }],
    48: [function (require, module, exports) {
        "use strict";
        var _a;
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.replaceCodePoint = exports.fromCodePoint = void 0;
        var decodeMap = new Map([
            [0, 65533],
            [128, 8364],
            [130, 8218],
            [131, 402],
            [132, 8222],
            [133, 8230],
            [134, 8224],
            [135, 8225],
            [136, 710],
            [137, 8240],
            [138, 352],
            [139, 8249],
            [140, 338],
            [142, 381],
            [145, 8216],
            [146, 8217],
            [147, 8220],
            [148, 8221],
            [149, 8226],
            [150, 8211],
            [151, 8212],
            [152, 732],
            [153, 8482],
            [154, 353],
            [155, 8250],
            [156, 339],
            [158, 382],
            [159, 376]
        ]);
  
        function replaceCodePoint(e) {
            var o;
            return e >= 55296 && e <= 57343 || e > 1114111 ? 65533 : null !== (o = decodeMap.get(e)) && void 0 !== o ? o : e
        }
  
        function decodeCodePoint(e) {
            return (0, exports.fromCodePoint)(replaceCodePoint(e))
        }
        exports.fromCodePoint = null !== (_a = String.fromCodePoint) && void 0 !== _a ? _a : function (e) {
            var o = "";
            return e > 65535 && (e -= 65536, o += String.fromCharCode(e >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), o += String.fromCharCode(e)
        }, exports.replaceCodePoint = replaceCodePoint, exports.default = decodeCodePoint;
  
    }, {}],
    49: [function (require, module, exports) {
        "use strict";
        var __importDefault = this && this.__importDefault || function (e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.encodeNonAsciiHTML = exports.encodeHTML = void 0;
        var encode_html_js_1 = __importDefault(require("./generated/encode-html.js")),
            escape_js_1 = require("./escape.js"),
            htmlReplacer = /[\t\n!-,./:-@[-`\f{-}$\x80-\uFFFF]/g;
  
        function encodeHTML(e) {
            return encodeHTMLTrieRe(htmlReplacer, e)
        }
  
        function encodeNonAsciiHTML(e) {
            return encodeHTMLTrieRe(escape_js_1.xmlReplacer, e)
        }
  
        function encodeHTMLTrieRe(e, t) {
            for (var o, n = "", r = 0; null !== (o = e.exec(t));) {
                var c = o.index;
                n += t.substring(r, c);
                var i = t.charCodeAt(c),
                    s = encode_html_js_1.default.get(i);
                if ("object" == typeof s) {
                    if (c + 1 < t.length) {
                        var d = t.charCodeAt(c + 1),
                            a = "number" == typeof s.n ? s.n === d ? s.o : void 0 : s.n.get(d);
                        if (void 0 !== a) {
                            n += a, r = e.lastIndex += 1;
                            continue
                        }
                    }
                    s = s.v
                }
                if (void 0 !== s) n += s, r = c + 1;
                else {
                    var u = (0, escape_js_1.getCodePoint)(t, c);
                    n += "&#x".concat(u.toString(16), ";"), r = e.lastIndex += Number(u !== i)
                }
            }
            return n + t.substr(r)
        }
        exports.encodeHTML = encodeHTML, exports.encodeNonAsciiHTML = encodeNonAsciiHTML;
  
    }, {
        "./escape.js": 50,
        "./generated/encode-html.js": 53
    }],
    50: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.getCodePoint = exports.xmlReplacer = void 0, exports.xmlReplacer = /["&'<>$\x80-\uFFFF]/g;
        var xmlCodeMap = new Map([
            [34, "&quot;"],
            [38, "&amp;"],
            [39, "&apos;"],
            [60, "&lt;"],
            [62, "&gt;"]
        ]);
  
        function encodeXML(e) {
            for (var t, r = "", o = 0; null !== (t = exports.xmlReplacer.exec(e));) {
                var p = t.index,
                    s = e.charCodeAt(p),
                    n = xmlCodeMap.get(s);
                void 0 !== n ? (r += e.substring(o, p) + n, o = p + 1) : (r += "".concat(e.substring(o, p), "&#x").concat((0, exports.getCodePoint)(e, p).toString(16), ";"), o = exports.xmlReplacer.lastIndex += Number(55296 == (64512 & s)))
            }
            return r + e.substr(o)
        }
  
        function getEscaper(e, t) {
            return function (r) {
                for (var o, p = 0, s = ""; o = e.exec(r);) p !== o.index && (s += r.substring(p, o.index)), s += t.get(o[0].charCodeAt(0)), p = o.index + 1;
                return s + r.substring(p)
            }
        }
        exports.getCodePoint = null != String.prototype.codePointAt ? function (e, t) {
            return e.codePointAt(t)
        } : function (e, t) {
            return 55296 == (64512 & e.charCodeAt(t)) ? 1024 * (e.charCodeAt(t) - 55296) + e.charCodeAt(t + 1) - 56320 + 65536 : e.charCodeAt(t)
        }, exports.encodeXML = encodeXML, exports.escape = encodeXML, exports.escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap), exports.escapeAttribute = getEscaper(/["&\u00A0]/g, new Map([
            [34, "&quot;"],
            [38, "&amp;"],
            [160, "&nbsp;"]
        ])), exports.escapeText = getEscaper(/[&<>\u00A0]/g, new Map([
            [38, "&amp;"],
            [60, "&lt;"],
            [62, "&gt;"],
            [160, "&nbsp;"]
        ]));
  
    }, {}],
    51: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.default = new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(function (r) {
            return r.charCodeAt(0)
        }));
  
    }, {}],
    52: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.default = new Uint16Array("Ȁaglq\tɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(function (t) {
            return t.charCodeAt(0)
        }));
  
    }, {}],
    53: [function (require, module, exports) {
        "use strict";
  
        function restoreDiff(r) {
            for (var e = 1; e < r.length; e++) r[e][0] += r[e - 1][0] + 1;
            return r
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.default = new Map(restoreDiff([
            [9, "&Tab;"],
            [0, "&NewLine;"],
            [22, "&excl;"],
            [0, "&quot;"],
            [0, "&num;"],
            [0, "&dollar;"],
            [0, "&percnt;"],
            [0, "&amp;"],
            [0, "&apos;"],
            [0, "&lpar;"],
            [0, "&rpar;"],
            [0, "&ast;"],
            [0, "&plus;"],
            [0, "&comma;"],
            [1, "&period;"],
            [0, "&sol;"],
            [10, "&colon;"],
            [0, "&semi;"],
            [0, {
                v: "&lt;",
                n: 8402,
                o: "&nvlt;"
            }],
            [0, {
                v: "&equals;",
                n: 8421,
                o: "&bne;"
            }],
            [0, {
                v: "&gt;",
                n: 8402,
                o: "&nvgt;"
            }],
            [0, "&quest;"],
            [0, "&commat;"],
            [26, "&lbrack;"],
            [0, "&bsol;"],
            [0, "&rbrack;"],
            [0, "&Hat;"],
            [0, "&lowbar;"],
            [0, "&DiacriticalGrave;"],
            [5, {
                n: 106,
                o: "&fjlig;"
            }],
            [20, "&lbrace;"],
            [0, "&verbar;"],
            [0, "&rbrace;"],
            [34, "&nbsp;"],
            [0, "&iexcl;"],
            [0, "&cent;"],
            [0, "&pound;"],
            [0, "&curren;"],
            [0, "&yen;"],
            [0, "&brvbar;"],
            [0, "&sect;"],
            [0, "&die;"],
            [0, "&copy;"],
            [0, "&ordf;"],
            [0, "&laquo;"],
            [0, "&not;"],
            [0, "&shy;"],
            [0, "&circledR;"],
            [0, "&macr;"],
            [0, "&deg;"],
            [0, "&PlusMinus;"],
            [0, "&sup2;"],
            [0, "&sup3;"],
            [0, "&acute;"],
            [0, "&micro;"],
            [0, "&para;"],
            [0, "&centerdot;"],
            [0, "&cedil;"],
            [0, "&sup1;"],
            [0, "&ordm;"],
            [0, "&raquo;"],
            [0, "&frac14;"],
            [0, "&frac12;"],
            [0, "&frac34;"],
            [0, "&iquest;"],
            [0, "&Agrave;"],
            [0, "&Aacute;"],
            [0, "&Acirc;"],
            [0, "&Atilde;"],
            [0, "&Auml;"],
            [0, "&angst;"],
            [0, "&AElig;"],
            [0, "&Ccedil;"],
            [0, "&Egrave;"],
            [0, "&Eacute;"],
            [0, "&Ecirc;"],
            [0, "&Euml;"],
            [0, "&Igrave;"],
            [0, "&Iacute;"],
            [0, "&Icirc;"],
            [0, "&Iuml;"],
            [0, "&ETH;"],
            [0, "&Ntilde;"],
            [0, "&Ograve;"],
            [0, "&Oacute;"],
            [0, "&Ocirc;"],
            [0, "&Otilde;"],
            [0, "&Ouml;"],
            [0, "&times;"],
            [0, "&Oslash;"],
            [0, "&Ugrave;"],
            [0, "&Uacute;"],
            [0, "&Ucirc;"],
            [0, "&Uuml;"],
            [0, "&Yacute;"],
            [0, "&THORN;"],
            [0, "&szlig;"],
            [0, "&agrave;"],
            [0, "&aacute;"],
            [0, "&acirc;"],
            [0, "&atilde;"],
            [0, "&auml;"],
            [0, "&aring;"],
            [0, "&aelig;"],
            [0, "&ccedil;"],
            [0, "&egrave;"],
            [0, "&eacute;"],
            [0, "&ecirc;"],
            [0, "&euml;"],
            [0, "&igrave;"],
            [0, "&iacute;"],
            [0, "&icirc;"],
            [0, "&iuml;"],
            [0, "&eth;"],
            [0, "&ntilde;"],
            [0, "&ograve;"],
            [0, "&oacute;"],
            [0, "&ocirc;"],
            [0, "&otilde;"],
            [0, "&ouml;"],
            [0, "&div;"],
            [0, "&oslash;"],
            [0, "&ugrave;"],
            [0, "&uacute;"],
            [0, "&ucirc;"],
            [0, "&uuml;"],
            [0, "&yacute;"],
            [0, "&thorn;"],
            [0, "&yuml;"],
            [0, "&Amacr;"],
            [0, "&amacr;"],
            [0, "&Abreve;"],
            [0, "&abreve;"],
            [0, "&Aogon;"],
            [0, "&aogon;"],
            [0, "&Cacute;"],
            [0, "&cacute;"],
            [0, "&Ccirc;"],
            [0, "&ccirc;"],
            [0, "&Cdot;"],
            [0, "&cdot;"],
            [0, "&Ccaron;"],
            [0, "&ccaron;"],
            [0, "&Dcaron;"],
            [0, "&dcaron;"],
            [0, "&Dstrok;"],
            [0, "&dstrok;"],
            [0, "&Emacr;"],
            [0, "&emacr;"],
            [2, "&Edot;"],
            [0, "&edot;"],
            [0, "&Eogon;"],
            [0, "&eogon;"],
            [0, "&Ecaron;"],
            [0, "&ecaron;"],
            [0, "&Gcirc;"],
            [0, "&gcirc;"],
            [0, "&Gbreve;"],
            [0, "&gbreve;"],
            [0, "&Gdot;"],
            [0, "&gdot;"],
            [0, "&Gcedil;"],
            [1, "&Hcirc;"],
            [0, "&hcirc;"],
            [0, "&Hstrok;"],
            [0, "&hstrok;"],
            [0, "&Itilde;"],
            [0, "&itilde;"],
            [0, "&Imacr;"],
            [0, "&imacr;"],
            [2, "&Iogon;"],
            [0, "&iogon;"],
            [0, "&Idot;"],
            [0, "&imath;"],
            [0, "&IJlig;"],
            [0, "&ijlig;"],
            [0, "&Jcirc;"],
            [0, "&jcirc;"],
            [0, "&Kcedil;"],
            [0, "&kcedil;"],
            [0, "&kgreen;"],
            [0, "&Lacute;"],
            [0, "&lacute;"],
            [0, "&Lcedil;"],
            [0, "&lcedil;"],
            [0, "&Lcaron;"],
            [0, "&lcaron;"],
            [0, "&Lmidot;"],
            [0, "&lmidot;"],
            [0, "&Lstrok;"],
            [0, "&lstrok;"],
            [0, "&Nacute;"],
            [0, "&nacute;"],
            [0, "&Ncedil;"],
            [0, "&ncedil;"],
            [0, "&Ncaron;"],
            [0, "&ncaron;"],
            [0, "&napos;"],
            [0, "&ENG;"],
            [0, "&eng;"],
            [0, "&Omacr;"],
            [0, "&omacr;"],
            [2, "&Odblac;"],
            [0, "&odblac;"],
            [0, "&OElig;"],
            [0, "&oelig;"],
            [0, "&Racute;"],
            [0, "&racute;"],
            [0, "&Rcedil;"],
            [0, "&rcedil;"],
            [0, "&Rcaron;"],
            [0, "&rcaron;"],
            [0, "&Sacute;"],
            [0, "&sacute;"],
            [0, "&Scirc;"],
            [0, "&scirc;"],
            [0, "&Scedil;"],
            [0, "&scedil;"],
            [0, "&Scaron;"],
            [0, "&scaron;"],
            [0, "&Tcedil;"],
            [0, "&tcedil;"],
            [0, "&Tcaron;"],
            [0, "&tcaron;"],
            [0, "&Tstrok;"],
            [0, "&tstrok;"],
            [0, "&Utilde;"],
            [0, "&utilde;"],
            [0, "&Umacr;"],
            [0, "&umacr;"],
            [0, "&Ubreve;"],
            [0, "&ubreve;"],
            [0, "&Uring;"],
            [0, "&uring;"],
            [0, "&Udblac;"],
            [0, "&udblac;"],
            [0, "&Uogon;"],
            [0, "&uogon;"],
            [0, "&Wcirc;"],
            [0, "&wcirc;"],
            [0, "&Ycirc;"],
            [0, "&ycirc;"],
            [0, "&Yuml;"],
            [0, "&Zacute;"],
            [0, "&zacute;"],
            [0, "&Zdot;"],
            [0, "&zdot;"],
            [0, "&Zcaron;"],
            [0, "&zcaron;"],
            [19, "&fnof;"],
            [34, "&imped;"],
            [63, "&gacute;"],
            [65, "&jmath;"],
            [142, "&circ;"],
            [0, "&caron;"],
            [16, "&breve;"],
            [0, "&DiacriticalDot;"],
            [0, "&ring;"],
            [0, "&ogon;"],
            [0, "&DiacriticalTilde;"],
            [0, "&dblac;"],
            [51, "&DownBreve;"],
            [127, "&Alpha;"],
            [0, "&Beta;"],
            [0, "&Gamma;"],
            [0, "&Delta;"],
            [0, "&Epsilon;"],
            [0, "&Zeta;"],
            [0, "&Eta;"],
            [0, "&Theta;"],
            [0, "&Iota;"],
            [0, "&Kappa;"],
            [0, "&Lambda;"],
            [0, "&Mu;"],
            [0, "&Nu;"],
            [0, "&Xi;"],
            [0, "&Omicron;"],
            [0, "&Pi;"],
            [0, "&Rho;"],
            [1, "&Sigma;"],
            [0, "&Tau;"],
            [0, "&Upsilon;"],
            [0, "&Phi;"],
            [0, "&Chi;"],
            [0, "&Psi;"],
            [0, "&ohm;"],
            [7, "&alpha;"],
            [0, "&beta;"],
            [0, "&gamma;"],
            [0, "&delta;"],
            [0, "&epsi;"],
            [0, "&zeta;"],
            [0, "&eta;"],
            [0, "&theta;"],
            [0, "&iota;"],
            [0, "&kappa;"],
            [0, "&lambda;"],
            [0, "&mu;"],
            [0, "&nu;"],
            [0, "&xi;"],
            [0, "&omicron;"],
            [0, "&pi;"],
            [0, "&rho;"],
            [0, "&sigmaf;"],
            [0, "&sigma;"],
            [0, "&tau;"],
            [0, "&upsi;"],
            [0, "&phi;"],
            [0, "&chi;"],
            [0, "&psi;"],
            [0, "&omega;"],
            [7, "&thetasym;"],
            [0, "&Upsi;"],
            [2, "&phiv;"],
            [0, "&piv;"],
            [5, "&Gammad;"],
            [0, "&digamma;"],
            [18, "&kappav;"],
            [0, "&rhov;"],
            [3, "&epsiv;"],
            [0, "&backepsilon;"],
            [10, "&IOcy;"],
            [0, "&DJcy;"],
            [0, "&GJcy;"],
            [0, "&Jukcy;"],
            [0, "&DScy;"],
            [0, "&Iukcy;"],
            [0, "&YIcy;"],
            [0, "&Jsercy;"],
            [0, "&LJcy;"],
            [0, "&NJcy;"],
            [0, "&TSHcy;"],
            [0, "&KJcy;"],
            [1, "&Ubrcy;"],
            [0, "&DZcy;"],
            [0, "&Acy;"],
            [0, "&Bcy;"],
            [0, "&Vcy;"],
            [0, "&Gcy;"],
            [0, "&Dcy;"],
            [0, "&IEcy;"],
            [0, "&ZHcy;"],
            [0, "&Zcy;"],
            [0, "&Icy;"],
            [0, "&Jcy;"],
            [0, "&Kcy;"],
            [0, "&Lcy;"],
            [0, "&Mcy;"],
            [0, "&Ncy;"],
            [0, "&Ocy;"],
            [0, "&Pcy;"],
            [0, "&Rcy;"],
            [0, "&Scy;"],
            [0, "&Tcy;"],
            [0, "&Ucy;"],
            [0, "&Fcy;"],
            [0, "&KHcy;"],
            [0, "&TScy;"],
            [0, "&CHcy;"],
            [0, "&SHcy;"],
            [0, "&SHCHcy;"],
            [0, "&HARDcy;"],
            [0, "&Ycy;"],
            [0, "&SOFTcy;"],
            [0, "&Ecy;"],
            [0, "&YUcy;"],
            [0, "&YAcy;"],
            [0, "&acy;"],
            [0, "&bcy;"],
            [0, "&vcy;"],
            [0, "&gcy;"],
            [0, "&dcy;"],
            [0, "&iecy;"],
            [0, "&zhcy;"],
            [0, "&zcy;"],
            [0, "&icy;"],
            [0, "&jcy;"],
            [0, "&kcy;"],
            [0, "&lcy;"],
            [0, "&mcy;"],
            [0, "&ncy;"],
            [0, "&ocy;"],
            [0, "&pcy;"],
            [0, "&rcy;"],
            [0, "&scy;"],
            [0, "&tcy;"],
            [0, "&ucy;"],
            [0, "&fcy;"],
            [0, "&khcy;"],
            [0, "&tscy;"],
            [0, "&chcy;"],
            [0, "&shcy;"],
            [0, "&shchcy;"],
            [0, "&hardcy;"],
            [0, "&ycy;"],
            [0, "&softcy;"],
            [0, "&ecy;"],
            [0, "&yucy;"],
            [0, "&yacy;"],
            [1, "&iocy;"],
            [0, "&djcy;"],
            [0, "&gjcy;"],
            [0, "&jukcy;"],
            [0, "&dscy;"],
            [0, "&iukcy;"],
            [0, "&yicy;"],
            [0, "&jsercy;"],
            [0, "&ljcy;"],
            [0, "&njcy;"],
            [0, "&tshcy;"],
            [0, "&kjcy;"],
            [1, "&ubrcy;"],
            [0, "&dzcy;"],
            [7074, "&ensp;"],
            [0, "&emsp;"],
            [0, "&emsp13;"],
            [0, "&emsp14;"],
            [1, "&numsp;"],
            [0, "&puncsp;"],
            [0, "&ThinSpace;"],
            [0, "&hairsp;"],
            [0, "&NegativeMediumSpace;"],
            [0, "&zwnj;"],
            [0, "&zwj;"],
            [0, "&lrm;"],
            [0, "&rlm;"],
            [0, "&dash;"],
            [2, "&ndash;"],
            [0, "&mdash;"],
            [0, "&horbar;"],
            [0, "&Verbar;"],
            [1, "&lsquo;"],
            [0, "&CloseCurlyQuote;"],
            [0, "&lsquor;"],
            [1, "&ldquo;"],
            [0, "&CloseCurlyDoubleQuote;"],
            [0, "&bdquo;"],
            [1, "&dagger;"],
            [0, "&Dagger;"],
            [0, "&bull;"],
            [2, "&nldr;"],
            [0, "&hellip;"],
            [9, "&permil;"],
            [0, "&pertenk;"],
            [0, "&prime;"],
            [0, "&Prime;"],
            [0, "&tprime;"],
            [0, "&backprime;"],
            [3, "&lsaquo;"],
            [0, "&rsaquo;"],
            [3, "&oline;"],
            [2, "&caret;"],
            [1, "&hybull;"],
            [0, "&frasl;"],
            [10, "&bsemi;"],
            [7, "&qprime;"],
            [7, {
                v: "&MediumSpace;",
                n: 8202,
                o: "&ThickSpace;"
            }],
            [0, "&NoBreak;"],
            [0, "&af;"],
            [0, "&InvisibleTimes;"],
            [0, "&ic;"],
            [72, "&euro;"],
            [46, "&tdot;"],
            [0, "&DotDot;"],
            [37, "&complexes;"],
            [2, "&incare;"],
            [4, "&gscr;"],
            [0, "&hamilt;"],
            [0, "&Hfr;"],
            [0, "&Hopf;"],
            [0, "&planckh;"],
            [0, "&hbar;"],
            [0, "&imagline;"],
            [0, "&Ifr;"],
            [0, "&lagran;"],
            [0, "&ell;"],
            [1, "&naturals;"],
            [0, "&numero;"],
            [0, "&copysr;"],
            [0, "&weierp;"],
            [0, "&Popf;"],
            [0, "&Qopf;"],
            [0, "&realine;"],
            [0, "&real;"],
            [0, "&reals;"],
            [0, "&rx;"],
            [3, "&trade;"],
            [1, "&integers;"],
            [2, "&mho;"],
            [0, "&zeetrf;"],
            [0, "&iiota;"],
            [2, "&bernou;"],
            [0, "&Cayleys;"],
            [1, "&escr;"],
            [0, "&Escr;"],
            [0, "&Fouriertrf;"],
            [1, "&Mellintrf;"],
            [0, "&order;"],
            [0, "&alefsym;"],
            [0, "&beth;"],
            [0, "&gimel;"],
            [0, "&daleth;"],
            [12, "&CapitalDifferentialD;"],
            [0, "&dd;"],
            [0, "&ee;"],
            [0, "&ii;"],
            [10, "&frac13;"],
            [0, "&frac23;"],
            [0, "&frac15;"],
            [0, "&frac25;"],
            [0, "&frac35;"],
            [0, "&frac45;"],
            [0, "&frac16;"],
            [0, "&frac56;"],
            [0, "&frac18;"],
            [0, "&frac38;"],
            [0, "&frac58;"],
            [0, "&frac78;"],
            [49, "&larr;"],
            [0, "&ShortUpArrow;"],
            [0, "&rarr;"],
            [0, "&darr;"],
            [0, "&harr;"],
            [0, "&updownarrow;"],
            [0, "&nwarr;"],
            [0, "&nearr;"],
            [0, "&LowerRightArrow;"],
            [0, "&LowerLeftArrow;"],
            [0, "&nlarr;"],
            [0, "&nrarr;"],
            [1, {
                v: "&rarrw;",
                n: 824,
                o: "&nrarrw;"
            }],
            [0, "&Larr;"],
            [0, "&Uarr;"],
            [0, "&Rarr;"],
            [0, "&Darr;"],
            [0, "&larrtl;"],
            [0, "&rarrtl;"],
            [0, "&LeftTeeArrow;"],
            [0, "&mapstoup;"],
            [0, "&map;"],
            [0, "&DownTeeArrow;"],
            [1, "&hookleftarrow;"],
            [0, "&hookrightarrow;"],
            [0, "&larrlp;"],
            [0, "&looparrowright;"],
            [0, "&harrw;"],
            [0, "&nharr;"],
            [1, "&lsh;"],
            [0, "&rsh;"],
            [0, "&ldsh;"],
            [0, "&rdsh;"],
            [1, "&crarr;"],
            [0, "&cularr;"],
            [0, "&curarr;"],
            [2, "&circlearrowleft;"],
            [0, "&circlearrowright;"],
            [0, "&leftharpoonup;"],
            [0, "&DownLeftVector;"],
            [0, "&RightUpVector;"],
            [0, "&LeftUpVector;"],
            [0, "&rharu;"],
            [0, "&DownRightVector;"],
            [0, "&dharr;"],
            [0, "&dharl;"],
            [0, "&RightArrowLeftArrow;"],
            [0, "&udarr;"],
            [0, "&LeftArrowRightArrow;"],
            [0, "&leftleftarrows;"],
            [0, "&upuparrows;"],
            [0, "&rightrightarrows;"],
            [0, "&ddarr;"],
            [0, "&leftrightharpoons;"],
            [0, "&Equilibrium;"],
            [0, "&nlArr;"],
            [0, "&nhArr;"],
            [0, "&nrArr;"],
            [0, "&DoubleLeftArrow;"],
            [0, "&DoubleUpArrow;"],
            [0, "&DoubleRightArrow;"],
            [0, "&dArr;"],
            [0, "&DoubleLeftRightArrow;"],
            [0, "&DoubleUpDownArrow;"],
            [0, "&nwArr;"],
            [0, "&neArr;"],
            [0, "&seArr;"],
            [0, "&swArr;"],
            [0, "&lAarr;"],
            [0, "&rAarr;"],
            [1, "&zigrarr;"],
            [6, "&larrb;"],
            [0, "&rarrb;"],
            [15, "&DownArrowUpArrow;"],
            [7, "&loarr;"],
            [0, "&roarr;"],
            [0, "&hoarr;"],
            [0, "&forall;"],
            [0, "&comp;"],
            [0, {
                v: "&part;",
                n: 824,
                o: "&npart;"
            }],
            [0, "&exist;"],
            [0, "&nexist;"],
            [0, "&empty;"],
            [1, "&Del;"],
            [0, "&Element;"],
            [0, "&NotElement;"],
            [1, "&ni;"],
            [0, "&notni;"],
            [2, "&prod;"],
            [0, "&coprod;"],
            [0, "&sum;"],
            [0, "&minus;"],
            [0, "&MinusPlus;"],
            [0, "&dotplus;"],
            [1, "&Backslash;"],
            [0, "&lowast;"],
            [0, "&compfn;"],
            [1, "&radic;"],
            [2, "&prop;"],
            [0, "&infin;"],
            [0, "&angrt;"],
            [0, {
                v: "&ang;",
                n: 8402,
                o: "&nang;"
            }],
            [0, "&angmsd;"],
            [0, "&angsph;"],
            [0, "&mid;"],
            [0, "&nmid;"],
            [0, "&DoubleVerticalBar;"],
            [0, "&NotDoubleVerticalBar;"],
            [0, "&and;"],
            [0, "&or;"],
            [0, {
                v: "&cap;",
                n: 65024,
                o: "&caps;"
            }],
            [0, {
                v: "&cup;",
                n: 65024,
                o: "&cups;"
            }],
            [0, "&int;"],
            [0, "&Int;"],
            [0, "&iiint;"],
            [0, "&conint;"],
            [0, "&Conint;"],
            [0, "&Cconint;"],
            [0, "&cwint;"],
            [0, "&ClockwiseContourIntegral;"],
            [0, "&awconint;"],
            [0, "&there4;"],
            [0, "&becaus;"],
            [0, "&ratio;"],
            [0, "&Colon;"],
            [0, "&dotminus;"],
            [1, "&mDDot;"],
            [0, "&homtht;"],
            [0, {
                v: "&sim;",
                n: 8402,
                o: "&nvsim;"
            }],
            [0, {
                v: "&backsim;",
                n: 817,
                o: "&race;"
            }],
            [0, {
                v: "&ac;",
                n: 819,
                o: "&acE;"
            }],
            [0, "&acd;"],
            [0, "&VerticalTilde;"],
            [0, "&NotTilde;"],
            [0, {
                v: "&eqsim;",
                n: 824,
                o: "&nesim;"
            }],
            [0, "&sime;"],
            [0, "&NotTildeEqual;"],
            [0, "&cong;"],
            [0, "&simne;"],
            [0, "&ncong;"],
            [0, "&ap;"],
            [0, "&nap;"],
            [0, "&ape;"],
            [0, {
                v: "&apid;",
                n: 824,
                o: "&napid;"
            }],
            [0, "&backcong;"],
            [0, {
                v: "&asympeq;",
                n: 8402,
                o: "&nvap;"
            }],
            [0, {
                v: "&bump;",
                n: 824,
                o: "&nbump;"
            }],
            [0, {
                v: "&bumpe;",
                n: 824,
                o: "&nbumpe;"
            }],
            [0, {
                v: "&doteq;",
                n: 824,
                o: "&nedot;"
            }],
            [0, "&doteqdot;"],
            [0, "&efDot;"],
            [0, "&erDot;"],
            [0, "&Assign;"],
            [0, "&ecolon;"],
            [0, "&ecir;"],
            [0, "&circeq;"],
            [1, "&wedgeq;"],
            [0, "&veeeq;"],
            [1, "&triangleq;"],
            [2, "&equest;"],
            [0, "&ne;"],
            [0, {
                v: "&Congruent;",
                n: 8421,
                o: "&bnequiv;"
            }],
            [0, "&nequiv;"],
            [1, {
                v: "&le;",
                n: 8402,
                o: "&nvle;"
            }],
            [0, {
                v: "&ge;",
                n: 8402,
                o: "&nvge;"
            }],
            [0, {
                v: "&lE;",
                n: 824,
                o: "&nlE;"
            }],
            [0, {
                v: "&gE;",
                n: 824,
                o: "&ngE;"
            }],
            [0, {
                v: "&lnE;",
                n: 65024,
                o: "&lvertneqq;"
            }],
            [0, {
                v: "&gnE;",
                n: 65024,
                o: "&gvertneqq;"
            }],
            [0, {
                v: "&ll;",
                n: new Map(restoreDiff([
                    [824, "&nLtv;"],
                    [7577, "&nLt;"]
                ]))
            }],
            [0, {
                v: "&gg;",
                n: new Map(restoreDiff([
                    [824, "&nGtv;"],
                    [7577, "&nGt;"]
                ]))
            }],
            [0, "&between;"],
            [0, "&NotCupCap;"],
            [0, "&nless;"],
            [0, "&ngt;"],
            [0, "&nle;"],
            [0, "&nge;"],
            [0, "&lesssim;"],
            [0, "&GreaterTilde;"],
            [0, "&nlsim;"],
            [0, "&ngsim;"],
            [0, "&LessGreater;"],
            [0, "&gl;"],
            [0, "&NotLessGreater;"],
            [0, "&NotGreaterLess;"],
            [0, "&pr;"],
            [0, "&sc;"],
            [0, "&prcue;"],
            [0, "&sccue;"],
            [0, "&PrecedesTilde;"],
            [0, {
                v: "&scsim;",
                n: 824,
                o: "&NotSucceedsTilde;"
            }],
            [0, "&NotPrecedes;"],
            [0, "&NotSucceeds;"],
            [0, {
                v: "&sub;",
                n: 8402,
                o: "&NotSubset;"
            }],
            [0, {
                v: "&sup;",
                n: 8402,
                o: "&NotSuperset;"
            }],
            [0, "&nsub;"],
            [0, "&nsup;"],
            [0, "&sube;"],
            [0, "&supe;"],
            [0, "&NotSubsetEqual;"],
            [0, "&NotSupersetEqual;"],
            [0, {
                v: "&subne;",
                n: 65024,
                o: "&varsubsetneq;"
            }],
            [0, {
                v: "&supne;",
                n: 65024,
                o: "&varsupsetneq;"
            }],
            [1, "&cupdot;"],
            [0, "&UnionPlus;"],
            [0, {
                v: "&sqsub;",
                n: 824,
                o: "&NotSquareSubset;"
            }],
            [0, {
                v: "&sqsup;",
                n: 824,
                o: "&NotSquareSuperset;"
            }],
            [0, "&sqsube;"],
            [0, "&sqsupe;"],
            [0, {
                v: "&sqcap;",
                n: 65024,
                o: "&sqcaps;"
            }],
            [0, {
                v: "&sqcup;",
                n: 65024,
                o: "&sqcups;"
            }],
            [0, "&CirclePlus;"],
            [0, "&CircleMinus;"],
            [0, "&CircleTimes;"],
            [0, "&osol;"],
            [0, "&CircleDot;"],
            [0, "&circledcirc;"],
            [0, "&circledast;"],
            [1, "&circleddash;"],
            [0, "&boxplus;"],
            [0, "&boxminus;"],
            [0, "&boxtimes;"],
            [0, "&dotsquare;"],
            [0, "&RightTee;"],
            [0, "&dashv;"],
            [0, "&DownTee;"],
            [0, "&bot;"],
            [1, "&models;"],
            [0, "&DoubleRightTee;"],
            [0, "&Vdash;"],
            [0, "&Vvdash;"],
            [0, "&VDash;"],
            [0, "&nvdash;"],
            [0, "&nvDash;"],
            [0, "&nVdash;"],
            [0, "&nVDash;"],
            [0, "&prurel;"],
            [1, "&LeftTriangle;"],
            [0, "&RightTriangle;"],
            [0, {
                v: "&LeftTriangleEqual;",
                n: 8402,
                o: "&nvltrie;"
            }],
            [0, {
                v: "&RightTriangleEqual;",
                n: 8402,
                o: "&nvrtrie;"
            }],
            [0, "&origof;"],
            [0, "&imof;"],
            [0, "&multimap;"],
            [0, "&hercon;"],
            [0, "&intcal;"],
            [0, "&veebar;"],
            [1, "&barvee;"],
            [0, "&angrtvb;"],
            [0, "&lrtri;"],
            [0, "&bigwedge;"],
            [0, "&bigvee;"],
            [0, "&bigcap;"],
            [0, "&bigcup;"],
            [0, "&diam;"],
            [0, "&sdot;"],
            [0, "&sstarf;"],
            [0, "&divideontimes;"],
            [0, "&bowtie;"],
            [0, "&ltimes;"],
            [0, "&rtimes;"],
            [0, "&leftthreetimes;"],
            [0, "&rightthreetimes;"],
            [0, "&backsimeq;"],
            [0, "&curlyvee;"],
            [0, "&curlywedge;"],
            [0, "&Sub;"],
            [0, "&Sup;"],
            [0, "&Cap;"],
            [0, "&Cup;"],
            [0, "&fork;"],
            [0, "&epar;"],
            [0, "&lessdot;"],
            [0, "&gtdot;"],
            [0, {
                v: "&Ll;",
                n: 824,
                o: "&nLl;"
            }],
            [0, {
                v: "&Gg;",
                n: 824,
                o: "&nGg;"
            }],
            [0, {
                v: "&leg;",
                n: 65024,
                o: "&lesg;"
            }],
            [0, {
                v: "&gel;",
                n: 65024,
                o: "&gesl;"
            }],
            [2, "&cuepr;"],
            [0, "&cuesc;"],
            [0, "&NotPrecedesSlantEqual;"],
            [0, "&NotSucceedsSlantEqual;"],
            [0, "&NotSquareSubsetEqual;"],
            [0, "&NotSquareSupersetEqual;"],
            [2, "&lnsim;"],
            [0, "&gnsim;"],
            [0, "&precnsim;"],
            [0, "&scnsim;"],
            [0, "&nltri;"],
            [0, "&NotRightTriangle;"],
            [0, "&nltrie;"],
            [0, "&NotRightTriangleEqual;"],
            [0, "&vellip;"],
            [0, "&ctdot;"],
            [0, "&utdot;"],
            [0, "&dtdot;"],
            [0, "&disin;"],
            [0, "&isinsv;"],
            [0, "&isins;"],
            [0, {
                v: "&isindot;",
                n: 824,
                o: "&notindot;"
            }],
            [0, "&notinvc;"],
            [0, "&notinvb;"],
            [1, {
                v: "&isinE;",
                n: 824,
                o: "&notinE;"
            }],
            [0, "&nisd;"],
            [0, "&xnis;"],
            [0, "&nis;"],
            [0, "&notnivc;"],
            [0, "&notnivb;"],
            [6, "&barwed;"],
            [0, "&Barwed;"],
            [1, "&lceil;"],
            [0, "&rceil;"],
            [0, "&LeftFloor;"],
            [0, "&rfloor;"],
            [0, "&drcrop;"],
            [0, "&dlcrop;"],
            [0, "&urcrop;"],
            [0, "&ulcrop;"],
            [0, "&bnot;"],
            [1, "&profline;"],
            [0, "&profsurf;"],
            [1, "&telrec;"],
            [0, "&target;"],
            [5, "&ulcorn;"],
            [0, "&urcorn;"],
            [0, "&dlcorn;"],
            [0, "&drcorn;"],
            [2, "&frown;"],
            [0, "&smile;"],
            [9, "&cylcty;"],
            [0, "&profalar;"],
            [7, "&topbot;"],
            [6, "&ovbar;"],
            [1, "&solbar;"],
            [60, "&angzarr;"],
            [51, "&lmoustache;"],
            [0, "&rmoustache;"],
            [2, "&OverBracket;"],
            [0, "&bbrk;"],
            [0, "&bbrktbrk;"],
            [37, "&OverParenthesis;"],
            [0, "&UnderParenthesis;"],
            [0, "&OverBrace;"],
            [0, "&UnderBrace;"],
            [2, "&trpezium;"],
            [4, "&elinters;"],
            [59, "&blank;"],
            [164, "&circledS;"],
            [55, "&boxh;"],
            [1, "&boxv;"],
            [9, "&boxdr;"],
            [3, "&boxdl;"],
            [3, "&boxur;"],
            [3, "&boxul;"],
            [3, "&boxvr;"],
            [7, "&boxvl;"],
            [7, "&boxhd;"],
            [7, "&boxhu;"],
            [7, "&boxvh;"],
            [19, "&boxH;"],
            [0, "&boxV;"],
            [0, "&boxdR;"],
            [0, "&boxDr;"],
            [0, "&boxDR;"],
            [0, "&boxdL;"],
            [0, "&boxDl;"],
            [0, "&boxDL;"],
            [0, "&boxuR;"],
            [0, "&boxUr;"],
            [0, "&boxUR;"],
            [0, "&boxuL;"],
            [0, "&boxUl;"],
            [0, "&boxUL;"],
            [0, "&boxvR;"],
            [0, "&boxVr;"],
            [0, "&boxVR;"],
            [0, "&boxvL;"],
            [0, "&boxVl;"],
            [0, "&boxVL;"],
            [0, "&boxHd;"],
            [0, "&boxhD;"],
            [0, "&boxHD;"],
            [0, "&boxHu;"],
            [0, "&boxhU;"],
            [0, "&boxHU;"],
            [0, "&boxvH;"],
            [0, "&boxVh;"],
            [0, "&boxVH;"],
            [19, "&uhblk;"],
            [3, "&lhblk;"],
            [3, "&block;"],
            [8, "&blk14;"],
            [0, "&blk12;"],
            [0, "&blk34;"],
            [13, "&square;"],
            [8, "&blacksquare;"],
            [0, "&EmptyVerySmallSquare;"],
            [1, "&rect;"],
            [0, "&marker;"],
            [2, "&fltns;"],
            [1, "&bigtriangleup;"],
            [0, "&blacktriangle;"],
            [0, "&triangle;"],
            [2, "&blacktriangleright;"],
            [0, "&rtri;"],
            [3, "&bigtriangledown;"],
            [0, "&blacktriangledown;"],
            [0, "&dtri;"],
            [2, "&blacktriangleleft;"],
            [0, "&ltri;"],
            [6, "&loz;"],
            [0, "&cir;"],
            [32, "&tridot;"],
            [2, "&bigcirc;"],
            [8, "&ultri;"],
            [0, "&urtri;"],
            [0, "&lltri;"],
            [0, "&EmptySmallSquare;"],
            [0, "&FilledSmallSquare;"],
            [8, "&bigstar;"],
            [0, "&star;"],
            [7, "&phone;"],
            [49, "&female;"],
            [1, "&male;"],
            [29, "&spades;"],
            [2, "&clubs;"],
            [1, "&hearts;"],
            [0, "&diamondsuit;"],
            [3, "&sung;"],
            [2, "&flat;"],
            [0, "&natural;"],
            [0, "&sharp;"],
            [163, "&check;"],
            [3, "&cross;"],
            [8, "&malt;"],
            [21, "&sext;"],
            [33, "&VerticalSeparator;"],
            [25, "&lbbrk;"],
            [0, "&rbbrk;"],
            [84, "&bsolhsub;"],
            [0, "&suphsol;"],
            [28, "&LeftDoubleBracket;"],
            [0, "&RightDoubleBracket;"],
            [0, "&lang;"],
            [0, "&rang;"],
            [0, "&Lang;"],
            [0, "&Rang;"],
            [0, "&loang;"],
            [0, "&roang;"],
            [7, "&longleftarrow;"],
            [0, "&longrightarrow;"],
            [0, "&longleftrightarrow;"],
            [0, "&DoubleLongLeftArrow;"],
            [0, "&DoubleLongRightArrow;"],
            [0, "&DoubleLongLeftRightArrow;"],
            [1, "&longmapsto;"],
            [2, "&dzigrarr;"],
            [258, "&nvlArr;"],
            [0, "&nvrArr;"],
            [0, "&nvHarr;"],
            [0, "&Map;"],
            [6, "&lbarr;"],
            [0, "&bkarow;"],
            [0, "&lBarr;"],
            [0, "&dbkarow;"],
            [0, "&drbkarow;"],
            [0, "&DDotrahd;"],
            [0, "&UpArrowBar;"],
            [0, "&DownArrowBar;"],
            [2, "&Rarrtl;"],
            [2, "&latail;"],
            [0, "&ratail;"],
            [0, "&lAtail;"],
            [0, "&rAtail;"],
            [0, "&larrfs;"],
            [0, "&rarrfs;"],
            [0, "&larrbfs;"],
            [0, "&rarrbfs;"],
            [2, "&nwarhk;"],
            [0, "&nearhk;"],
            [0, "&hksearow;"],
            [0, "&hkswarow;"],
            [0, "&nwnear;"],
            [0, "&nesear;"],
            [0, "&seswar;"],
            [0, "&swnwar;"],
            [8, {
                v: "&rarrc;",
                n: 824,
                o: "&nrarrc;"
            }],
            [1, "&cudarrr;"],
            [0, "&ldca;"],
            [0, "&rdca;"],
            [0, "&cudarrl;"],
            [0, "&larrpl;"],
            [2, "&curarrm;"],
            [0, "&cularrp;"],
            [7, "&rarrpl;"],
            [2, "&harrcir;"],
            [0, "&Uarrocir;"],
            [0, "&lurdshar;"],
            [0, "&ldrushar;"],
            [2, "&LeftRightVector;"],
            [0, "&RightUpDownVector;"],
            [0, "&DownLeftRightVector;"],
            [0, "&LeftUpDownVector;"],
            [0, "&LeftVectorBar;"],
            [0, "&RightVectorBar;"],
            [0, "&RightUpVectorBar;"],
            [0, "&RightDownVectorBar;"],
            [0, "&DownLeftVectorBar;"],
            [0, "&DownRightVectorBar;"],
            [0, "&LeftUpVectorBar;"],
            [0, "&LeftDownVectorBar;"],
            [0, "&LeftTeeVector;"],
            [0, "&RightTeeVector;"],
            [0, "&RightUpTeeVector;"],
            [0, "&RightDownTeeVector;"],
            [0, "&DownLeftTeeVector;"],
            [0, "&DownRightTeeVector;"],
            [0, "&LeftUpTeeVector;"],
            [0, "&LeftDownTeeVector;"],
            [0, "&lHar;"],
            [0, "&uHar;"],
            [0, "&rHar;"],
            [0, "&dHar;"],
            [0, "&luruhar;"],
            [0, "&ldrdhar;"],
            [0, "&ruluhar;"],
            [0, "&rdldhar;"],
            [0, "&lharul;"],
            [0, "&llhard;"],
            [0, "&rharul;"],
            [0, "&lrhard;"],
            [0, "&udhar;"],
            [0, "&duhar;"],
            [0, "&RoundImplies;"],
            [0, "&erarr;"],
            [0, "&simrarr;"],
            [0, "&larrsim;"],
            [0, "&rarrsim;"],
            [0, "&rarrap;"],
            [0, "&ltlarr;"],
            [1, "&gtrarr;"],
            [0, "&subrarr;"],
            [1, "&suplarr;"],
            [0, "&lfisht;"],
            [0, "&rfisht;"],
            [0, "&ufisht;"],
            [0, "&dfisht;"],
            [5, "&lopar;"],
            [0, "&ropar;"],
            [4, "&lbrke;"],
            [0, "&rbrke;"],
            [0, "&lbrkslu;"],
            [0, "&rbrksld;"],
            [0, "&lbrksld;"],
            [0, "&rbrkslu;"],
            [0, "&langd;"],
            [0, "&rangd;"],
            [0, "&lparlt;"],
            [0, "&rpargt;"],
            [0, "&gtlPar;"],
            [0, "&ltrPar;"],
            [3, "&vzigzag;"],
            [1, "&vangrt;"],
            [0, "&angrtvbd;"],
            [6, "&ange;"],
            [0, "&range;"],
            [0, "&dwangle;"],
            [0, "&uwangle;"],
            [0, "&angmsdaa;"],
            [0, "&angmsdab;"],
            [0, "&angmsdac;"],
            [0, "&angmsdad;"],
            [0, "&angmsdae;"],
            [0, "&angmsdaf;"],
            [0, "&angmsdag;"],
            [0, "&angmsdah;"],
            [0, "&bemptyv;"],
            [0, "&demptyv;"],
            [0, "&cemptyv;"],
            [0, "&raemptyv;"],
            [0, "&laemptyv;"],
            [0, "&ohbar;"],
            [0, "&omid;"],
            [0, "&opar;"],
            [1, "&operp;"],
            [1, "&olcross;"],
            [0, "&odsold;"],
            [1, "&olcir;"],
            [0, "&ofcir;"],
            [0, "&olt;"],
            [0, "&ogt;"],
            [0, "&cirscir;"],
            [0, "&cirE;"],
            [0, "&solb;"],
            [0, "&bsolb;"],
            [3, "&boxbox;"],
            [3, "&trisb;"],
            [0, "&rtriltri;"],
            [0, {
                v: "&LeftTriangleBar;",
                n: 824,
                o: "&NotLeftTriangleBar;"
            }],
            [0, {
                v: "&RightTriangleBar;",
                n: 824,
                o: "&NotRightTriangleBar;"
            }],
            [11, "&iinfin;"],
            [0, "&infintie;"],
            [0, "&nvinfin;"],
            [4, "&eparsl;"],
            [0, "&smeparsl;"],
            [0, "&eqvparsl;"],
            [5, "&blacklozenge;"],
            [8, "&RuleDelayed;"],
            [1, "&dsol;"],
            [9, "&bigodot;"],
            [0, "&bigoplus;"],
            [0, "&bigotimes;"],
            [1, "&biguplus;"],
            [1, "&bigsqcup;"],
            [5, "&iiiint;"],
            [0, "&fpartint;"],
            [2, "&cirfnint;"],
            [0, "&awint;"],
            [0, "&rppolint;"],
            [0, "&scpolint;"],
            [0, "&npolint;"],
            [0, "&pointint;"],
            [0, "&quatint;"],
            [0, "&intlarhk;"],
            [10, "&pluscir;"],
            [0, "&plusacir;"],
            [0, "&simplus;"],
            [0, "&plusdu;"],
            [0, "&plussim;"],
            [0, "&plustwo;"],
            [1, "&mcomma;"],
            [0, "&minusdu;"],
            [2, "&loplus;"],
            [0, "&roplus;"],
            [0, "&Cross;"],
            [0, "&timesd;"],
            [0, "&timesbar;"],
            [1, "&smashp;"],
            [0, "&lotimes;"],
            [0, "&rotimes;"],
            [0, "&otimesas;"],
            [0, "&Otimes;"],
            [0, "&odiv;"],
            [0, "&triplus;"],
            [0, "&triminus;"],
            [0, "&tritime;"],
            [0, "&intprod;"],
            [2, "&amalg;"],
            [0, "&capdot;"],
            [1, "&ncup;"],
            [0, "&ncap;"],
            [0, "&capand;"],
            [0, "&cupor;"],
            [0, "&cupcap;"],
            [0, "&capcup;"],
            [0, "&cupbrcap;"],
            [0, "&capbrcup;"],
            [0, "&cupcup;"],
            [0, "&capcap;"],
            [0, "&ccups;"],
            [0, "&ccaps;"],
            [2, "&ccupssm;"],
            [2, "&And;"],
            [0, "&Or;"],
            [0, "&andand;"],
            [0, "&oror;"],
            [0, "&orslope;"],
            [0, "&andslope;"],
            [1, "&andv;"],
            [0, "&orv;"],
            [0, "&andd;"],
            [0, "&ord;"],
            [1, "&wedbar;"],
            [6, "&sdote;"],
            [3, "&simdot;"],
            [2, {
                v: "&congdot;",
                n: 824,
                o: "&ncongdot;"
            }],
            [0, "&easter;"],
            [0, "&apacir;"],
            [0, {
                v: "&apE;",
                n: 824,
                o: "&napE;"
            }],
            [0, "&eplus;"],
            [0, "&pluse;"],
            [0, "&Esim;"],
            [0, "&Colone;"],
            [0, "&Equal;"],
            [1, "&ddotseq;"],
            [0, "&equivDD;"],
            [0, "&ltcir;"],
            [0, "&gtcir;"],
            [0, "&ltquest;"],
            [0, "&gtquest;"],
            [0, {
                v: "&leqslant;",
                n: 824,
                o: "&nleqslant;"
            }],
            [0, {
                v: "&geqslant;",
                n: 824,
                o: "&ngeqslant;"
            }],
            [0, "&lesdot;"],
            [0, "&gesdot;"],
            [0, "&lesdoto;"],
            [0, "&gesdoto;"],
            [0, "&lesdotor;"],
            [0, "&gesdotol;"],
            [0, "&lap;"],
            [0, "&gap;"],
            [0, "&lne;"],
            [0, "&gne;"],
            [0, "&lnap;"],
            [0, "&gnap;"],
            [0, "&lEg;"],
            [0, "&gEl;"],
            [0, "&lsime;"],
            [0, "&gsime;"],
            [0, "&lsimg;"],
            [0, "&gsiml;"],
            [0, "&lgE;"],
            [0, "&glE;"],
            [0, "&lesges;"],
            [0, "&gesles;"],
            [0, "&els;"],
            [0, "&egs;"],
            [0, "&elsdot;"],
            [0, "&egsdot;"],
            [0, "&el;"],
            [0, "&eg;"],
            [2, "&siml;"],
            [0, "&simg;"],
            [0, "&simlE;"],
            [0, "&simgE;"],
            [0, {
                v: "&LessLess;",
                n: 824,
                o: "&NotNestedLessLess;"
            }],
            [0, {
                v: "&GreaterGreater;",
                n: 824,
                o: "&NotNestedGreaterGreater;"
            }],
            [1, "&glj;"],
            [0, "&gla;"],
            [0, "&ltcc;"],
            [0, "&gtcc;"],
            [0, "&lescc;"],
            [0, "&gescc;"],
            [0, "&smt;"],
            [0, "&lat;"],
            [0, {
                v: "&smte;",
                n: 65024,
                o: "&smtes;"
            }],
            [0, {
                v: "&late;",
                n: 65024,
                o: "&lates;"
            }],
            [0, "&bumpE;"],
            [0, {
                v: "&PrecedesEqual;",
                n: 824,
                o: "&NotPrecedesEqual;"
            }],
            [0, {
                v: "&sce;",
                n: 824,
                o: "&NotSucceedsEqual;"
            }],
            [2, "&prE;"],
            [0, "&scE;"],
            [0, "&precneqq;"],
            [0, "&scnE;"],
            [0, "&prap;"],
            [0, "&scap;"],
            [0, "&precnapprox;"],
            [0, "&scnap;"],
            [0, "&Pr;"],
            [0, "&Sc;"],
            [0, "&subdot;"],
            [0, "&supdot;"],
            [0, "&subplus;"],
            [0, "&supplus;"],
            [0, "&submult;"],
            [0, "&supmult;"],
            [0, "&subedot;"],
            [0, "&supedot;"],
            [0, {
                v: "&subE;",
                n: 824,
                o: "&nsubE;"
            }],
            [0, {
                v: "&supE;",
                n: 824,
                o: "&nsupE;"
            }],
            [0, "&subsim;"],
            [0, "&supsim;"],
            [2, {
                v: "&subnE;",
                n: 65024,
                o: "&varsubsetneqq;"
            }],
            [0, {
                v: "&supnE;",
                n: 65024,
                o: "&varsupsetneqq;"
            }],
            [2, "&csub;"],
            [0, "&csup;"],
            [0, "&csube;"],
            [0, "&csupe;"],
            [0, "&subsup;"],
            [0, "&supsub;"],
            [0, "&subsub;"],
            [0, "&supsup;"],
            [0, "&suphsub;"],
            [0, "&supdsub;"],
            [0, "&forkv;"],
            [0, "&topfork;"],
            [0, "&mlcp;"],
            [8, "&Dashv;"],
            [1, "&Vdashl;"],
            [0, "&Barv;"],
            [0, "&vBar;"],
            [0, "&vBarv;"],
            [1, "&Vbar;"],
            [0, "&Not;"],
            [0, "&bNot;"],
            [0, "&rnmid;"],
            [0, "&cirmid;"],
            [0, "&midcir;"],
            [0, "&topcir;"],
            [0, "&nhpar;"],
            [0, "&parsim;"],
            [9, {
                v: "&parsl;",
                n: 8421,
                o: "&nparsl;"
            }],
            [44343, {
                n: new Map(restoreDiff([
                    [56476, "&Ascr;"],
                    [1, "&Cscr;"],
                    [0, "&Dscr;"],
                    [2, "&Gscr;"],
                    [2, "&Jscr;"],
                    [0, "&Kscr;"],
                    [2, "&Nscr;"],
                    [0, "&Oscr;"],
                    [0, "&Pscr;"],
                    [0, "&Qscr;"],
                    [1, "&Sscr;"],
                    [0, "&Tscr;"],
                    [0, "&Uscr;"],
                    [0, "&Vscr;"],
                    [0, "&Wscr;"],
                    [0, "&Xscr;"],
                    [0, "&Yscr;"],
                    [0, "&Zscr;"],
                    [0, "&ascr;"],
                    [0, "&bscr;"],
                    [0, "&cscr;"],
                    [0, "&dscr;"],
                    [1, "&fscr;"],
                    [1, "&hscr;"],
                    [0, "&iscr;"],
                    [0, "&jscr;"],
                    [0, "&kscr;"],
                    [0, "&lscr;"],
                    [0, "&mscr;"],
                    [0, "&nscr;"],
                    [1, "&pscr;"],
                    [0, "&qscr;"],
                    [0, "&rscr;"],
                    [0, "&sscr;"],
                    [0, "&tscr;"],
                    [0, "&uscr;"],
                    [0, "&vscr;"],
                    [0, "&wscr;"],
                    [0, "&xscr;"],
                    [0, "&yscr;"],
                    [0, "&zscr;"],
                    [52, "&Afr;"],
                    [0, "&Bfr;"],
                    [1, "&Dfr;"],
                    [0, "&Efr;"],
                    [0, "&Ffr;"],
                    [0, "&Gfr;"],
                    [2, "&Jfr;"],
                    [0, "&Kfr;"],
                    [0, "&Lfr;"],
                    [0, "&Mfr;"],
                    [0, "&Nfr;"],
                    [0, "&Ofr;"],
                    [0, "&Pfr;"],
                    [0, "&Qfr;"],
                    [1, "&Sfr;"],
                    [0, "&Tfr;"],
                    [0, "&Ufr;"],
                    [0, "&Vfr;"],
                    [0, "&Wfr;"],
                    [0, "&Xfr;"],
                    [0, "&Yfr;"],
                    [1, "&afr;"],
                    [0, "&bfr;"],
                    [0, "&cfr;"],
                    [0, "&dfr;"],
                    [0, "&efr;"],
                    [0, "&ffr;"],
                    [0, "&gfr;"],
                    [0, "&hfr;"],
                    [0, "&ifr;"],
                    [0, "&jfr;"],
                    [0, "&kfr;"],
                    [0, "&lfr;"],
                    [0, "&mfr;"],
                    [0, "&nfr;"],
                    [0, "&ofr;"],
                    [0, "&pfr;"],
                    [0, "&qfr;"],
                    [0, "&rfr;"],
                    [0, "&sfr;"],
                    [0, "&tfr;"],
                    [0, "&ufr;"],
                    [0, "&vfr;"],
                    [0, "&wfr;"],
                    [0, "&xfr;"],
                    [0, "&yfr;"],
                    [0, "&zfr;"],
                    [0, "&Aopf;"],
                    [0, "&Bopf;"],
                    [1, "&Dopf;"],
                    [0, "&Eopf;"],
                    [0, "&Fopf;"],
                    [0, "&Gopf;"],
                    [1, "&Iopf;"],
                    [0, "&Jopf;"],
                    [0, "&Kopf;"],
                    [0, "&Lopf;"],
                    [0, "&Mopf;"],
                    [1, "&Oopf;"],
                    [3, "&Sopf;"],
                    [0, "&Topf;"],
                    [0, "&Uopf;"],
                    [0, "&Vopf;"],
                    [0, "&Wopf;"],
                    [0, "&Xopf;"],
                    [0, "&Yopf;"],
                    [1, "&aopf;"],
                    [0, "&bopf;"],
                    [0, "&copf;"],
                    [0, "&dopf;"],
                    [0, "&eopf;"],
                    [0, "&fopf;"],
                    [0, "&gopf;"],
                    [0, "&hopf;"],
                    [0, "&iopf;"],
                    [0, "&jopf;"],
                    [0, "&kopf;"],
                    [0, "&lopf;"],
                    [0, "&mopf;"],
                    [0, "&nopf;"],
                    [0, "&oopf;"],
                    [0, "&popf;"],
                    [0, "&qopf;"],
                    [0, "&ropf;"],
                    [0, "&sopf;"],
                    [0, "&topf;"],
                    [0, "&uopf;"],
                    [0, "&vopf;"],
                    [0, "&wopf;"],
                    [0, "&xopf;"],
                    [0, "&yopf;"],
                    [0, "&zopf;"]
                ]))
            }],
            [8906, "&fflig;"],
            [0, "&filig;"],
            [0, "&fllig;"],
            [0, "&ffilig;"],
            [0, "&ffllig;"]
        ]));
  
    }, {}],
    54: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLAttribute = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.DecodingMode = exports.EntityDecoder = exports.encodeHTML5 = exports.encodeHTML4 = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = exports.EncodingMode = exports.EntityLevel = void 0;
        var EntityLevel, EncodingMode, decode_js_1 = require("./decode.js"),
            encode_js_1 = require("./encode.js"),
            escape_js_1 = require("./escape.js");
  
        function decode(e, t) {
            if (void 0 === t && (t = EntityLevel.XML), ("number" == typeof t ? t : t.level) === EntityLevel.HTML) {
                var o = "object" == typeof t ? t.mode : void 0;
                return (0, decode_js_1.decodeHTML)(e, o)
            }
            return (0, decode_js_1.decodeXML)(e)
        }
  
        function decodeStrict(e, t) {
            var o;
            void 0 === t && (t = EntityLevel.XML);
            var r = "number" == typeof t ? {
                level: t
            } : t;
            return null !== (o = r.mode) && void 0 !== o || (r.mode = decode_js_1.DecodingMode.Strict), decode(e, r)
        }
  
        function encode(e, t) {
            void 0 === t && (t = EntityLevel.XML);
            var o = "number" == typeof t ? {
                level: t
            } : t;
            return o.mode === EncodingMode.UTF8 ? (0, escape_js_1.escapeUTF8)(e) : o.mode === EncodingMode.Attribute ? (0, escape_js_1.escapeAttribute)(e) : o.mode === EncodingMode.Text ? (0, escape_js_1.escapeText)(e) : o.level === EntityLevel.HTML ? o.mode === EncodingMode.ASCII ? (0, encode_js_1.encodeNonAsciiHTML)(e) : (0, encode_js_1.encodeHTML)(e) : (0, escape_js_1.encodeXML)(e)
        } ! function (e) {
            e[e.XML = 0] = "XML", e[e.HTML = 1] = "HTML"
        }(EntityLevel = exports.EntityLevel || (exports.EntityLevel = {})),
            function (e) {
                e[e.UTF8 = 0] = "UTF8", e[e.ASCII = 1] = "ASCII", e[e.Extensive = 2] = "Extensive", e[e.Attribute = 3] = "Attribute", e[e.Text = 4] = "Text"
            }(EncodingMode = exports.EncodingMode || (exports.EncodingMode = {})), exports.decode = decode, exports.decodeStrict = decodeStrict, exports.encode = encode;
        var escape_js_2 = require("./escape.js");
        Object.defineProperty(exports, "encodeXML", {
            enumerable: !0,
            get: function () {
                return escape_js_2.encodeXML
            }
        }), Object.defineProperty(exports, "escape", {
            enumerable: !0,
            get: function () {
                return escape_js_2.escape
            }
        }), Object.defineProperty(exports, "escapeUTF8", {
            enumerable: !0,
            get: function () {
                return escape_js_2.escapeUTF8
            }
        }), Object.defineProperty(exports, "escapeAttribute", {
            enumerable: !0,
            get: function () {
                return escape_js_2.escapeAttribute
            }
        }), Object.defineProperty(exports, "escapeText", {
            enumerable: !0,
            get: function () {
                return escape_js_2.escapeText
            }
        });
        var encode_js_2 = require("./encode.js");
        Object.defineProperty(exports, "encodeHTML", {
            enumerable: !0,
            get: function () {
                return encode_js_2.encodeHTML
            }
        }), Object.defineProperty(exports, "encodeNonAsciiHTML", {
            enumerable: !0,
            get: function () {
                return encode_js_2.encodeNonAsciiHTML
            }
        }), Object.defineProperty(exports, "encodeHTML4", {
            enumerable: !0,
            get: function () {
                return encode_js_2.encodeHTML
            }
        }), Object.defineProperty(exports, "encodeHTML5", {
            enumerable: !0,
            get: function () {
                return encode_js_2.encodeHTML
            }
        });
        var decode_js_2 = require("./decode.js");
        Object.defineProperty(exports, "EntityDecoder", {
            enumerable: !0,
            get: function () {
                return decode_js_2.EntityDecoder
            }
        }), Object.defineProperty(exports, "DecodingMode", {
            enumerable: !0,
            get: function () {
                return decode_js_2.DecodingMode
            }
        }), Object.defineProperty(exports, "decodeXML", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeXML
            }
        }), Object.defineProperty(exports, "decodeHTML", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTML
            }
        }), Object.defineProperty(exports, "decodeHTMLStrict", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTMLStrict
            }
        }), Object.defineProperty(exports, "decodeHTMLAttribute", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTMLAttribute
            }
        }), Object.defineProperty(exports, "decodeHTML4", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTML
            }
        }), Object.defineProperty(exports, "decodeHTML5", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTML
            }
        }), Object.defineProperty(exports, "decodeHTML4Strict", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTMLStrict
            }
        }), Object.defineProperty(exports, "decodeHTML5Strict", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeHTMLStrict
            }
        }), Object.defineProperty(exports, "decodeXMLStrict", {
            enumerable: !0,
            get: function () {
                return decode_js_2.decodeXML
            }
        });
  
    }, {
        "./decode.js": 47,
        "./encode.js": 49,
        "./escape.js": 50
    }],
    55: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (t, e, i, s) {
            void 0 === s && (s = i);
            var n = Object.getOwnPropertyDescriptor(e, i);
            n && ("get" in n ? e.__esModule : !n.writable && !n.configurable) || (n = {
                enumerable: !0,
                get: function () {
                    return e[i]
                }
            }), Object.defineProperty(t, s, n)
        } : function (t, e, i, s) {
            void 0 === s && (s = i), t[s] = e[i]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function (t, e) {
                t.default = e
            }),
            __importStar = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var i in t) "default" !== i && Object.prototype.hasOwnProperty.call(t, i) && __createBinding(e, t, i);
                return __setModuleDefault(e, t), e
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.Parser = void 0;
        var Tokenizer_js_1 = __importStar(require("./Tokenizer.js")),
            decode_js_1 = require("entities/lib/decode.js"),
            formTags = new Set(["input", "option", "optgroup", "select", "button", "datalist", "textarea"]),
            pTag = new Set(["p"]),
            tableSectionTags = new Set(["thead", "tbody"]),
            ddtTags = new Set(["dd", "dt"]),
            rtpTags = new Set(["rt", "rp"]),
            openImpliesClose = new Map([
                ["tr", new Set(["tr", "th", "td"])],
                ["th", new Set(["th"])],
                ["td", new Set(["thead", "th", "td"])],
                ["body", new Set(["head", "link", "script"])],
                ["li", new Set(["li"])],
                ["p", pTag],
                ["h1", pTag],
                ["h2", pTag],
                ["h3", pTag],
                ["h4", pTag],
                ["h5", pTag],
                ["h6", pTag],
                ["select", formTags],
                ["input", formTags],
                ["output", formTags],
                ["button", formTags],
                ["datalist", formTags],
                ["textarea", formTags],
                ["option", new Set(["option"])],
                ["optgroup", new Set(["optgroup", "option"])],
                ["dd", ddtTags],
                ["dt", ddtTags],
                ["address", pTag],
                ["article", pTag],
                ["aside", pTag],
                ["blockquote", pTag],
                ["details", pTag],
                ["div", pTag],
                ["dl", pTag],
                ["fieldset", pTag],
                ["figcaption", pTag],
                ["figure", pTag],
                ["footer", pTag],
                ["form", pTag],
                ["header", pTag],
                ["hr", pTag],
                ["main", pTag],
                ["nav", pTag],
                ["ol", pTag],
                ["pre", pTag],
                ["section", pTag],
                ["table", pTag],
                ["ul", pTag],
                ["rt", rtpTags],
                ["rp", rtpTags],
                ["tbody", tableSectionTags],
                ["tfoot", tableSectionTags]
            ]),
            voidElements = new Set(["area", "base", "basefont", "br", "col", "command", "embed", "frame", "hr", "img", "input", "isindex", "keygen", "link", "meta", "param", "source", "track", "wbr"]),
            foreignContextElements = new Set(["math", "svg"]),
            htmlIntegrationElements = new Set(["mi", "mo", "mn", "ms", "mtext", "annotation-xml", "foreignobject", "desc", "title"]),
            reNameEnd = /\s|\//,
            Parser = function () {
                function t(t, e) {
                    var i, s, n, o, a;
                    void 0 === e && (e = {}), this.options = e, this.startIndex = 0, this.endIndex = 0, this.openTagStart = 0, this.tagname = "", this.attribname = "", this.attribvalue = "", this.attribs = null, this.stack = [], this.foreignContext = [], this.buffers = [], this.bufferOffset = 0, this.writeIndex = 0, this.ended = !1, this.cbs = null != t ? t : {}, this.lowerCaseTagNames = null !== (i = e.lowerCaseTags) && void 0 !== i ? i : !e.xmlMode, this.lowerCaseAttributeNames = null !== (s = e.lowerCaseAttributeNames) && void 0 !== s ? s : !e.xmlMode, this.tokenizer = new (null !== (n = e.Tokenizer) && void 0 !== n ? n : Tokenizer_js_1.default)(this.options, this), null === (a = (o = this.cbs).onparserinit) || void 0 === a || a.call(o, this)
                }
                return t.prototype.ontext = function (t, e) {
                    var i, s, n = this.getSlice(t, e);
                    this.endIndex = e - 1, null === (s = (i = this.cbs).ontext) || void 0 === s || s.call(i, n), this.startIndex = e
                }, t.prototype.ontextentity = function (t) {
                    var e, i, s = this.tokenizer.getSectionStart();
                    this.endIndex = s - 1, null === (i = (e = this.cbs).ontext) || void 0 === i || i.call(e, (0, decode_js_1.fromCodePoint)(t)), this.startIndex = s
                }, t.prototype.isVoidElement = function (t) {
                    return !this.options.xmlMode && voidElements.has(t)
                }, t.prototype.onopentagname = function (t, e) {
                    this.endIndex = e;
                    var i = this.getSlice(t, e);
                    this.lowerCaseTagNames && (i = i.toLowerCase()), this.emitOpenTag(i)
                }, t.prototype.emitOpenTag = function (t) {
                    var e, i, s, n;
                    this.openTagStart = this.startIndex, this.tagname = t;
                    var o = !this.options.xmlMode && openImpliesClose.get(t);
                    if (o)
                        for (; this.stack.length > 0 && o.has(this.stack[this.stack.length - 1]);) {
                            var a = this.stack.pop();
                            null === (i = (e = this.cbs).onclosetag) || void 0 === i || i.call(e, a, !0)
                        }
                    this.isVoidElement(t) || (this.stack.push(t), foreignContextElements.has(t) ? this.foreignContext.push(!0) : htmlIntegrationElements.has(t) && this.foreignContext.push(!1)), null === (n = (s = this.cbs).onopentagname) || void 0 === n || n.call(s, t), this.cbs.onopentag && (this.attribs = {})
                }, t.prototype.endOpenTag = function (t) {
                    var e, i;
                    this.startIndex = this.openTagStart, this.attribs && (null === (i = (e = this.cbs).onopentag) || void 0 === i || i.call(e, this.tagname, this.attribs, t), this.attribs = null), this.cbs.onclosetag && this.isVoidElement(this.tagname) && this.cbs.onclosetag(this.tagname, !0), this.tagname = ""
                }, t.prototype.onopentagend = function (t) {
                    this.endIndex = t, this.endOpenTag(!1), this.startIndex = t + 1
                }, t.prototype.onclosetag = function (t, e) {
                    var i, s, n, o, a, r;
                    this.endIndex = e;
                    var h = this.getSlice(t, e);
                    if (this.lowerCaseTagNames && (h = h.toLowerCase()), (foreignContextElements.has(h) || htmlIntegrationElements.has(h)) && this.foreignContext.pop(), this.isVoidElement(h)) this.options.xmlMode || "br" !== h || (null === (s = (i = this.cbs).onopentagname) || void 0 === s || s.call(i, "br"), null === (o = (n = this.cbs).onopentag) || void 0 === o || o.call(n, "br", {}, !0), null === (r = (a = this.cbs).onclosetag) || void 0 === r || r.call(a, "br", !1));
                    else {
                        var l = this.stack.lastIndexOf(h);
                        if (-1 !== l)
                            if (this.cbs.onclosetag)
                                for (var c = this.stack.length - l; c--;) this.cbs.onclosetag(this.stack.pop(), 0 !== c);
                            else this.stack.length = l;
                        else this.options.xmlMode || "p" !== h || (this.emitOpenTag("p"), this.closeCurrentTag(!0))
                    }
                    this.startIndex = e + 1
                }, t.prototype.onselfclosingtag = function (t) {
                    this.endIndex = t, this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1] ? (this.closeCurrentTag(!1), this.startIndex = t + 1) : this.onopentagend(t)
                }, t.prototype.closeCurrentTag = function (t) {
                    var e, i, s = this.tagname;
                    this.endOpenTag(t), this.stack[this.stack.length - 1] === s && (null === (i = (e = this.cbs).onclosetag) || void 0 === i || i.call(e, s, !t), this.stack.pop())
                }, t.prototype.onattribname = function (t, e) {
                    this.startIndex = t;
                    var i = this.getSlice(t, e);
                    this.attribname = this.lowerCaseAttributeNames ? i.toLowerCase() : i
                }, t.prototype.onattribdata = function (t, e) {
                    this.attribvalue += this.getSlice(t, e)
                }, t.prototype.onattribentity = function (t) {
                    this.attribvalue += (0, decode_js_1.fromCodePoint)(t)
                }, t.prototype.onattribend = function (t, e) {
                    var i, s;
                    this.endIndex = e, null === (s = (i = this.cbs).onattribute) || void 0 === s || s.call(i, this.attribname, this.attribvalue, t === Tokenizer_js_1.QuoteType.Double ? '"' : t === Tokenizer_js_1.QuoteType.Single ? "'" : t === Tokenizer_js_1.QuoteType.NoValue ? void 0 : null), this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname) && (this.attribs[this.attribname] = this.attribvalue), this.attribvalue = ""
                }, t.prototype.getInstructionName = function (t) {
                    var e = t.search(reNameEnd),
                        i = e < 0 ? t : t.substr(0, e);
                    return this.lowerCaseTagNames && (i = i.toLowerCase()), i
                }, t.prototype.ondeclaration = function (t, e) {
                    this.endIndex = e;
                    var i = this.getSlice(t, e);
                    if (this.cbs.onprocessinginstruction) {
                        var s = this.getInstructionName(i);
                        this.cbs.onprocessinginstruction("!".concat(s), "!".concat(i))
                    }
                    this.startIndex = e + 1
                }, t.prototype.onprocessinginstruction = function (t, e) {
                    this.endIndex = e;
                    var i = this.getSlice(t, e);
                    if (this.cbs.onprocessinginstruction) {
                        var s = this.getInstructionName(i);
                        this.cbs.onprocessinginstruction("?".concat(s), "?".concat(i))
                    }
                    this.startIndex = e + 1
                }, t.prototype.oncomment = function (t, e, i) {
                    var s, n, o, a;
                    this.endIndex = e, null === (n = (s = this.cbs).oncomment) || void 0 === n || n.call(s, this.getSlice(t, e - i)), null === (a = (o = this.cbs).oncommentend) || void 0 === a || a.call(o), this.startIndex = e + 1
                }, t.prototype.oncdata = function (t, e, i) {
                    var s, n, o, a, r, h, l, c, d, p;
                    this.endIndex = e;
                    var u = this.getSlice(t, e - i);
                    this.options.xmlMode || this.options.recognizeCDATA ? (null === (n = (s = this.cbs).oncdatastart) || void 0 === n || n.call(s), null === (a = (o = this.cbs).ontext) || void 0 === a || a.call(o, u), null === (h = (r = this.cbs).oncdataend) || void 0 === h || h.call(r)) : (null === (c = (l = this.cbs).oncomment) || void 0 === c || c.call(l, "[CDATA[".concat(u, "]]")), null === (p = (d = this.cbs).oncommentend) || void 0 === p || p.call(d)), this.startIndex = e + 1
                }, t.prototype.onend = function () {
                    var t, e;
                    if (this.cbs.onclosetag) {
                        this.endIndex = this.startIndex;
                        for (var i = this.stack.length; i > 0; this.cbs.onclosetag(this.stack[--i], !0));
                    }
                    null === (e = (t = this.cbs).onend) || void 0 === e || e.call(t)
                }, t.prototype.reset = function () {
                    var t, e, i, s;
                    null === (e = (t = this.cbs).onreset) || void 0 === e || e.call(t), this.tokenizer.reset(), this.tagname = "", this.attribname = "", this.attribs = null, this.stack.length = 0, this.startIndex = 0, this.endIndex = 0, null === (s = (i = this.cbs).onparserinit) || void 0 === s || s.call(i, this), this.buffers.length = 0, this.bufferOffset = 0, this.writeIndex = 0, this.ended = !1
                }, t.prototype.parseComplete = function (t) {
                    this.reset(), this.end(t)
                }, t.prototype.getSlice = function (t, e) {
                    for (; t - this.bufferOffset >= this.buffers[0].length;) this.shiftBuffer();
                    for (var i = this.buffers[0].slice(t - this.bufferOffset, e - this.bufferOffset); e - this.bufferOffset > this.buffers[0].length;) this.shiftBuffer(), i += this.buffers[0].slice(0, e - this.bufferOffset);
                    return i
                }, t.prototype.shiftBuffer = function () {
                    this.bufferOffset += this.buffers[0].length, this.writeIndex--, this.buffers.shift()
                }, t.prototype.write = function (t) {
                    var e, i;
                    this.ended ? null === (i = (e = this.cbs).onerror) || void 0 === i || i.call(e, new Error(".write() after done!")) : (this.buffers.push(t), this.tokenizer.running && (this.tokenizer.write(t), this.writeIndex++))
                }, t.prototype.end = function (t) {
                    var e, i;
                    this.ended ? null === (i = (e = this.cbs).onerror) || void 0 === i || i.call(e, new Error(".end() after done!")) : (t && this.write(t), this.ended = !0, this.tokenizer.end())
                }, t.prototype.pause = function () {
                    this.tokenizer.pause()
                }, t.prototype.resume = function () {
                    for (this.tokenizer.resume(); this.tokenizer.running && this.writeIndex < this.buffers.length;) this.tokenizer.write(this.buffers[this.writeIndex++]);
                    this.ended && this.tokenizer.end()
                }, t.prototype.parseChunk = function (t) {
                    this.write(t)
                }, t.prototype.done = function (t) {
                    this.end(t)
                }, t
            }();
        exports.Parser = Parser;
  
    }, {
        "./Tokenizer.js": 56,
        "entities/lib/decode.js": 47
    }],
    56: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.QuoteType = void 0;
        var CharCodes, State, QuoteType, decode_js_1 = require("entities/lib/decode.js");
  
        function isWhitespace(t) {
            return t === CharCodes.Space || t === CharCodes.NewLine || t === CharCodes.Tab || t === CharCodes.FormFeed || t === CharCodes.CarriageReturn
        }
  
        function isEndOfTagSection(t) {
            return t === CharCodes.Slash || t === CharCodes.Gt || isWhitespace(t)
        }
  
        function isNumber(t) {
            return t >= CharCodes.Zero && t <= CharCodes.Nine
        }
  
        function isASCIIAlpha(t) {
            return t >= CharCodes.LowerA && t <= CharCodes.LowerZ || t >= CharCodes.UpperA && t <= CharCodes.UpperZ
        }
  
        function isHexDigit(t) {
            return t >= CharCodes.UpperA && t <= CharCodes.UpperF || t >= CharCodes.LowerA && t <= CharCodes.LowerF
        } ! function (t) {
            t[t.Tab = 9] = "Tab", t[t.NewLine = 10] = "NewLine", t[t.FormFeed = 12] = "FormFeed", t[t.CarriageReturn = 13] = "CarriageReturn", t[t.Space = 32] = "Space", t[t.ExclamationMark = 33] = "ExclamationMark", t[t.Number = 35] = "Number", t[t.Amp = 38] = "Amp", t[t.SingleQuote = 39] = "SingleQuote", t[t.DoubleQuote = 34] = "DoubleQuote", t[t.Dash = 45] = "Dash", t[t.Slash = 47] = "Slash", t[t.Zero = 48] = "Zero", t[t.Nine = 57] = "Nine", t[t.Semi = 59] = "Semi", t[t.Lt = 60] = "Lt", t[t.Eq = 61] = "Eq", t[t.Gt = 62] = "Gt", t[t.Questionmark = 63] = "Questionmark", t[t.UpperA = 65] = "UpperA", t[t.LowerA = 97] = "LowerA", t[t.UpperF = 70] = "UpperF", t[t.LowerF = 102] = "LowerF", t[t.UpperZ = 90] = "UpperZ", t[t.LowerZ = 122] = "LowerZ", t[t.LowerX = 120] = "LowerX", t[t.OpeningSquareBracket = 91] = "OpeningSquareBracket"
        }(CharCodes || (CharCodes = {})),
            function (t) {
                t[t.Text = 1] = "Text", t[t.BeforeTagName = 2] = "BeforeTagName", t[t.InTagName = 3] = "InTagName", t[t.InSelfClosingTag = 4] = "InSelfClosingTag", t[t.BeforeClosingTagName = 5] = "BeforeClosingTagName", t[t.InClosingTagName = 6] = "InClosingTagName", t[t.AfterClosingTagName = 7] = "AfterClosingTagName", t[t.BeforeAttributeName = 8] = "BeforeAttributeName", t[t.InAttributeName = 9] = "InAttributeName", t[t.AfterAttributeName = 10] = "AfterAttributeName", t[t.BeforeAttributeValue = 11] = "BeforeAttributeValue", t[t.InAttributeValueDq = 12] = "InAttributeValueDq", t[t.InAttributeValueSq = 13] = "InAttributeValueSq", t[t.InAttributeValueNq = 14] = "InAttributeValueNq", t[t.BeforeDeclaration = 15] = "BeforeDeclaration", t[t.InDeclaration = 16] = "InDeclaration", t[t.InProcessingInstruction = 17] = "InProcessingInstruction", t[t.BeforeComment = 18] = "BeforeComment", t[t.CDATASequence = 19] = "CDATASequence", t[t.InSpecialComment = 20] = "InSpecialComment", t[t.InCommentLike = 21] = "InCommentLike", t[t.BeforeSpecialS = 22] = "BeforeSpecialS", t[t.SpecialStartSequence = 23] = "SpecialStartSequence", t[t.InSpecialTag = 24] = "InSpecialTag", t[t.BeforeEntity = 25] = "BeforeEntity", t[t.BeforeNumericEntity = 26] = "BeforeNumericEntity", t[t.InNamedEntity = 27] = "InNamedEntity", t[t.InNumericEntity = 28] = "InNumericEntity", t[t.InHexEntity = 29] = "InHexEntity"
            }(State || (State = {})),
            function (t) {
                t[t.NoValue = 0] = "NoValue", t[t.Unquoted = 1] = "Unquoted", t[t.Single = 2] = "Single", t[t.Double = 3] = "Double"
            }(QuoteType = exports.QuoteType || (exports.QuoteType = {}));
        var Sequences = {
            Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),
            CdataEnd: new Uint8Array([93, 93, 62]),
            CommentEnd: new Uint8Array([45, 45, 62]),
            ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),
            StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),
            TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101])
        },
            Tokenizer = function () {
                function t(t, e) {
                    var i = t.xmlMode,
                        s = void 0 !== i && i,
                        a = t.decodeEntities,
                        n = void 0 === a || a;
                    this.cbs = e, this.state = State.Text, this.buffer = "", this.sectionStart = 0, this.index = 0, this.baseState = State.Text, this.isSpecial = !1, this.running = !0, this.offset = 0, this.currentSequence = void 0, this.sequenceIndex = 0, this.trieIndex = 0, this.trieCurrent = 0, this.entityResult = 0, this.entityExcess = 0, this.xmlMode = s, this.decodeEntities = n, this.entityTrie = s ? decode_js_1.xmlDecodeTree : decode_js_1.htmlDecodeTree
                }
                return t.prototype.reset = function () {
                    this.state = State.Text, this.buffer = "", this.sectionStart = 0, this.index = 0, this.baseState = State.Text, this.currentSequence = void 0, this.running = !0, this.offset = 0
                }, t.prototype.write = function (t) {
                    this.offset += this.buffer.length, this.buffer = t, this.parse()
                }, t.prototype.end = function () {
                    this.running && this.finish()
                }, t.prototype.pause = function () {
                    this.running = !1
                }, t.prototype.resume = function () {
                    this.running = !0, this.index < this.buffer.length + this.offset && this.parse()
                }, t.prototype.getIndex = function () {
                    return this.index
                }, t.prototype.getSectionStart = function () {
                    return this.sectionStart
                }, t.prototype.stateText = function (t) {
                    t === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt) ? (this.index > this.sectionStart && this.cbs.ontext(this.sectionStart, this.index), this.state = State.BeforeTagName, this.sectionStart = this.index) : this.decodeEntities && t === CharCodes.Amp && (this.state = State.BeforeEntity)
                }, t.prototype.stateSpecialStartSequence = function (t) {
                    var e = this.sequenceIndex === this.currentSequence.length;
                    if (e ? isEndOfTagSection(t) : (32 | t) === this.currentSequence[this.sequenceIndex]) {
                        if (!e) return void this.sequenceIndex++
                    } else this.isSpecial = !1;
                    this.sequenceIndex = 0, this.state = State.InTagName, this.stateInTagName(t)
                }, t.prototype.stateInSpecialTag = function (t) {
                    if (this.sequenceIndex === this.currentSequence.length) {
                        if (t === CharCodes.Gt || isWhitespace(t)) {
                            var e = this.index - this.currentSequence.length;
                            if (this.sectionStart < e) {
                                var i = this.index;
                                this.index = e, this.cbs.ontext(this.sectionStart, e), this.index = i
                            }
                            return this.isSpecial = !1, this.sectionStart = e + 2, void this.stateInClosingTagName(t)
                        }
                        this.sequenceIndex = 0
                    } (32 | t) === this.currentSequence[this.sequenceIndex] ? this.sequenceIndex += 1 : 0 === this.sequenceIndex ? this.currentSequence === Sequences.TitleEnd ? this.decodeEntities && t === CharCodes.Amp && (this.state = State.BeforeEntity) : this.fastForwardTo(CharCodes.Lt) && (this.sequenceIndex = 1) : this.sequenceIndex = Number(t === CharCodes.Lt)
                }, t.prototype.stateCDATASequence = function (t) {
                    t === Sequences.Cdata[this.sequenceIndex] ? ++this.sequenceIndex === Sequences.Cdata.length && (this.state = State.InCommentLike, this.currentSequence = Sequences.CdataEnd, this.sequenceIndex = 0, this.sectionStart = this.index + 1) : (this.sequenceIndex = 0, this.state = State.InDeclaration, this.stateInDeclaration(t))
                }, t.prototype.fastForwardTo = function (t) {
                    for (; ++this.index < this.buffer.length + this.offset;)
                        if (this.buffer.charCodeAt(this.index - this.offset) === t) return !0;
                    return this.index = this.buffer.length + this.offset - 1, !1
                }, t.prototype.stateInCommentLike = function (t) {
                    t === this.currentSequence[this.sequenceIndex] ? ++this.sequenceIndex === this.currentSequence.length && (this.currentSequence === Sequences.CdataEnd ? this.cbs.oncdata(this.sectionStart, this.index, 2) : this.cbs.oncomment(this.sectionStart, this.index, 2), this.sequenceIndex = 0, this.sectionStart = this.index + 1, this.state = State.Text) : 0 === this.sequenceIndex ? this.fastForwardTo(this.currentSequence[0]) && (this.sequenceIndex = 1) : t !== this.currentSequence[this.sequenceIndex - 1] && (this.sequenceIndex = 0)
                }, t.prototype.isTagStartChar = function (t) {
                    return this.xmlMode ? !isEndOfTagSection(t) : isASCIIAlpha(t)
                }, t.prototype.startSpecial = function (t, e) {
                    this.isSpecial = !0, this.currentSequence = t, this.sequenceIndex = e, this.state = State.SpecialStartSequence
                }, t.prototype.stateBeforeTagName = function (t) {
                    if (t === CharCodes.ExclamationMark) this.state = State.BeforeDeclaration, this.sectionStart = this.index + 1;
                    else if (t === CharCodes.Questionmark) this.state = State.InProcessingInstruction, this.sectionStart = this.index + 1;
                    else if (this.isTagStartChar(t)) {
                        var e = 32 | t;
                        this.sectionStart = this.index, this.xmlMode || e !== Sequences.TitleEnd[2] ? this.state = this.xmlMode || e !== Sequences.ScriptEnd[2] ? State.InTagName : State.BeforeSpecialS : this.startSpecial(Sequences.TitleEnd, 3)
                    } else t === CharCodes.Slash ? this.state = State.BeforeClosingTagName : (this.state = State.Text, this.stateText(t))
                }, t.prototype.stateInTagName = function (t) {
                    isEndOfTagSection(t) && (this.cbs.onopentagname(this.sectionStart, this.index), this.sectionStart = -1, this.state = State.BeforeAttributeName, this.stateBeforeAttributeName(t))
                }, t.prototype.stateBeforeClosingTagName = function (t) {
                    isWhitespace(t) || (t === CharCodes.Gt ? this.state = State.Text : (this.state = this.isTagStartChar(t) ? State.InClosingTagName : State.InSpecialComment, this.sectionStart = this.index))
                }, t.prototype.stateInClosingTagName = function (t) {
                    (t === CharCodes.Gt || isWhitespace(t)) && (this.cbs.onclosetag(this.sectionStart, this.index), this.sectionStart = -1, this.state = State.AfterClosingTagName, this.stateAfterClosingTagName(t))
                }, t.prototype.stateAfterClosingTagName = function (t) {
                    (t === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) && (this.state = State.Text, this.baseState = State.Text, this.sectionStart = this.index + 1)
                }, t.prototype.stateBeforeAttributeName = function (t) {
                    t === CharCodes.Gt ? (this.cbs.onopentagend(this.index), this.isSpecial ? (this.state = State.InSpecialTag, this.sequenceIndex = 0) : this.state = State.Text, this.baseState = this.state, this.sectionStart = this.index + 1) : t === CharCodes.Slash ? this.state = State.InSelfClosingTag : isWhitespace(t) || (this.state = State.InAttributeName, this.sectionStart = this.index)
                }, t.prototype.stateInSelfClosingTag = function (t) {
                    t === CharCodes.Gt ? (this.cbs.onselfclosingtag(this.index), this.state = State.Text, this.baseState = State.Text, this.sectionStart = this.index + 1, this.isSpecial = !1) : isWhitespace(t) || (this.state = State.BeforeAttributeName, this.stateBeforeAttributeName(t))
                }, t.prototype.stateInAttributeName = function (t) {
                    (t === CharCodes.Eq || isEndOfTagSection(t)) && (this.cbs.onattribname(this.sectionStart, this.index), this.sectionStart = -1, this.state = State.AfterAttributeName, this.stateAfterAttributeName(t))
                }, t.prototype.stateAfterAttributeName = function (t) {
                    t === CharCodes.Eq ? this.state = State.BeforeAttributeValue : t === CharCodes.Slash || t === CharCodes.Gt ? (this.cbs.onattribend(QuoteType.NoValue, this.index), this.state = State.BeforeAttributeName, this.stateBeforeAttributeName(t)) : isWhitespace(t) || (this.cbs.onattribend(QuoteType.NoValue, this.index), this.state = State.InAttributeName, this.sectionStart = this.index)
                }, t.prototype.stateBeforeAttributeValue = function (t) {
                    t === CharCodes.DoubleQuote ? (this.state = State.InAttributeValueDq, this.sectionStart = this.index + 1) : t === CharCodes.SingleQuote ? (this.state = State.InAttributeValueSq, this.sectionStart = this.index + 1) : isWhitespace(t) || (this.sectionStart = this.index, this.state = State.InAttributeValueNq, this.stateInAttributeValueNoQuotes(t))
                }, t.prototype.handleInAttributeValue = function (t, e) {
                    t === e || !this.decodeEntities && this.fastForwardTo(e) ? (this.cbs.onattribdata(this.sectionStart, this.index), this.sectionStart = -1, this.cbs.onattribend(e === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index), this.state = State.BeforeAttributeName) : this.decodeEntities && t === CharCodes.Amp && (this.baseState = this.state, this.state = State.BeforeEntity)
                }, t.prototype.stateInAttributeValueDoubleQuotes = function (t) {
                    this.handleInAttributeValue(t, CharCodes.DoubleQuote)
                }, t.prototype.stateInAttributeValueSingleQuotes = function (t) {
                    this.handleInAttributeValue(t, CharCodes.SingleQuote)
                }, t.prototype.stateInAttributeValueNoQuotes = function (t) {
                    isWhitespace(t) || t === CharCodes.Gt ? (this.cbs.onattribdata(this.sectionStart, this.index), this.sectionStart = -1, this.cbs.onattribend(QuoteType.Unquoted, this.index), this.state = State.BeforeAttributeName, this.stateBeforeAttributeName(t)) : this.decodeEntities && t === CharCodes.Amp && (this.baseState = this.state, this.state = State.BeforeEntity)
                }, t.prototype.stateBeforeDeclaration = function (t) {
                    t === CharCodes.OpeningSquareBracket ? (this.state = State.CDATASequence, this.sequenceIndex = 0) : this.state = t === CharCodes.Dash ? State.BeforeComment : State.InDeclaration
                }, t.prototype.stateInDeclaration = function (t) {
                    (t === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) && (this.cbs.ondeclaration(this.sectionStart, this.index), this.state = State.Text, this.sectionStart = this.index + 1)
                }, t.prototype.stateInProcessingInstruction = function (t) {
                    (t === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) && (this.cbs.onprocessinginstruction(this.sectionStart, this.index), this.state = State.Text, this.sectionStart = this.index + 1)
                }, t.prototype.stateBeforeComment = function (t) {
                    t === CharCodes.Dash ? (this.state = State.InCommentLike, this.currentSequence = Sequences.CommentEnd, this.sequenceIndex = 2, this.sectionStart = this.index + 1) : this.state = State.InDeclaration
                }, t.prototype.stateInSpecialComment = function (t) {
                    (t === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) && (this.cbs.oncomment(this.sectionStart, this.index, 0), this.state = State.Text, this.sectionStart = this.index + 1)
                }, t.prototype.stateBeforeSpecialS = function (t) {
                    var e = 32 | t;
                    e === Sequences.ScriptEnd[3] ? this.startSpecial(Sequences.ScriptEnd, 4) : e === Sequences.StyleEnd[3] ? this.startSpecial(Sequences.StyleEnd, 4) : (this.state = State.InTagName, this.stateInTagName(t))
                }, t.prototype.stateBeforeEntity = function (t) {
                    this.entityExcess = 1, this.entityResult = 0, t === CharCodes.Number ? this.state = State.BeforeNumericEntity : t === CharCodes.Amp || (this.trieIndex = 0, this.trieCurrent = this.entityTrie[0], this.state = State.InNamedEntity, this.stateInNamedEntity(t))
                }, t.prototype.stateInNamedEntity = function (t) {
                    if (this.entityExcess += 1, this.trieIndex = (0, decode_js_1.determineBranch)(this.entityTrie, this.trieCurrent, this.trieIndex + 1, t), this.trieIndex < 0) return this.emitNamedEntity(), void this.index--;
                    this.trieCurrent = this.entityTrie[this.trieIndex];
                    var e = this.trieCurrent & decode_js_1.BinTrieFlags.VALUE_LENGTH;
                    if (e) {
                        var i = (e >> 14) - 1;
                        if (this.allowLegacyEntity() || t === CharCodes.Semi) {
                            var s = this.index - this.entityExcess + 1;
                            s > this.sectionStart && this.emitPartial(this.sectionStart, s), this.entityResult = this.trieIndex, this.trieIndex += i, this.entityExcess = 0, this.sectionStart = this.index + 1, 0 === i && this.emitNamedEntity()
                        } else this.trieIndex += i
                    }
                }, t.prototype.emitNamedEntity = function () {
                    if (this.state = this.baseState, 0 !== this.entityResult) switch ((this.entityTrie[this.entityResult] & decode_js_1.BinTrieFlags.VALUE_LENGTH) >> 14) {
                        case 1:
                            this.emitCodePoint(this.entityTrie[this.entityResult] & ~decode_js_1.BinTrieFlags.VALUE_LENGTH);
                            break;
                        case 2:
                            this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
                            break;
                        case 3:
                            this.emitCodePoint(this.entityTrie[this.entityResult + 1]), this.emitCodePoint(this.entityTrie[this.entityResult + 2])
                    }
                }, t.prototype.stateBeforeNumericEntity = function (t) {
                    (32 | t) === CharCodes.LowerX ? (this.entityExcess++, this.state = State.InHexEntity) : (this.state = State.InNumericEntity, this.stateInNumericEntity(t))
                }, t.prototype.emitNumericEntity = function (t) {
                    var e = this.index - this.entityExcess - 1;
                    e + 2 + Number(this.state === State.InHexEntity) !== this.index && (e > this.sectionStart && this.emitPartial(this.sectionStart, e), this.sectionStart = this.index + Number(t), this.emitCodePoint((0, decode_js_1.replaceCodePoint)(this.entityResult))), this.state = this.baseState
                }, t.prototype.stateInNumericEntity = function (t) {
                    t === CharCodes.Semi ? this.emitNumericEntity(!0) : isNumber(t) ? (this.entityResult = 10 * this.entityResult + (t - CharCodes.Zero), this.entityExcess++) : (this.allowLegacyEntity() ? this.emitNumericEntity(!1) : this.state = this.baseState, this.index--)
                }, t.prototype.stateInHexEntity = function (t) {
                    t === CharCodes.Semi ? this.emitNumericEntity(!0) : isNumber(t) ? (this.entityResult = 16 * this.entityResult + (t - CharCodes.Zero), this.entityExcess++) : isHexDigit(t) ? (this.entityResult = 16 * this.entityResult + ((32 | t) - CharCodes.LowerA + 10), this.entityExcess++) : (this.allowLegacyEntity() ? this.emitNumericEntity(!1) : this.state = this.baseState, this.index--)
                }, t.prototype.allowLegacyEntity = function () {
                    return !this.xmlMode && (this.baseState === State.Text || this.baseState === State.InSpecialTag)
                }, t.prototype.cleanup = function () {
                    this.running && this.sectionStart !== this.index && (this.state === State.Text || this.state === State.InSpecialTag && 0 === this.sequenceIndex ? (this.cbs.ontext(this.sectionStart, this.index), this.sectionStart = this.index) : this.state !== State.InAttributeValueDq && this.state !== State.InAttributeValueSq && this.state !== State.InAttributeValueNq || (this.cbs.onattribdata(this.sectionStart, this.index), this.sectionStart = this.index))
                }, t.prototype.shouldContinue = function () {
                    return this.index < this.buffer.length + this.offset && this.running
                }, t.prototype.parse = function () {
                    for (; this.shouldContinue();) {
                        var t = this.buffer.charCodeAt(this.index - this.offset);
                        switch (this.state) {
                            case State.Text:
                                this.stateText(t);
                                break;
                            case State.SpecialStartSequence:
                                this.stateSpecialStartSequence(t);
                                break;
                            case State.InSpecialTag:
                                this.stateInSpecialTag(t);
                                break;
                            case State.CDATASequence:
                                this.stateCDATASequence(t);
                                break;
                            case State.InAttributeValueDq:
                                this.stateInAttributeValueDoubleQuotes(t);
                                break;
                            case State.InAttributeName:
                                this.stateInAttributeName(t);
                                break;
                            case State.InCommentLike:
                                this.stateInCommentLike(t);
                                break;
                            case State.InSpecialComment:
                                this.stateInSpecialComment(t);
                                break;
                            case State.BeforeAttributeName:
                                this.stateBeforeAttributeName(t);
                                break;
                            case State.InTagName:
                                this.stateInTagName(t);
                                break;
                            case State.InClosingTagName:
                                this.stateInClosingTagName(t);
                                break;
                            case State.BeforeTagName:
                                this.stateBeforeTagName(t);
                                break;
                            case State.AfterAttributeName:
                                this.stateAfterAttributeName(t);
                                break;
                            case State.InAttributeValueSq:
                                this.stateInAttributeValueSingleQuotes(t);
                                break;
                            case State.BeforeAttributeValue:
                                this.stateBeforeAttributeValue(t);
                                break;
                            case State.BeforeClosingTagName:
                                this.stateBeforeClosingTagName(t);
                                break;
                            case State.AfterClosingTagName:
                                this.stateAfterClosingTagName(t);
                                break;
                            case State.BeforeSpecialS:
                                this.stateBeforeSpecialS(t);
                                break;
                            case State.InAttributeValueNq:
                                this.stateInAttributeValueNoQuotes(t);
                                break;
                            case State.InSelfClosingTag:
                                this.stateInSelfClosingTag(t);
                                break;
                            case State.InDeclaration:
                                this.stateInDeclaration(t);
                                break;
                            case State.BeforeDeclaration:
                                this.stateBeforeDeclaration(t);
                                break;
                            case State.BeforeComment:
                                this.stateBeforeComment(t);
                                break;
                            case State.InProcessingInstruction:
                                this.stateInProcessingInstruction(t);
                                break;
                            case State.InNamedEntity:
                                this.stateInNamedEntity(t);
                                break;
                            case State.BeforeEntity:
                                this.stateBeforeEntity(t);
                                break;
                            case State.InHexEntity:
                                this.stateInHexEntity(t);
                                break;
                            case State.InNumericEntity:
                                this.stateInNumericEntity(t);
                                break;
                            default:
                                this.stateBeforeNumericEntity(t)
                        }
                        this.index++
                    }
                    this.cleanup()
                }, t.prototype.finish = function () {
                    this.state === State.InNamedEntity && this.emitNamedEntity(), this.sectionStart < this.index && this.handleTrailingData(), this.cbs.onend()
                }, t.prototype.handleTrailingData = function () {
                    var t = this.buffer.length + this.offset;
                    this.state === State.InCommentLike ? this.currentSequence === Sequences.CdataEnd ? this.cbs.oncdata(this.sectionStart, t, 0) : this.cbs.oncomment(this.sectionStart, t, 0) : this.state === State.InNumericEntity && this.allowLegacyEntity() ? this.emitNumericEntity(!1) : this.state === State.InHexEntity && this.allowLegacyEntity() ? this.emitNumericEntity(!1) : this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName || this.cbs.ontext(this.sectionStart, t)
                }, t.prototype.emitPartial = function (t, e) {
                    this.baseState !== State.Text && this.baseState !== State.InSpecialTag ? this.cbs.onattribdata(t, e) : this.cbs.ontext(t, e)
                }, t.prototype.emitCodePoint = function (t) {
                    this.baseState !== State.Text && this.baseState !== State.InSpecialTag ? this.cbs.onattribentity(t) : this.cbs.ontextentity(t)
                }, t
            }();
        exports.default = Tokenizer;
  
    }, {
        "entities/lib/decode.js": 47
    }],
    57: [function (require, module, exports) {
        "use strict";
        var __createBinding = this && this.__createBinding || (Object.create ? function (e, r, t, o) {
            void 0 === o && (o = t);
            var n = Object.getOwnPropertyDescriptor(r, t);
            n && ("get" in n ? r.__esModule : !n.writable && !n.configurable) || (n = {
                enumerable: !0,
                get: function () {
                    return r[t]
                }
            }), Object.defineProperty(e, o, n)
        } : function (e, r, t, o) {
            void 0 === o && (o = t), e[o] = r[t]
        }),
            __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, r) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: r
                })
            } : function (e, r) {
                e.default = r
            }),
            __importStar = this && this.__importStar || function (e) {
                if (e && e.__esModule) return e;
                var r = {};
                if (null != e)
                    for (var t in e) "default" !== t && Object.prototype.hasOwnProperty.call(e, t) && __createBinding(r, e, t);
                return __setModuleDefault(r, e), r
            },
            __importDefault = this && this.__importDefault || function (e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.DomUtils = exports.parseFeed = exports.getFeed = exports.ElementType = exports.Tokenizer = exports.createDomStream = exports.parseDOM = exports.parseDocument = exports.DefaultHandler = exports.DomHandler = exports.Parser = void 0;
        var Parser_js_1 = require("./Parser.js"),
            Parser_js_2 = require("./Parser.js");
        Object.defineProperty(exports, "Parser", {
            enumerable: !0,
            get: function () {
                return Parser_js_2.Parser
            }
        });
        var domhandler_1 = require("domhandler"),
            domhandler_2 = require("domhandler");
  
        function parseDocument(e, r) {
            var t = new domhandler_1.DomHandler(void 0, r);
            return new Parser_js_1.Parser(t, r).end(e), t.root
        }
  
        function parseDOM(e, r) {
            return parseDocument(e, r).children
        }
  
        function createDomStream(e, r, t) {
            var o = new domhandler_1.DomHandler(e, r, t);
            return new Parser_js_1.Parser(o, r)
        }
        Object.defineProperty(exports, "DomHandler", {
            enumerable: !0,
            get: function () {
                return domhandler_2.DomHandler
            }
        }), Object.defineProperty(exports, "DefaultHandler", {
            enumerable: !0,
            get: function () {
                return domhandler_2.DomHandler
            }
        }), exports.parseDocument = parseDocument, exports.parseDOM = parseDOM, exports.createDomStream = createDomStream;
        var Tokenizer_js_1 = require("./Tokenizer.js");
        Object.defineProperty(exports, "Tokenizer", {
            enumerable: !0,
            get: function () {
                return __importDefault(Tokenizer_js_1).default
            }
        }), exports.ElementType = __importStar(require("domelementtype"));
        var domutils_1 = require("domutils"),
            domutils_2 = require("domutils");
        Object.defineProperty(exports, "getFeed", {
            enumerable: !0,
            get: function () {
                return domutils_2.getFeed
            }
        });
        var parseFeedDefaultOptions = {
            xmlMode: !0
        };
  
        function parseFeed(e, r) {
            return void 0 === r && (r = parseFeedDefaultOptions), (0, domutils_1.getFeed)(parseDOM(e, r))
        }
        exports.parseFeed = parseFeed, exports.DomUtils = __importStar(require("domutils"));
  
    }, {
        "./Parser.js": 55,
        "./Tokenizer.js": 56,
        "domelementtype": 36,
        "domhandler": 37,
        "domutils": 41
    }],
    58: [function (require, module, exports) {
        (function (global) {
            (function () {
                ! function (e) {
                    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e();
                    else if ("function" == typeof define && define.amd) define([], e);
                    else {
                        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).jsonpath = e()
                    }
                }(function () {
                    return function e(t, n, r) {
                        function i(o, s) {
                            if (!n[o]) {
                                if (!t[o]) {
                                    var c = "function" == typeof require && require;
                                    if (!s && c) return c(o, !0);
                                    if (a) return a(o, !0);
                                    var u = new Error("Cannot find module '" + o + "'");
                                    throw u.code = "MODULE_NOT_FOUND", u
                                }
                                var l = n[o] = {
                                    exports: {}
                                };
                                t[o][0].call(l.exports, function (e) {
                                    var n = t[o][1][e];
                                    return i(n || e)
                                }, l, l.exports, e, t, n, r)
                            }
                            return n[o].exports
                        }
                        for (var a = "function" == typeof require && require, o = 0; o < r.length; o++) i(r[o]);
                        return i
                    }({
                        "./aesprim": [function (e, t, n) {
                            ! function (e, t) {
                                "use strict";
                                t(void 0 !== n ? n : e.esprima = {})
                            }(this, function (e) {
                                "use strict";
                                var t, n, r, i, a, o, s, c, u, l, p, f, h, d, y, m, g, v;
  
                                function S(e, t) {
                                    if (!e) throw new Error("ASSERT: " + t)
                                }
  
                                function E(e) {
                                    return e >= 48 && e <= 57
                                }
  
                                function b(e) {
                                    return "0123456789abcdefABCDEF".indexOf(e) >= 0
                                }
  
                                function x(e) {
                                    return "01234567".indexOf(e) >= 0
                                }
  
                                function k(e) {
                                    return 32 === e || 9 === e || 11 === e || 12 === e || 160 === e || e >= 5760 && [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279].indexOf(e) >= 0
                                }
  
                                function I(e) {
                                    return 10 === e || 13 === e || 8232 === e || 8233 === e
                                }
  
                                function _(e) {
                                    return 64 == e || 36 === e || 95 === e || e >= 65 && e <= 90 || e >= 97 && e <= 122 || 92 === e || e >= 128 && s.NonAsciiIdentifierStart.test(String.fromCharCode(e))
                                }
  
                                function w(e) {
                                    return 36 === e || 95 === e || e >= 65 && e <= 90 || e >= 97 && e <= 122 || e >= 48 && e <= 57 || 92 === e || e >= 128 && s.NonAsciiIdentifierPart.test(String.fromCharCode(e))
                                }
  
                                function C(e) {
                                    switch (e) {
                                        case "implements":
                                        case "interface":
                                        case "package":
                                        case "private":
                                        case "protected":
                                        case "public":
                                        case "static":
                                        case "yield":
                                        case "let":
                                            return !0;
                                        default:
                                            return !1
                                    }
                                }
  
                                function O(e) {
                                    return "eval" === e || "arguments" === e
                                }
  
                                function N(e, t, n, r, i) {
                                    var a;
                                    S("number" == typeof n, "Comment must have valid position"), g.lastCommentStart >= n || (g.lastCommentStart = n, a = {
                                        type: e,
                                        value: t
                                    }, v.range && (a.range = [n, r]), v.loc && (a.loc = i), v.comments.push(a), v.attachComment && (v.leadingComments.push(a), v.trailingComments.push(a)))
                                }
  
                                function T(e) {
                                    var t, n, r, i;
                                    for (t = p - e, n = {
                                        start: {
                                            line: f,
                                            column: p - h - e
                                        }
                                    }; p < d;)
                                        if (r = u.charCodeAt(p), ++p, I(r)) return v.comments && (i = u.slice(t + e, p - 1), n.end = {
                                            line: f,
                                            column: p - h - 1
                                        }, N("Line", i, t, p - 1, n)), 13 === r && 10 === u.charCodeAt(p) && ++p, ++f, void (h = p);
                                    v.comments && (i = u.slice(t + e, p), n.end = {
                                        line: f,
                                        column: p - h
                                    }, N("Line", i, t, p, n))
                                }
  
                                function A() {
                                    var e, t, n, r;
                                    for (v.comments && (e = p - 2, t = {
                                        start: {
                                            line: f,
                                            column: p - h - 2
                                        }
                                    }); p < d;)
                                        if (I(n = u.charCodeAt(p))) 13 === n && 10 === u.charCodeAt(p + 1) && ++p, ++f, h = ++p, p >= d && W({}, o.UnexpectedToken, "ILLEGAL");
                                        else if (42 === n) {
                                            if (47 === u.charCodeAt(p + 1)) return ++p, ++p, void (v.comments && (r = u.slice(e + 2, p - 2), t.end = {
                                                line: f,
                                                column: p - h
                                            }, N("Block", r, e, p, t)));
                                            ++p
                                        } else ++p;
                                    W({}, o.UnexpectedToken, "ILLEGAL")
                                }
  
                                function L() {
                                    var e, t;
                                    for (t = 0 === p; p < d;)
                                        if (k(e = u.charCodeAt(p))) ++p;
                                        else if (I(e)) ++p, 13 === e && 10 === u.charCodeAt(p) && ++p, ++f, h = p, t = !0;
                                        else if (47 === e)
                                            if (47 === (e = u.charCodeAt(p + 1))) ++p, ++p, T(2), t = !0;
                                            else {
                                                if (42 !== e) break;
                                                ++p, ++p, A()
                                            }
                                        else if (t && 45 === e) {
                                            if (45 !== u.charCodeAt(p + 1) || 62 !== u.charCodeAt(p + 2)) break;
                                            p += 3, T(3)
                                        } else {
                                            if (60 !== e) break;
                                            if ("!--" !== u.slice(p + 1, p + 4)) break;
                                            ++p, ++p, ++p, ++p, T(4)
                                        }
                                }
  
                                function P(e) {
                                    var t, n, r, i = 0;
                                    for (n = "u" === e ? 4 : 2, t = 0; t < n; ++t) {
                                        if (!(p < d && b(u[p]))) return "";
                                        r = u[p++], i = 16 * i + "0123456789abcdef".indexOf(r.toLowerCase())
                                    }
                                    return String.fromCharCode(i)
                                }
  
                                function R() {
                                    var e, t;
                                    for (e = u.charCodeAt(p++), t = String.fromCharCode(e), 92 === e && (117 !== u.charCodeAt(p) && W({}, o.UnexpectedToken, "ILLEGAL"), ++p, (e = P("u")) && "\\" !== e && _(e.charCodeAt(0)) || W({}, o.UnexpectedToken, "ILLEGAL"), t = e); p < d && w(e = u.charCodeAt(p));) ++p, t += String.fromCharCode(e), 92 === e && (t = t.substr(0, t.length - 1), 117 !== u.charCodeAt(p) && W({}, o.UnexpectedToken, "ILLEGAL"), ++p, (e = P("u")) && "\\" !== e && w(e.charCodeAt(0)) || W({}, o.UnexpectedToken, "ILLEGAL"), t += e);
                                    return t
                                }
  
                                function D() {
                                    var e, n;
                                    return e = p, {
                                        type: 1 === (n = 92 === u.charCodeAt(p) ? R() : function () {
                                            var e, t;
                                            for (e = p++; p < d;) {
                                                if (92 === (t = u.charCodeAt(p))) return p = e, R();
                                                if (!w(t)) break;
                                                ++p
                                            }
                                            return u.slice(e, p)
                                        }()).length ? t.Identifier : function (e) {
                                            if (l && C(e)) return !0;
                                            switch (e.length) {
                                                case 2:
                                                    return "if" === e || "in" === e || "do" === e;
                                                case 3:
                                                    return "var" === e || "for" === e || "new" === e || "try" === e || "let" === e;
                                                case 4:
                                                    return "this" === e || "else" === e || "case" === e || "void" === e || "with" === e || "enum" === e;
                                                case 5:
                                                    return "while" === e || "break" === e || "catch" === e || "throw" === e || "const" === e || "yield" === e || "class" === e || "super" === e;
                                                case 6:
                                                    return "return" === e || "typeof" === e || "delete" === e || "switch" === e || "export" === e || "import" === e;
                                                case 7:
                                                    return "default" === e || "finally" === e || "extends" === e;
                                                case 8:
                                                    return "function" === e || "continue" === e || "debugger" === e;
                                                case 10:
                                                    return "instanceof" === e;
                                                default:
                                                    return !1
                                            }
                                        }(n) ? t.Keyword : "null" === n ? t.NullLiteral : "true" === n || "false" === n ? t.BooleanLiteral : t.Identifier,
                                        value: n,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: e,
                                        end: p
                                    }
                                }
  
                                function j() {
                                    var e, n, r, i, a = p,
                                        s = u.charCodeAt(p),
                                        c = u[p];
                                    switch (s) {
                                        case 46:
                                        case 40:
                                        case 41:
                                        case 59:
                                        case 44:
                                        case 123:
                                        case 125:
                                        case 91:
                                        case 93:
                                        case 58:
                                        case 63:
                                        case 126:
                                            return ++p, v.tokenize && (40 === s ? v.openParenToken = v.tokens.length : 123 === s && (v.openCurlyToken = v.tokens.length)), {
                                                type: t.Punctuator,
                                                value: String.fromCharCode(s),
                                                lineNumber: f,
                                                lineStart: h,
                                                start: a,
                                                end: p
                                            };
                                        default:
                                            if (61 === (e = u.charCodeAt(p + 1))) switch (s) {
                                                case 43:
                                                case 45:
                                                case 47:
                                                case 60:
                                                case 62:
                                                case 94:
                                                case 124:
                                                case 37:
                                                case 38:
                                                case 42:
                                                    return p += 2, {
                                                        type: t.Punctuator,
                                                        value: String.fromCharCode(s) + String.fromCharCode(e),
                                                        lineNumber: f,
                                                        lineStart: h,
                                                        start: a,
                                                        end: p
                                                    };
                                                case 33:
                                                case 61:
                                                    return p += 2, 61 === u.charCodeAt(p) && ++p, {
                                                        type: t.Punctuator,
                                                        value: u.slice(a, p),
                                                        lineNumber: f,
                                                        lineStart: h,
                                                        start: a,
                                                        end: p
                                                    }
                                            }
                                    }
                                    return ">>>=" === (i = u.substr(p, 4)) ? (p += 4, {
                                        type: t.Punctuator,
                                        value: i,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: a,
                                        end: p
                                    }) : ">>>" === (r = i.substr(0, 3)) || "<<=" === r || ">>=" === r ? (p += 3, {
                                        type: t.Punctuator,
                                        value: r,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: a,
                                        end: p
                                    }) : c === (n = r.substr(0, 2))[1] && "+-<>&|".indexOf(c) >= 0 || "=>" === n ? (p += 2, {
                                        type: t.Punctuator,
                                        value: n,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: a,
                                        end: p
                                    }) : "<>=!+-*%&|^/".indexOf(c) >= 0 ? (++p, {
                                        type: t.Punctuator,
                                        value: c,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: a,
                                        end: p
                                    }) : void W({}, o.UnexpectedToken, "ILLEGAL")
                                }
  
                                function $() {
                                    var e, n, r;
                                    if (S(E((r = u[p]).charCodeAt(0)) || "." === r, "Numeric literal must start with a decimal digit or a decimal point"), n = p, e = "", "." !== r) {
                                        if (e = u[p++], r = u[p], "0" === e) {
                                            if ("x" === r || "X" === r) return ++p,
                                                function (e) {
                                                    for (var n = ""; p < d && b(u[p]);) n += u[p++];
                                                    return 0 === n.length && W({}, o.UnexpectedToken, "ILLEGAL"), _(u.charCodeAt(p)) && W({}, o.UnexpectedToken, "ILLEGAL"), {
                                                        type: t.NumericLiteral,
                                                        value: parseInt("0x" + n, 16),
                                                        lineNumber: f,
                                                        lineStart: h,
                                                        start: e,
                                                        end: p
                                                    }
                                                }(n);
                                            if (x(r)) return function (e) {
                                                for (var n = "0" + u[p++]; p < d && x(u[p]);) n += u[p++];
                                                return (_(u.charCodeAt(p)) || E(u.charCodeAt(p))) && W({}, o.UnexpectedToken, "ILLEGAL"), {
                                                    type: t.NumericLiteral,
                                                    value: parseInt(n, 8),
                                                    octal: !0,
                                                    lineNumber: f,
                                                    lineStart: h,
                                                    start: e,
                                                    end: p
                                                }
                                            }(n);
                                            r && E(r.charCodeAt(0)) && W({}, o.UnexpectedToken, "ILLEGAL")
                                        }
                                        for (; E(u.charCodeAt(p));) e += u[p++];
                                        r = u[p]
                                    }
                                    if ("." === r) {
                                        for (e += u[p++]; E(u.charCodeAt(p));) e += u[p++];
                                        r = u[p]
                                    }
                                    if ("e" === r || "E" === r)
                                        if (e += u[p++], "+" !== (r = u[p]) && "-" !== r || (e += u[p++]), E(u.charCodeAt(p)))
                                            for (; E(u.charCodeAt(p));) e += u[p++];
                                        else W({}, o.UnexpectedToken, "ILLEGAL");
                                    return _(u.charCodeAt(p)) && W({}, o.UnexpectedToken, "ILLEGAL"), {
                                        type: t.NumericLiteral,
                                        value: parseFloat(e),
                                        lineNumber: f,
                                        lineStart: h,
                                        start: n,
                                        end: p
                                    }
                                }
  
                                function U() {
                                    var e, n, r, i;
                                    return m = null, L(), e = p, n = function () {
                                        var e, t, n, r;
                                        for (S("/" === (e = u[p]), "Regular expression literal must start with a slash"), t = u[p++], n = !1, r = !1; p < d;)
                                            if (t += e = u[p++], "\\" === e) I((e = u[p++]).charCodeAt(0)) && W({}, o.UnterminatedRegExp), t += e;
                                            else if (I(e.charCodeAt(0))) W({}, o.UnterminatedRegExp);
                                            else if (n) "]" === e && (n = !1);
                                            else {
                                                if ("/" === e) {
                                                    r = !0;
                                                    break
                                                }
                                                "[" === e && (n = !0)
                                            }
                                        return r || W({}, o.UnterminatedRegExp), {
                                            value: t.substr(1, t.length - 2),
                                            literal: t
                                        }
                                    }(), r = function () {
                                        var e, t, n, r;
                                        for (t = "", n = ""; p < d && w((e = u[p]).charCodeAt(0));)
                                            if (++p, "\\" === e && p < d)
                                                if ("u" === (e = u[p])) {
                                                    if (r = ++p, e = P("u"))
                                                        for (n += e, t += "\\u"; r < p; ++r) t += u[r];
                                                    else p = r, n += "u", t += "\\u";
                                                    K({}, o.UnexpectedToken, "ILLEGAL")
                                                } else t += "\\", K({}, o.UnexpectedToken, "ILLEGAL");
                                            else n += e, t += e;
                                        return {
                                            value: n,
                                            literal: t
                                        }
                                    }(), i = function (e, t) {
                                        var n;
                                        try {
                                            n = new RegExp(e, t)
                                        } catch (e) {
                                            W({}, o.InvalidRegExp)
                                        }
                                        return n
                                    }(n.value, r.value), v.tokenize ? {
                                        type: t.RegularExpression,
                                        value: i,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: e,
                                        end: p
                                    } : {
                                            literal: n.literal + r.literal,
                                            value: i,
                                            start: e,
                                            end: p
                                        }
                                }
  
                                function M() {
                                    var e, t, n, r;
                                    return L(), e = p, t = {
                                        start: {
                                            line: f,
                                            column: p - h
                                        }
                                    }, n = U(), t.end = {
                                        line: f,
                                        column: p - h
                                    }, v.tokenize || (v.tokens.length > 0 && (r = v.tokens[v.tokens.length - 1]).range[0] === e && "Punctuator" === r.type && ("/" !== r.value && "/=" !== r.value || v.tokens.pop()), v.tokens.push({
                                        type: "RegularExpression",
                                        value: n.literal,
                                        range: [e, p],
                                        loc: t
                                    })), n
                                }
  
                                function B() {
                                    var e;
                                    return L(), p >= d ? {
                                        type: t.EOF,
                                        lineNumber: f,
                                        lineStart: h,
                                        start: p,
                                        end: p
                                    } : _(e = u.charCodeAt(p)) ? D() : 40 === e || 41 === e || 59 === e ? j() : 39 === e || 34 === e ? function () {
                                        var e, n, r, i, a, s, c, l, y = "",
                                            m = !1;
                                        for (c = f, l = h, S("'" === (e = u[p]) || '"' === e, "String literal must starts with a quote"), n = p, ++p; p < d;) {
                                            if ((r = u[p++]) === e) {
                                                e = "";
                                                break
                                            }
                                            if ("\\" === r)
                                                if ((r = u[p++]) && I(r.charCodeAt(0))) ++f, "\r" === r && "\n" === u[p] && ++p, h = p;
                                                else switch (r) {
                                                    case "u":
                                                    case "x":
                                                        s = p, (a = P(r)) ? y += a : (p = s, y += r);
                                                        break;
                                                    case "n":
                                                        y += "\n";
                                                        break;
                                                    case "r":
                                                        y += "\r";
                                                        break;
                                                    case "t":
                                                        y += "\t";
                                                        break;
                                                    case "b":
                                                        y += "\b";
                                                        break;
                                                    case "f":
                                                        y += "\f";
                                                        break;
                                                    case "v":
                                                        y += "\v";
                                                        break;
                                                    default:
                                                        x(r) ? (0 !== (i = "01234567".indexOf(r)) && (m = !0), p < d && x(u[p]) && (m = !0, i = 8 * i + "01234567".indexOf(u[p++]), "0123".indexOf(r) >= 0 && p < d && x(u[p]) && (i = 8 * i + "01234567".indexOf(u[p++]))), y += String.fromCharCode(i)) : y += r
                                                } else {
                                                if (I(r.charCodeAt(0))) break;
                                                y += r
                                            }
                                        }
                                        return "" !== e && W({}, o.UnexpectedToken, "ILLEGAL"), {
                                            type: t.StringLiteral,
                                            value: y,
                                            octal: m,
                                            startLineNumber: c,
                                            startLineStart: l,
                                            lineNumber: f,
                                            lineStart: h,
                                            start: n,
                                            end: p
                                        }
                                    }() : 46 === e ? E(u.charCodeAt(p + 1)) ? $() : j() : E(e) ? $() : v.tokenize && 47 === e ? function () {
                                        var e, t;
                                        if (!(e = v.tokens[v.tokens.length - 1])) return M();
                                        if ("Punctuator" === e.type) {
                                            if ("]" === e.value) return j();
                                            if (")" === e.value) return !(t = v.tokens[v.openParenToken - 1]) || "Keyword" !== t.type || "if" !== t.value && "while" !== t.value && "for" !== t.value && "with" !== t.value ? j() : M();
                                            if ("}" === e.value) {
                                                if (v.tokens[v.openCurlyToken - 3] && "Keyword" === v.tokens[v.openCurlyToken - 3].type) {
                                                    if (!(t = v.tokens[v.openCurlyToken - 4])) return j()
                                                } else {
                                                    if (!v.tokens[v.openCurlyToken - 4] || "Keyword" !== v.tokens[v.openCurlyToken - 4].type) return j();
                                                    if (!(t = v.tokens[v.openCurlyToken - 5])) return M()
                                                }
                                                return r.indexOf(t.value) >= 0 ? j() : M()
                                            }
                                            return M()
                                        }
                                        return "Keyword" === e.type ? M() : j()
                                    }() : j()
                                }
  
                                function F() {
                                    var e, r, i;
                                    return L(), e = {
                                        start: {
                                            line: f,
                                            column: p - h
                                        }
                                    }, r = B(), e.end = {
                                        line: f,
                                        column: p - h
                                    }, r.type !== t.EOF && (i = u.slice(r.start, r.end), v.tokens.push({
                                        type: n[r.type],
                                        value: i,
                                        range: [r.start, r.end],
                                        loc: e
                                    })), r
                                }
  
                                function z() {
                                    var e;
                                    return p = (e = m).end, f = e.lineNumber, h = e.lineStart, m = void 0 !== v.tokens ? F() : B(), p = e.end, f = e.lineNumber, h = e.lineStart, e
                                }
  
                                function q() {
                                    var e, t, n;
                                    e = p, t = f, n = h, m = void 0 !== v.tokens ? F() : B(), p = e, f = t, h = n
                                }
  
                                function G(e, t) {
                                    this.line = e, this.column = t
                                }
  
                                function H(e, t, n, r) {
                                    this.start = new G(e, t), this.end = new G(n, r)
                                }
  
                                function X() {
                                    var e, t, n, r;
                                    return e = p, t = f, n = h, L(), r = f !== t, p = e, f = t, h = n, r
                                }
  
                                function W(e, t) {
                                    var n, r = Array.prototype.slice.call(arguments, 2),
                                        i = t.replace(/%(\d)/g, function (e, t) {
                                            return S(t < r.length, "Message reference must be in range"), r[t]
                                        });
                                    throw "number" == typeof e.lineNumber ? ((n = new Error("Line " + e.lineNumber + ": " + i)).index = e.start, n.lineNumber = e.lineNumber, n.column = e.start - h + 1) : ((n = new Error("Line " + f + ": " + i)).index = p, n.lineNumber = f, n.column = p - h + 1), n.description = i, n
                                }
  
                                function K() {
                                    try {
                                        W.apply(null, arguments)
                                    } catch (e) {
                                        if (!v.errors) throw e;
                                        v.errors.push(e)
                                    }
                                }
  
                                function V(e) {
                                    if (e.type === t.EOF && W(e, o.UnexpectedEOS), e.type === t.NumericLiteral && W(e, o.UnexpectedNumber), e.type === t.StringLiteral && W(e, o.UnexpectedString), e.type === t.Identifier && W(e, o.UnexpectedIdentifier), e.type === t.Keyword) {
                                        if (function (e) {
                                            switch (e) {
                                                case "class":
                                                case "enum":
                                                case "export":
                                                case "extends":
                                                case "import":
                                                case "super":
                                                    return !0;
                                                default:
                                                    return !1
                                            }
                                        }(e.value)) W(e, o.UnexpectedReserved);
                                        else if (l && C(e.value)) return void K(e, o.StrictReservedWord);
                                        W(e, o.UnexpectedToken, e.value)
                                    }
                                    W(e, o.UnexpectedToken, e.value)
                                }
  
                                function J(e) {
                                    var n = z();
                                    n.type === t.Punctuator && n.value === e || V(n)
                                }
  
                                function Q(e) {
                                    var n = z();
                                    n.type === t.Keyword && n.value === e || V(n)
                                }
  
                                function Z(e) {
                                    return m.type === t.Punctuator && m.value === e
                                }
  
                                function Y(e) {
                                    return m.type === t.Keyword && m.value === e
                                }
  
                                function ee() {
                                    var e;
                                    59 === u.charCodeAt(p) || Z(";") ? z() : (e = f, L(), f === e && (m.type === t.EOF || Z("}") || V(m)))
                                }
  
                                function te(e) {
                                    return e.type === i.Identifier || e.type === i.MemberExpression
                                }
  
                                function ne(e, t) {
                                    var n, r, i;
                                    return n = l, i = m, r = _e(), t && l && O(e[0].name) && K(t, o.StrictParamName), l = n, y.markEnd(y.createFunctionExpression(null, e, [], r), i)
                                }
  
                                function re() {
                                    var e, n;
                                    return n = m, (e = z()).type === t.StringLiteral || e.type === t.NumericLiteral ? (l && e.octal && K(e, o.StrictOctalLiteral), y.markEnd(y.createLiteral(e), n)) : y.markEnd(y.createIdentifier(e.value), n)
                                }
  
                                function ie() {
                                    var e, n, r, i, a, s;
                                    return s = m, (e = m).type === t.Identifier ? (r = re(), "get" !== e.value || Z(":") ? "set" !== e.value || Z(":") ? (J(":"), i = ye(), y.markEnd(y.createProperty("init", r, i), s)) : (n = re(), J("("), (e = m).type !== t.Identifier ? (J(")"), K(e, o.UnexpectedToken, e.value), i = ne([])) : (a = [ve()], J(")"), i = ne(a, e)), y.markEnd(y.createProperty("set", n, i), s)) : (n = re(), J("("), J(")"), i = ne([]), y.markEnd(y.createProperty("get", n, i), s))) : e.type !== t.EOF && e.type !== t.Punctuator ? (n = re(), J(":"), i = ye(), y.markEnd(y.createProperty("init", n, i), s)) : void V(e)
                                }
  
                                function ae() {
                                    var e, n, r, s;
                                    if (Z("(")) return function () {
                                        var e;
                                        return J("("), e = me(), J(")"), e
                                    }();
                                    if (Z("[")) return function () {
                                        var e, t = [];
                                        for (e = m, J("["); !Z("]");) Z(",") ? (z(), t.push(null)) : (t.push(ye()), Z("]") || J(","));
                                        return z(), y.markEnd(y.createArrayExpression(t), e)
                                    }();
                                    if (Z("{")) return function () {
                                        var e, t, n, r, s, c = [],
                                            u = {},
                                            p = String;
                                        for (s = m, J("{"); !Z("}");) t = (e = ie()).key.type === i.Identifier ? e.key.name : p(e.key.value), r = "init" === e.kind ? a.Data : "get" === e.kind ? a.Get : a.Set, n = "$" + t, Object.prototype.hasOwnProperty.call(u, n) ? (u[n] === a.Data ? l && r === a.Data ? K({}, o.StrictDuplicateProperty) : r !== a.Data && K({}, o.AccessorDataProperty) : r === a.Data ? K({}, o.AccessorDataProperty) : u[n] & r && K({}, o.AccessorGetSet), u[n] |= r) : u[n] = r, c.push(e), Z("}") || J(",");
                                        return J("}"), y.markEnd(y.createObjectExpression(c), s)
                                    }();
                                    if (e = m.type, s = m, e === t.Identifier) r = y.createIdentifier(z().value);
                                    else if (e === t.StringLiteral || e === t.NumericLiteral) l && m.octal && K(m, o.StrictOctalLiteral), r = y.createLiteral(z());
                                    else if (e === t.Keyword) {
                                        if (Y("function")) return function () {
                                            var e, t, n, r, i, a, s, c, u = null,
                                                p = [];
                                            c = m, Q("function"), Z("(") || (e = m, u = ve(), l ? O(e.value) && K(e, o.StrictFunctionName) : O(e.value) ? (n = e, r = o.StrictFunctionName) : C(e.value) && (n = e, r = o.StrictReservedWord));
                                            i = we(n), p = i.params, t = i.stricted, n = i.firstRestricted, i.message && (r = i.message);
                                            s = l, a = _e(), l && n && W(n, r);
                                            l && t && K(t, r);
                                            return l = s, y.markEnd(y.createFunctionExpression(u, p, [], a), c)
                                        }();
                                        Y("this") ? (z(), r = y.createThisExpression()) : V(z())
                                    } else e === t.BooleanLiteral ? ((n = z()).value = "true" === n.value, r = y.createLiteral(n)) : e === t.NullLiteral ? ((n = z()).value = null, r = y.createLiteral(n)) : Z("/") || Z("/=") ? (r = void 0 !== v.tokens ? y.createLiteral(M()) : y.createLiteral(U()), q()) : V(z());
                                    return y.markEnd(r, s)
                                }
  
                                function oe() {
                                    var e = [];
                                    if (J("("), !Z(")"))
                                        for (; p < d && (e.push(ye()), !Z(")"));) J(",");
                                    return J(")"), e
                                }
  
                                function se() {
                                    var e, n;
                                    return n = m,
                                        function (e) {
                                            return e.type === t.Identifier || e.type === t.Keyword || e.type === t.BooleanLiteral || e.type === t.NullLiteral
                                        }(e = z()) || V(e), y.markEnd(y.createIdentifier(e.value), n)
                                }
  
                                function ce() {
                                    return J("."), se()
                                }
  
                                function ue() {
                                    var e;
                                    return J("["), e = me(), J("]"), e
                                }
  
                                function le() {
                                    var e, t, n;
                                    return n = m, Q("new"), e = function () {
                                        var e, t, n, r;
                                        r = m, e = g.allowIn, t = Y("new") ? le() : ae(), g.allowIn = e;
                                        for (; Z(".") || Z("[");) Z("[") ? (n = ue(), t = y.createMemberExpression("[", t, n)) : (n = ce(), t = y.createMemberExpression(".", t, n)), y.markEnd(t, r);
                                        return t
                                    }(), t = Z("(") ? oe() : [], y.markEnd(y.createNewExpression(e, t), n)
                                }
  
                                function pe() {
                                    var e, n, r = m;
                                    return e = function () {
                                        var e, t, n, r, i;
                                        for (i = m, e = g.allowIn, g.allowIn = !0, t = Y("new") ? le() : ae(), g.allowIn = e; ;) {
                                            if (Z(".")) r = ce(), t = y.createMemberExpression(".", t, r);
                                            else if (Z("(")) n = oe(), t = y.createCallExpression(t, n);
                                            else {
                                                if (!Z("[")) break;
                                                r = ue(), t = y.createMemberExpression("[", t, r)
                                            }
                                            y.markEnd(t, i)
                                        }
                                        return t
                                    }(), m.type === t.Punctuator && (!Z("++") && !Z("--") || X() || (l && e.type === i.Identifier && O(e.name) && K({}, o.StrictLHSPostfix), te(e) || K({}, o.InvalidLHSInAssignment), n = z(), e = y.markEnd(y.createPostfixExpression(n.value, e), r))), e
                                }
  
                                function fe() {
                                    var e, n, r;
                                    return m.type !== t.Punctuator && m.type !== t.Keyword ? n = pe() : Z("++") || Z("--") ? (r = m, e = z(), n = fe(), l && n.type === i.Identifier && O(n.name) && K({}, o.StrictLHSPrefix), te(n) || K({}, o.InvalidLHSInAssignment), n = y.createUnaryExpression(e.value, n), n = y.markEnd(n, r)) : Z("+") || Z("-") || Z("~") || Z("!") ? (r = m, e = z(), n = fe(), n = y.createUnaryExpression(e.value, n), n = y.markEnd(n, r)) : Y("delete") || Y("void") || Y("typeof") ? (r = m, e = z(), n = fe(), n = y.createUnaryExpression(e.value, n), n = y.markEnd(n, r), l && "delete" === n.operator && n.argument.type === i.Identifier && K({}, o.StrictDelete)) : n = pe(), n
                                }
  
                                function he(e, n) {
                                    var r = 0;
                                    if (e.type !== t.Punctuator && e.type !== t.Keyword) return 0;
                                    switch (e.value) {
                                        case "||":
                                            r = 1;
                                            break;
                                        case "&&":
                                            r = 2;
                                            break;
                                        case "|":
                                            r = 3;
                                            break;
                                        case "^":
                                            r = 4;
                                            break;
                                        case "&":
                                            r = 5;
                                            break;
                                        case "==":
                                        case "!=":
                                        case "===":
                                        case "!==":
                                            r = 6;
                                            break;
                                        case "<":
                                        case ">":
                                        case "<=":
                                        case ">=":
                                        case "instanceof":
                                            r = 7;
                                            break;
                                        case "in":
                                            r = n ? 7 : 0;
                                            break;
                                        case "<<":
                                        case ">>":
                                        case ">>>":
                                            r = 8;
                                            break;
                                        case "+":
                                        case "-":
                                            r = 9;
                                            break;
                                        case "*":
                                        case "/":
                                        case "%":
                                            r = 11
                                    }
                                    return r
                                }
  
                                function de() {
                                    var e, t, n, r, i;
                                    return i = m, e = function () {
                                        var e, t, n, r, i, a, o, s, c, u;
                                        if (e = m, c = fe(), 0 === (i = he(r = m, g.allowIn))) return c;
                                        for (r.prec = i, z(), t = [e, m], a = [c, r, o = fe()];
                                            (i = he(m, g.allowIn)) > 0;) {
                                            for (; a.length > 2 && i <= a[a.length - 2].prec;) o = a.pop(), s = a.pop().value, c = a.pop(), n = y.createBinaryExpression(s, c, o), t.pop(), e = t[t.length - 1], y.markEnd(n, e), a.push(n);
                                            (r = z()).prec = i, a.push(r), t.push(m), n = fe(), a.push(n)
                                        }
                                        for (n = a[u = a.length - 1], t.pop(); u > 1;) n = y.createBinaryExpression(a[u - 1].value, a[u - 2], n), u -= 2, e = t.pop(), y.markEnd(n, e);
                                        return n
                                    }(), Z("?") && (z(), t = g.allowIn, g.allowIn = !0, n = ye(), g.allowIn = t, J(":"), r = ye(), e = y.createConditionalExpression(e, n, r), y.markEnd(e, i)), e
                                }
  
                                function ye() {
                                    var e, n, r, a, s, c;
                                    return e = m, s = m, a = n = de(), m.type !== t.Punctuator || "=" !== (c = m.value) && "*=" !== c && "/=" !== c && "%=" !== c && "+=" !== c && "-=" !== c && "<<=" !== c && ">>=" !== c && ">>>=" !== c && "&=" !== c && "^=" !== c && "|=" !== c || (te(n) || K({}, o.InvalidLHSInAssignment), l && n.type === i.Identifier && O(n.name) && K(e, o.StrictLHSAssignment), e = z(), r = ye(), a = y.markEnd(y.createAssignmentExpression(e.value, n, r), s)), a
                                }
  
                                function me() {
                                    var e, t = m;
                                    if (e = ye(), Z(",")) {
                                        for (e = y.createSequenceExpression([e]); p < d && Z(",");) z(), e.expressions.push(ye());
                                        y.markEnd(e, t)
                                    }
                                    return e
                                }
  
                                function ge() {
                                    var e, t;
                                    return t = m, J("{"), e = function () {
                                        for (var e, t = []; p < d && !Z("}") && void 0 !== (e = Oe());) t.push(e);
                                        return t
                                    }(), J("}"), y.markEnd(y.createBlockStatement(e), t)
                                }
  
                                function ve() {
                                    var e, n;
                                    return n = m, (e = z()).type !== t.Identifier && V(e), y.markEnd(y.createIdentifier(e.value), n)
                                }
  
                                function Se(e) {
                                    var t, n, r = null;
                                    return n = m, t = ve(), l && O(t.name) && K({}, o.StrictVarName), "const" === e ? (J("="), r = ye()) : Z("=") && (z(), r = ye()), y.markEnd(y.createVariableDeclarator(t, r), n)
                                }
  
                                function Ee(e) {
                                    var t = [];
                                    do {
                                        if (t.push(Se(e)), !Z(",")) break;
                                        z()
                                    } while (p < d);
                                    return t
                                }
  
                                function be() {
                                    var e, t, n, r, i, a, s, c, u, l;
                                    return e = t = n = null, Q("for"), J("("), Z(";") ? z() : (Y("var") || Y("let") ? (g.allowIn = !1, l = m, c = z(), u = Ee(), e = y.markEnd(y.createVariableDeclaration(u, c.value), l), g.allowIn = !0, 1 === e.declarations.length && Y("in") && (z(), r = e, i = me(), e = null)) : (g.allowIn = !1, e = me(), g.allowIn = !0, Y("in") && (te(e) || K({}, o.InvalidLHSInForIn), z(), r = e, i = me(), e = null)), void 0 === r && J(";")), void 0 === r && (Z(";") || (t = me()), J(";"), Z(")") || (n = me())), J(")"), s = g.inIteration, g.inIteration = !0, a = Ie(), g.inIteration = s, void 0 === r ? y.createForStatement(e, t, n, a) : y.createForInStatement(r, i, a)
                                }
  
                                function xe() {
                                    var e, t, n, r = [];
                                    for (n = m, Y("default") ? (z(), e = null) : (Q("case"), e = me()), J(":"); p < d && !(Z("}") || Y("default") || Y("case"));) t = Ie(), r.push(t);
                                    return y.markEnd(y.createSwitchCase(e, r), n)
                                }
  
                                function ke() {
                                    var e, t, n, r, i = [],
                                        a = null;
                                    return Q("try"), e = ge(), Y("catch") && i.push((r = m, Q("catch"), J("("), Z(")") && V(m), t = ve(), l && O(t.name) && K({}, o.StrictCatchVariable), J(")"), n = ge(), y.markEnd(y.createCatchClause(t, n), r))), Y("finally") && (z(), a = ge()), 0 !== i.length || a || W({}, o.NoCatchOrFinally), y.createTryStatement(e, [], i, a)
                                }
  
                                function Ie() {
                                    var e, n, r, a, s, c, f, h, v, S = m.type;
                                    if (S === t.EOF && V(m), S === t.Punctuator && "{" === m.value) return ge();
                                    if (a = m, S === t.Punctuator) switch (m.value) {
                                        case ";":
                                            return y.markEnd((J(";"), y.createEmptyStatement()), a);
                                        case "(":
                                            return y.markEnd(function () {
                                                var e = me();
                                                return ee(), y.createExpressionStatement(e)
                                            }(), a)
                                    }
                                    if (S === t.Keyword) switch (m.value) {
                                        case "break":
                                            return y.markEnd(function () {
                                                var e, n = null;
                                                return Q("break"), 59 === u.charCodeAt(p) ? (z(), g.inIteration || g.inSwitch || W({}, o.IllegalBreak), y.createBreakStatement(null)) : X() ? (g.inIteration || g.inSwitch || W({}, o.IllegalBreak), y.createBreakStatement(null)) : (m.type === t.Identifier && (e = "$" + (n = ve()).name, Object.prototype.hasOwnProperty.call(g.labelSet, e) || W({}, o.UnknownLabel, n.name)), ee(), null !== n || g.inIteration || g.inSwitch || W({}, o.IllegalBreak), y.createBreakStatement(n))
                                            }(), a);
                                        case "continue":
                                            return y.markEnd(function () {
                                                var e, n = null;
                                                return Q("continue"), 59 === u.charCodeAt(p) ? (z(), g.inIteration || W({}, o.IllegalContinue), y.createContinueStatement(null)) : X() ? (g.inIteration || W({}, o.IllegalContinue), y.createContinueStatement(null)) : (m.type === t.Identifier && (e = "$" + (n = ve()).name, Object.prototype.hasOwnProperty.call(g.labelSet, e) || W({}, o.UnknownLabel, n.name)), ee(), null !== n || g.inIteration || W({}, o.IllegalContinue), y.createContinueStatement(n))
                                            }(), a);
                                        case "debugger":
                                            return y.markEnd((Q("debugger"), ee(), y.createDebuggerStatement()), a);
                                        case "do":
                                            return y.markEnd((Q("do"), v = g.inIteration, g.inIteration = !0, f = Ie(), g.inIteration = v, Q("while"), J("("), h = me(), J(")"), Z(";") && z(), y.createDoWhileStatement(f, h)), a);
                                        case "for":
                                            return y.markEnd(be(), a);
                                        case "function":
                                            return y.markEnd(Ce(), a);
                                        case "if":
                                            return y.markEnd(function () {
                                                var e, t, n;
                                                return Q("if"), J("("), e = me(), J(")"), t = Ie(), Y("else") ? (z(), n = Ie()) : n = null, y.createIfStatement(e, t, n)
                                            }(), a);
                                        case "return":
                                            return y.markEnd((c = null, Q("return"), g.inFunctionBody || K({}, o.IllegalReturn), 32 === u.charCodeAt(p) && _(u.charCodeAt(p + 1)) ? (c = me(), ee(), y.createReturnStatement(c)) : X() ? y.createReturnStatement(null) : (Z(";") || Z("}") || m.type === t.EOF || (c = me()), ee(), y.createReturnStatement(c))), a);
                                        case "switch":
                                            return y.markEnd(function () {
                                                var e, t, n, r, i;
                                                if (Q("switch"), J("("), e = me(), J(")"), J("{"), t = [], Z("}")) return z(), y.createSwitchStatement(e, t);
                                                for (r = g.inSwitch, g.inSwitch = !0, i = !1; p < d && !Z("}");) null === (n = xe()).test && (i && W({}, o.MultipleDefaultsInSwitch), i = !0), t.push(n);
                                                return g.inSwitch = r, J("}"), y.createSwitchStatement(e, t)
                                            }(), a);
                                        case "throw":
                                            return y.markEnd(function () {
                                                var e;
                                                return Q("throw"), X() && W({}, o.NewlineAfterThrow), e = me(), ee(), y.createThrowStatement(e)
                                            }(), a);
                                        case "try":
                                            return y.markEnd(ke(), a);
                                        case "var":
                                            return y.markEnd((Q("var"), s = Ee(), ee(), y.createVariableDeclaration(s, "var")), a);
                                        case "while":
                                            return y.markEnd(function () {
                                                var e, t, n;
                                                return Q("while"), J("("), e = me(), J(")"), n = g.inIteration, g.inIteration = !0, t = Ie(), g.inIteration = n, y.createWhileStatement(e, t)
                                            }(), a);
                                        case "with":
                                            return y.markEnd(function () {
                                                var e, t;
                                                return l && (L(), K({}, o.StrictModeWith)), Q("with"), J("("), e = me(), J(")"), t = Ie(), y.createWithStatement(e, t)
                                            }(), a)
                                    }
                                    return (e = me()).type === i.Identifier && Z(":") ? (z(), r = "$" + e.name, Object.prototype.hasOwnProperty.call(g.labelSet, r) && W({}, o.Redeclaration, "Label", e.name), g.labelSet[r] = !0, n = Ie(), delete g.labelSet[r], y.markEnd(y.createLabeledStatement(e, n), a)) : (ee(), y.markEnd(y.createExpressionStatement(e), a))
                                }
  
                                function _e() {
                                    var e, n, r, a, s, c, f, h, v = [];
                                    for (h = m, J("{"); p < d && m.type === t.StringLiteral && (n = m, e = Oe(), v.push(e), e.expression.type === i.Literal);) "use strict" === u.slice(n.start + 1, n.end - 1) ? (l = !0, r && K(r, o.StrictOctalLiteral)) : !r && n.octal && (r = n);
                                    for (a = g.labelSet, s = g.inIteration, c = g.inSwitch, f = g.inFunctionBody, g.labelSet = {}, g.inIteration = !1, g.inSwitch = !1, g.inFunctionBody = !0; p < d && !Z("}") && void 0 !== (e = Oe());) v.push(e);
                                    return J("}"), g.labelSet = a, g.inIteration = s, g.inSwitch = c, g.inFunctionBody = f, y.markEnd(y.createBlockStatement(v), h)
                                }
  
                                function we(e) {
                                    var t, n, r, i, a, s, c = [];
                                    if (J("("), !Z(")"))
                                        for (i = {}; p < d && (n = m, t = ve(), a = "$" + n.value, l ? (O(n.value) && (r = n, s = o.StrictParamName), Object.prototype.hasOwnProperty.call(i, a) && (r = n, s = o.StrictParamDupe)) : e || (O(n.value) ? (e = n, s = o.StrictParamName) : C(n.value) ? (e = n, s = o.StrictReservedWord) : Object.prototype.hasOwnProperty.call(i, a) && (e = n, s = o.StrictParamDupe)), c.push(t), i[a] = !0, !Z(")"));) J(",");
                                    return J(")"), {
                                        params: c,
                                        stricted: r,
                                        firstRestricted: e,
                                        message: s
                                    }
                                }
  
                                function Ce() {
                                    var e, t, n, r, i, a, s, c, u, p;
                                    return p = m, Q("function"), r = m, e = ve(), l ? O(r.value) && K(r, o.StrictFunctionName) : O(r.value) ? (s = r, c = o.StrictFunctionName) : C(r.value) && (s = r, c = o.StrictReservedWord), t = (a = we(s)).params, i = a.stricted, s = a.firstRestricted, a.message && (c = a.message), u = l, n = _e(), l && s && W(s, c), l && i && K(i, c), l = u, y.markEnd(y.createFunctionDeclaration(e, t, [], n), p)
                                }
  
                                function Oe() {
                                    if (m.type === t.Keyword) switch (m.value) {
                                        case "const":
                                        case "let":
                                            return e = m.value, r = m, Q(e), n = Ee(e), ee(), y.markEnd(y.createVariableDeclaration(n, e), r);
                                        case "function":
                                            return Ce();
                                        default:
                                            return Ie()
                                    }
                                    var e, n, r;
                                    if (m.type !== t.EOF) return Ie()
                                }
  
                                function Ne() {
                                    var e, n;
                                    return L(), q(), n = m, l = !1, e = function () {
                                        for (var e, n, r, a = []; p < d && (n = m).type === t.StringLiteral && (e = Oe(), a.push(e), e.expression.type === i.Literal);) "use strict" === u.slice(n.start + 1, n.end - 1) ? (l = !0, r && K(r, o.StrictOctalLiteral)) : !r && n.octal && (r = n);
                                        for (; p < d && void 0 !== (e = Oe());) a.push(e);
                                        return a
                                    }(), y.markEnd(y.createProgram(e), n)
                                }
  
                                function Te() {
                                    var e, t, n, r = [];
                                    for (e = 0; e < v.tokens.length; ++e) n = {
                                        type: (t = v.tokens[e]).type,
                                        value: t.value
                                    }, v.range && (n.range = t.range), v.loc && (n.loc = t.loc), r.push(n);
                                    v.tokens = r
                                } (n = {})[(t = {
                                    BooleanLiteral: 1,
                                    EOF: 2,
                                    Identifier: 3,
                                    Keyword: 4,
                                    NullLiteral: 5,
                                    NumericLiteral: 6,
                                    Punctuator: 7,
                                    StringLiteral: 8,
                                    RegularExpression: 9
                                }).BooleanLiteral] = "Boolean", n[t.EOF] = "<end>", n[t.Identifier] = "Identifier", n[t.Keyword] = "Keyword", n[t.NullLiteral] = "Null", n[t.NumericLiteral] = "Numeric", n[t.Punctuator] = "Punctuator", n[t.StringLiteral] = "String", n[t.RegularExpression] = "RegularExpression", r = ["(", "{", "[", "in", "typeof", "instanceof", "new", "return", "case", "delete", "throw", "void", "=", "+=", "-=", "*=", "/=", "%=", "<<=", ">>=", ">>>=", "&=", "|=", "^=", ",", "+", "-", "*", "/", "%", "++", "--", "<<", ">>", ">>>", "&", "|", "^", "!", "~", "&&", "||", "?", ":", "===", "==", ">=", "<=", "<", ">", "!=", "!=="], i = {
                                    AssignmentExpression: "AssignmentExpression",
                                    ArrayExpression: "ArrayExpression",
                                    BlockStatement: "BlockStatement",
                                    BinaryExpression: "BinaryExpression",
                                    BreakStatement: "BreakStatement",
                                    CallExpression: "CallExpression",
                                    CatchClause: "CatchClause",
                                    ConditionalExpression: "ConditionalExpression",
                                    ContinueStatement: "ContinueStatement",
                                    DoWhileStatement: "DoWhileStatement",
                                    DebuggerStatement: "DebuggerStatement",
                                    EmptyStatement: "EmptyStatement",
                                    ExpressionStatement: "ExpressionStatement",
                                    ForStatement: "ForStatement",
                                    ForInStatement: "ForInStatement",
                                    FunctionDeclaration: "FunctionDeclaration",
                                    FunctionExpression: "FunctionExpression",
                                    Identifier: "Identifier",
                                    IfStatement: "IfStatement",
                                    Literal: "Literal",
                                    LabeledStatement: "LabeledStatement",
                                    LogicalExpression: "LogicalExpression",
                                    MemberExpression: "MemberExpression",
                                    NewExpression: "NewExpression",
                                    ObjectExpression: "ObjectExpression",
                                    Program: "Program",
                                    Property: "Property",
                                    ReturnStatement: "ReturnStatement",
                                    SequenceExpression: "SequenceExpression",
                                    SwitchStatement: "SwitchStatement",
                                    SwitchCase: "SwitchCase",
                                    ThisExpression: "ThisExpression",
                                    ThrowStatement: "ThrowStatement",
                                    TryStatement: "TryStatement",
                                    UnaryExpression: "UnaryExpression",
                                    UpdateExpression: "UpdateExpression",
                                    VariableDeclaration: "VariableDeclaration",
                                    VariableDeclarator: "VariableDeclarator",
                                    WhileStatement: "WhileStatement",
                                    WithStatement: "WithStatement"
                                }, a = {
                                    Data: 1,
                                    Get: 2,
                                    Set: 4
                                }, o = {
                                    UnexpectedToken: "Unexpected token %0",
                                    UnexpectedNumber: "Unexpected number",
                                    UnexpectedString: "Unexpected string",
                                    UnexpectedIdentifier: "Unexpected identifier",
                                    UnexpectedReserved: "Unexpected reserved word",
                                    UnexpectedEOS: "Unexpected end of input",
                                    NewlineAfterThrow: "Illegal newline after throw",
                                    InvalidRegExp: "Invalid regular expression",
                                    UnterminatedRegExp: "Invalid regular expression: missing /",
                                    InvalidLHSInAssignment: "Invalid left-hand side in assignment",
                                    InvalidLHSInForIn: "Invalid left-hand side in for-in",
                                    MultipleDefaultsInSwitch: "More than one default clause in switch statement",
                                    NoCatchOrFinally: "Missing catch or finally after try",
                                    UnknownLabel: "Undefined label '%0'",
                                    Redeclaration: "%0 '%1' has already been declared",
                                    IllegalContinue: "Illegal continue statement",
                                    IllegalBreak: "Illegal break statement",
                                    IllegalReturn: "Illegal return statement",
                                    StrictModeWith: "Strict mode code may not include a with statement",
                                    StrictCatchVariable: "Catch variable may not be eval or arguments in strict mode",
                                    StrictVarName: "Variable name may not be eval or arguments in strict mode",
                                    StrictParamName: "Parameter name eval or arguments is not allowed in strict mode",
                                    StrictParamDupe: "Strict mode function may not have duplicate parameter names",
                                    StrictFunctionName: "Function name may not be eval or arguments in strict mode",
                                    StrictOctalLiteral: "Octal literals are not allowed in strict mode.",
                                    StrictDelete: "Delete of an unqualified identifier in strict mode.",
                                    StrictDuplicateProperty: "Duplicate data property in object literal not allowed in strict mode",
                                    AccessorDataProperty: "Object literal may not have data and accessor property with the same name",
                                    AccessorGetSet: "Object literal may not have multiple get/set accessors with the same name",
                                    StrictLHSAssignment: "Assignment to eval or arguments is not allowed in strict mode",
                                    StrictLHSPostfix: "Postfix increment/decrement may not have eval or arguments operand in strict mode",
                                    StrictLHSPrefix: "Prefix increment/decrement may not have eval or arguments operand in strict mode",
                                    StrictReservedWord: "Use of future reserved word in strict mode"
                                }, s = {
                                    NonAsciiIdentifierStart: new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),
                                    NonAsciiIdentifierPart: new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")
                                }, c = {
                                    name: "SyntaxTree",
                                    processComment: function (e) {
                                        var t, n;
                                        if (!(e.type === i.Program && e.body.length > 0)) {
                                            for (v.trailingComments.length > 0 ? v.trailingComments[0].range[0] >= e.range[1] ? (n = v.trailingComments, v.trailingComments = []) : v.trailingComments.length = 0 : v.bottomRightStack.length > 0 && v.bottomRightStack[v.bottomRightStack.length - 1].trailingComments && v.bottomRightStack[v.bottomRightStack.length - 1].trailingComments[0].range[0] >= e.range[1] && (n = v.bottomRightStack[v.bottomRightStack.length - 1].trailingComments, delete v.bottomRightStack[v.bottomRightStack.length - 1].trailingComments); v.bottomRightStack.length > 0 && v.bottomRightStack[v.bottomRightStack.length - 1].range[0] >= e.range[0];) t = v.bottomRightStack.pop();
                                            t ? t.leadingComments && t.leadingComments[t.leadingComments.length - 1].range[1] <= e.range[0] && (e.leadingComments = t.leadingComments, delete t.leadingComments) : v.leadingComments.length > 0 && v.leadingComments[v.leadingComments.length - 1].range[1] <= e.range[0] && (e.leadingComments = v.leadingComments, v.leadingComments = []), n && (e.trailingComments = n), v.bottomRightStack.push(e)
                                        }
                                    },
                                    markEnd: function (e, t) {
                                        return v.range && (e.range = [t.start, p]), v.loc && (e.loc = new H(void 0 === t.startLineNumber ? t.lineNumber : t.startLineNumber, t.start - (void 0 === t.startLineStart ? t.lineStart : t.startLineStart), f, p - h), this.postProcess(e)), v.attachComment && this.processComment(e), e
                                    },
                                    postProcess: function (e) {
                                        return v.source && (e.loc.source = v.source), e
                                    },
                                    createArrayExpression: function (e) {
                                        return {
                                            type: i.ArrayExpression,
                                            elements: e
                                        }
                                    },
                                    createAssignmentExpression: function (e, t, n) {
                                        return {
                                            type: i.AssignmentExpression,
                                            operator: e,
                                            left: t,
                                            right: n
                                        }
                                    },
                                    createBinaryExpression: function (e, t, n) {
                                        return {
                                            type: "||" === e || "&&" === e ? i.LogicalExpression : i.BinaryExpression,
                                            operator: e,
                                            left: t,
                                            right: n
                                        }
                                    },
                                    createBlockStatement: function (e) {
                                        return {
                                            type: i.BlockStatement,
                                            body: e
                                        }
                                    },
                                    createBreakStatement: function (e) {
                                        return {
                                            type: i.BreakStatement,
                                            label: e
                                        }
                                    },
                                    createCallExpression: function (e, t) {
                                        return {
                                            type: i.CallExpression,
                                            callee: e,
                                            arguments: t
                                        }
                                    },
                                    createCatchClause: function (e, t) {
                                        return {
                                            type: i.CatchClause,
                                            param: e,
                                            body: t
                                        }
                                    },
                                    createConditionalExpression: function (e, t, n) {
                                        return {
                                            type: i.ConditionalExpression,
                                            test: e,
                                            consequent: t,
                                            alternate: n
                                        }
                                    },
                                    createContinueStatement: function (e) {
                                        return {
                                            type: i.ContinueStatement,
                                            label: e
                                        }
                                    },
                                    createDebuggerStatement: function () {
                                        return {
                                            type: i.DebuggerStatement
                                        }
                                    },
                                    createDoWhileStatement: function (e, t) {
                                        return {
                                            type: i.DoWhileStatement,
                                            body: e,
                                            test: t
                                        }
                                    },
                                    createEmptyStatement: function () {
                                        return {
                                            type: i.EmptyStatement
                                        }
                                    },
                                    createExpressionStatement: function (e) {
                                        return {
                                            type: i.ExpressionStatement,
                                            expression: e
                                        }
                                    },
                                    createForStatement: function (e, t, n, r) {
                                        return {
                                            type: i.ForStatement,
                                            init: e,
                                            test: t,
                                            update: n,
                                            body: r
                                        }
                                    },
                                    createForInStatement: function (e, t, n) {
                                        return {
                                            type: i.ForInStatement,
                                            left: e,
                                            right: t,
                                            body: n,
                                            each: !1
                                        }
                                    },
                                    createFunctionDeclaration: function (e, t, n, r) {
                                        return {
                                            type: i.FunctionDeclaration,
                                            id: e,
                                            params: t,
                                            defaults: n,
                                            body: r,
                                            rest: null,
                                            generator: !1,
                                            expression: !1
                                        }
                                    },
                                    createFunctionExpression: function (e, t, n, r) {
                                        return {
                                            type: i.FunctionExpression,
                                            id: e,
                                            params: t,
                                            defaults: n,
                                            body: r,
                                            rest: null,
                                            generator: !1,
                                            expression: !1
                                        }
                                    },
                                    createIdentifier: function (e) {
                                        return {
                                            type: i.Identifier,
                                            name: e
                                        }
                                    },
                                    createIfStatement: function (e, t, n) {
                                        return {
                                            type: i.IfStatement,
                                            test: e,
                                            consequent: t,
                                            alternate: n
                                        }
                                    },
                                    createLabeledStatement: function (e, t) {
                                        return {
                                            type: i.LabeledStatement,
                                            label: e,
                                            body: t
                                        }
                                    },
                                    createLiteral: function (e) {
                                        return {
                                            type: i.Literal,
                                            value: e.value,
                                            raw: u.slice(e.start, e.end)
                                        }
                                    },
                                    createMemberExpression: function (e, t, n) {
                                        return {
                                            type: i.MemberExpression,
                                            computed: "[" === e,
                                            object: t,
                                            property: n
                                        }
                                    },
                                    createNewExpression: function (e, t) {
                                        return {
                                            type: i.NewExpression,
                                            callee: e,
                                            arguments: t
                                        }
                                    },
                                    createObjectExpression: function (e) {
                                        return {
                                            type: i.ObjectExpression,
                                            properties: e
                                        }
                                    },
                                    createPostfixExpression: function (e, t) {
                                        return {
                                            type: i.UpdateExpression,
                                            operator: e,
                                            argument: t,
                                            prefix: !1
                                        }
                                    },
                                    createProgram: function (e) {
                                        return {
                                            type: i.Program,
                                            body: e
                                        }
                                    },
                                    createProperty: function (e, t, n) {
                                        return {
                                            type: i.Property,
                                            key: t,
                                            value: n,
                                            kind: e
                                        }
                                    },
                                    createReturnStatement: function (e) {
                                        return {
                                            type: i.ReturnStatement,
                                            argument: e
                                        }
                                    },
                                    createSequenceExpression: function (e) {
                                        return {
                                            type: i.SequenceExpression,
                                            expressions: e
                                        }
                                    },
                                    createSwitchCase: function (e, t) {
                                        return {
                                            type: i.SwitchCase,
                                            test: e,
                                            consequent: t
                                        }
                                    },
                                    createSwitchStatement: function (e, t) {
                                        return {
                                            type: i.SwitchStatement,
                                            discriminant: e,
                                            cases: t
                                        }
                                    },
                                    createThisExpression: function () {
                                        return {
                                            type: i.ThisExpression
                                        }
                                    },
                                    createThrowStatement: function (e) {
                                        return {
                                            type: i.ThrowStatement,
                                            argument: e
                                        }
                                    },
                                    createTryStatement: function (e, t, n, r) {
                                        return {
                                            type: i.TryStatement,
                                            block: e,
                                            guardedHandlers: t,
                                            handlers: n,
                                            finalizer: r
                                        }
                                    },
                                    createUnaryExpression: function (e, t) {
                                        return "++" === e || "--" === e ? {
                                            type: i.UpdateExpression,
                                            operator: e,
                                            argument: t,
                                            prefix: !0
                                        } : {
                                            type: i.UnaryExpression,
                                            operator: e,
                                            argument: t,
                                            prefix: !0
                                        }
                                    },
                                    createVariableDeclaration: function (e, t) {
                                        return {
                                            type: i.VariableDeclaration,
                                            declarations: e,
                                            kind: t
                                        }
                                    },
                                    createVariableDeclarator: function (e, t) {
                                        return {
                                            type: i.VariableDeclarator,
                                            id: e,
                                            init: t
                                        }
                                    },
                                    createWhileStatement: function (e, t) {
                                        return {
                                            type: i.WhileStatement,
                                            test: e,
                                            body: t
                                        }
                                    },
                                    createWithStatement: function (e, t) {
                                        return {
                                            type: i.WithStatement,
                                            object: e,
                                            body: t
                                        }
                                    }
                                }, e.version = "1.2.2", e.tokenize = function (e, n) {
                                    var r, i;
                                    r = String, "string" == typeof e || e instanceof String || (e = r(e)), y = c, p = 0, f = (u = e).length > 0 ? 1 : 0, h = 0, d = u.length, m = null, g = {
                                        allowIn: !0,
                                        labelSet: {},
                                        inFunctionBody: !1,
                                        inIteration: !1,
                                        inSwitch: !1,
                                        lastCommentStart: -1
                                    }, v = {}, (n = n || {}).tokens = !0, v.tokens = [], v.tokenize = !0, v.openParenToken = -1, v.openCurlyToken = -1, v.range = "boolean" == typeof n.range && n.range, v.loc = "boolean" == typeof n.loc && n.loc, "boolean" == typeof n.comment && n.comment && (v.comments = []), "boolean" == typeof n.tolerant && n.tolerant && (v.errors = []);
                                    try {
                                        if (q(), m.type === t.EOF) return v.tokens;
                                        for (z(); m.type !== t.EOF;) try {
                                            z()
                                        } catch (e) {
                                            if (v.errors) {
                                                v.errors.push(e);
                                                break
                                            }
                                            throw e
                                        }
                                        Te(), i = v.tokens, void 0 !== v.comments && (i.comments = v.comments), void 0 !== v.errors && (i.errors = v.errors)
                                    } catch (e) {
                                        throw e
                                    } finally {
                                        v = {}
                                    }
                                    return i
                                }, e.parse = function (e, t) {
                                    var n, r;
                                    r = String, "string" == typeof e || e instanceof String || (e = r(e)), y = c, p = 0, f = (u = e).length > 0 ? 1 : 0, h = 0, d = u.length, m = null, g = {
                                        allowIn: !0,
                                        labelSet: {},
                                        inFunctionBody: !1,
                                        inIteration: !1,
                                        inSwitch: !1,
                                        lastCommentStart: -1
                                    }, v = {}, void 0 !== t && (v.range = "boolean" == typeof t.range && t.range, v.loc = "boolean" == typeof t.loc && t.loc, v.attachComment = "boolean" == typeof t.attachComment && t.attachComment, v.loc && null !== t.source && void 0 !== t.source && (v.source = r(t.source)), "boolean" == typeof t.tokens && t.tokens && (v.tokens = []), "boolean" == typeof t.comment && t.comment && (v.comments = []), "boolean" == typeof t.tolerant && t.tolerant && (v.errors = []), v.attachComment && (v.range = !0, v.comments = [], v.bottomRightStack = [], v.trailingComments = [], v.leadingComments = []));
                                    try {
                                        n = Ne(), void 0 !== v.comments && (n.comments = v.comments), void 0 !== v.tokens && (Te(), n.tokens = v.tokens), void 0 !== v.errors && (n.errors = v.errors)
                                    } catch (e) {
                                        throw e
                                    } finally {
                                        v = {}
                                    }
                                    return n
                                }, e.Syntax = function () {
                                    var e, t = {};
                                    for (e in "function" == typeof Object.create && (t = Object.create(null)), i) i.hasOwnProperty(e) && (t[e] = i[e]);
                                    return "function" == typeof Object.freeze && Object.freeze(t), t
                                }()
                            })
                        }, {}],
                        1: [function (e, t, n) {
                            (function (r) {
                                var i = function () {
                                    var e = {
                                        trace: function () { },
                                        yy: {},
                                        symbols_: {
                                            error: 2,
                                            JSON_PATH: 3,
                                            DOLLAR: 4,
                                            PATH_COMPONENTS: 5,
                                            LEADING_CHILD_MEMBER_EXPRESSION: 6,
                                            PATH_COMPONENT: 7,
                                            MEMBER_COMPONENT: 8,
                                            SUBSCRIPT_COMPONENT: 9,
                                            CHILD_MEMBER_COMPONENT: 10,
                                            DESCENDANT_MEMBER_COMPONENT: 11,
                                            DOT: 12,
                                            MEMBER_EXPRESSION: 13,
                                            DOT_DOT: 14,
                                            STAR: 15,
                                            IDENTIFIER: 16,
                                            SCRIPT_EXPRESSION: 17,
                                            INTEGER: 18,
                                            END: 19,
                                            CHILD_SUBSCRIPT_COMPONENT: 20,
                                            DESCENDANT_SUBSCRIPT_COMPONENT: 21,
                                            "[": 22,
                                            SUBSCRIPT: 23,
                                            "]": 24,
                                            SUBSCRIPT_EXPRESSION: 25,
                                            SUBSCRIPT_EXPRESSION_LIST: 26,
                                            SUBSCRIPT_EXPRESSION_LISTABLE: 27,
                                            ",": 28,
                                            STRING_LITERAL: 29,
                                            ARRAY_SLICE: 30,
                                            FILTER_EXPRESSION: 31,
                                            QQ_STRING: 32,
                                            Q_STRING: 33,
                                            $accept: 0,
                                            $end: 1
                                        },
                                        terminals_: {
                                            2: "error",
                                            4: "DOLLAR",
                                            12: "DOT",
                                            14: "DOT_DOT",
                                            15: "STAR",
                                            16: "IDENTIFIER",
                                            17: "SCRIPT_EXPRESSION",
                                            18: "INTEGER",
                                            19: "END",
                                            22: "[",
                                            24: "]",
                                            28: ",",
                                            30: "ARRAY_SLICE",
                                            31: "FILTER_EXPRESSION",
                                            32: "QQ_STRING",
                                            33: "Q_STRING"
                                        },
                                        productions_: [0, [3, 1],
                                            [3, 2],
                                            [3, 1],
                                            [3, 2],
                                            [5, 1],
                                            [5, 2],
                                            [7, 1],
                                            [7, 1],
                                            [8, 1],
                                            [8, 1],
                                            [10, 2],
                                            [6, 1],
                                            [11, 2],
                                            [13, 1],
                                            [13, 1],
                                            [13, 1],
                                            [13, 1],
                                            [13, 1],
                                            [9, 1],
                                            [9, 1],
                                            [20, 3],
                                            [21, 4],
                                            [23, 1],
                                            [23, 1],
                                            [26, 1],
                                            [26, 3],
                                            [27, 1],
                                            [27, 1],
                                            [27, 1],
                                            [25, 1],
                                            [25, 1],
                                            [25, 1],
                                            [29, 1],
                                            [29, 1]
                                        ],
                                        performAction: function (e, n, r, i, a, o, s) {
                                            i.ast || (i.ast = t, t.initialize());
                                            var c = o.length - 1;
                                            switch (a) {
                                                case 1:
                                                    return i.ast.set({
                                                        expression: {
                                                            type: "root",
                                                            value: o[c]
                                                        }
                                                    }), i.ast.unshift(), i.ast.yield();
                                                case 2:
                                                    return i.ast.set({
                                                        expression: {
                                                            type: "root",
                                                            value: o[c - 1]
                                                        }
                                                    }), i.ast.unshift(), i.ast.yield();
                                                case 3:
                                                    return i.ast.unshift(), i.ast.yield();
                                                case 4:
                                                    return i.ast.set({
                                                        operation: "member",
                                                        scope: "child",
                                                        expression: {
                                                            type: "identifier",
                                                            value: o[c - 1]
                                                        }
                                                    }), i.ast.unshift(), i.ast.yield();
                                                case 5:
                                                case 6:
                                                    break;
                                                case 7:
                                                    i.ast.set({
                                                        operation: "member"
                                                    }), i.ast.push();
                                                    break;
                                                case 8:
                                                    i.ast.set({
                                                        operation: "subscript"
                                                    }), i.ast.push();
                                                    break;
                                                case 9:
                                                    i.ast.set({
                                                        scope: "child"
                                                    });
                                                    break;
                                                case 10:
                                                    i.ast.set({
                                                        scope: "descendant"
                                                    });
                                                    break;
                                                case 11:
                                                    break;
                                                case 12:
                                                    i.ast.set({
                                                        scope: "child",
                                                        operation: "member"
                                                    });
                                                    break;
                                                case 13:
                                                    break;
                                                case 14:
                                                    i.ast.set({
                                                        expression: {
                                                            type: "wildcard",
                                                            value: o[c]
                                                        }
                                                    });
                                                    break;
                                                case 15:
                                                    i.ast.set({
                                                        expression: {
                                                            type: "identifier",
                                                            value: o[c]
                                                        }
                                                    });
                                                    break;
                                                case 16:
                                                    i.ast.set({
                                                        expression: {
                                                            type: "script_expression",
                                                            value: o[c]
                                                        }
                                                    });
                                                    break;
                                                case 17:
                                                    i.ast.set({
                                                        expression: {
                                                            type: "numeric_literal",
                                                            value: parseInt(o[c])
                                                        }
                                                    });
                                                    break;
                                                case 18:
                                                    break;
                                                case 19:
                                                    i.ast.set({
                                                        scope: "child"
                                                    });
                                                    break;
                                                case 20:
                                                    i.ast.set({
                                                        scope: "descendant"
                                                    });
                                                    break;
                                                case 21:
                                                case 22:
                                                case 23:
                                                    break;
                                                case 24:
                                                    o[c].length > 1 ? i.ast.set({
                                                        expression: {
                                                            type: "union",
                                                            value: o[c]
                                                        }
                                                    }) : this.$ = o[c];
                                                    break;
                                                case 25:
                                                    this.$ = [o[c]];
                                                    break;
                                                case 26:
                                                    this.$ = o[c - 2].concat(o[c]);
                                                    break;
                                                case 27:
                                                    this.$ = {
                                                        expression: {
                                                            type: "numeric_literal",
                                                            value: parseInt(o[c])
                                                        }
                                                    }, i.ast.set(this.$);
                                                    break;
                                                case 28:
                                                    this.$ = {
                                                        expression: {
                                                            type: "string_literal",
                                                            value: o[c]
                                                        }
                                                    }, i.ast.set(this.$);
                                                    break;
                                                case 29:
                                                    this.$ = {
                                                        expression: {
                                                            type: "slice",
                                                            value: o[c]
                                                        }
                                                    }, i.ast.set(this.$);
                                                    break;
                                                case 30:
                                                    this.$ = {
                                                        expression: {
                                                            type: "wildcard",
                                                            value: o[c]
                                                        }
                                                    }, i.ast.set(this.$);
                                                    break;
                                                case 31:
                                                    this.$ = {
                                                        expression: {
                                                            type: "script_expression",
                                                            value: o[c]
                                                        }
                                                    }, i.ast.set(this.$);
                                                    break;
                                                case 32:
                                                    this.$ = {
                                                        expression: {
                                                            type: "filter_expression",
                                                            value: o[c]
                                                        }
                                                    }, i.ast.set(this.$);
                                                    break;
                                                case 33:
                                                case 34:
                                                    this.$ = o[c]
                                            }
                                        },
                                        table: [{
                                            3: 1,
                                            4: [1, 2],
                                            6: 3,
                                            13: 4,
                                            15: [1, 5],
                                            16: [1, 6],
                                            17: [1, 7],
                                            18: [1, 8],
                                            19: [1, 9]
                                        }, {
                                            1: [3]
                                        }, {
                                            1: [2, 1],
                                            5: 10,
                                            7: 11,
                                            8: 12,
                                            9: 13,
                                            10: 14,
                                            11: 15,
                                            12: [1, 18],
                                            14: [1, 19],
                                            20: 16,
                                            21: 17,
                                            22: [1, 20]
                                        }, {
                                            1: [2, 3],
                                            5: 21,
                                            7: 11,
                                            8: 12,
                                            9: 13,
                                            10: 14,
                                            11: 15,
                                            12: [1, 18],
                                            14: [1, 19],
                                            20: 16,
                                            21: 17,
                                            22: [1, 20]
                                        }, {
                                            1: [2, 12],
                                            12: [2, 12],
                                            14: [2, 12],
                                            22: [2, 12]
                                        }, {
                                            1: [2, 14],
                                            12: [2, 14],
                                            14: [2, 14],
                                            22: [2, 14]
                                        }, {
                                            1: [2, 15],
                                            12: [2, 15],
                                            14: [2, 15],
                                            22: [2, 15]
                                        }, {
                                            1: [2, 16],
                                            12: [2, 16],
                                            14: [2, 16],
                                            22: [2, 16]
                                        }, {
                                            1: [2, 17],
                                            12: [2, 17],
                                            14: [2, 17],
                                            22: [2, 17]
                                        }, {
                                            1: [2, 18],
                                            12: [2, 18],
                                            14: [2, 18],
                                            22: [2, 18]
                                        }, {
                                            1: [2, 2],
                                            7: 22,
                                            8: 12,
                                            9: 13,
                                            10: 14,
                                            11: 15,
                                            12: [1, 18],
                                            14: [1, 19],
                                            20: 16,
                                            21: 17,
                                            22: [1, 20]
                                        }, {
                                            1: [2, 5],
                                            12: [2, 5],
                                            14: [2, 5],
                                            22: [2, 5]
                                        }, {
                                            1: [2, 7],
                                            12: [2, 7],
                                            14: [2, 7],
                                            22: [2, 7]
                                        }, {
                                            1: [2, 8],
                                            12: [2, 8],
                                            14: [2, 8],
                                            22: [2, 8]
                                        }, {
                                            1: [2, 9],
                                            12: [2, 9],
                                            14: [2, 9],
                                            22: [2, 9]
                                        }, {
                                            1: [2, 10],
                                            12: [2, 10],
                                            14: [2, 10],
                                            22: [2, 10]
                                        }, {
                                            1: [2, 19],
                                            12: [2, 19],
                                            14: [2, 19],
                                            22: [2, 19]
                                        }, {
                                            1: [2, 20],
                                            12: [2, 20],
                                            14: [2, 20],
                                            22: [2, 20]
                                        }, {
                                            13: 23,
                                            15: [1, 5],
                                            16: [1, 6],
                                            17: [1, 7],
                                            18: [1, 8],
                                            19: [1, 9]
                                        }, {
                                            13: 24,
                                            15: [1, 5],
                                            16: [1, 6],
                                            17: [1, 7],
                                            18: [1, 8],
                                            19: [1, 9],
                                            22: [1, 25]
                                        }, {
                                            15: [1, 29],
                                            17: [1, 30],
                                            18: [1, 33],
                                            23: 26,
                                            25: 27,
                                            26: 28,
                                            27: 32,
                                            29: 34,
                                            30: [1, 35],
                                            31: [1, 31],
                                            32: [1, 36],
                                            33: [1, 37]
                                        }, {
                                            1: [2, 4],
                                            7: 22,
                                            8: 12,
                                            9: 13,
                                            10: 14,
                                            11: 15,
                                            12: [1, 18],
                                            14: [1, 19],
                                            20: 16,
                                            21: 17,
                                            22: [1, 20]
                                        }, {
                                            1: [2, 6],
                                            12: [2, 6],
                                            14: [2, 6],
                                            22: [2, 6]
                                        }, {
                                            1: [2, 11],
                                            12: [2, 11],
                                            14: [2, 11],
                                            22: [2, 11]
                                        }, {
                                            1: [2, 13],
                                            12: [2, 13],
                                            14: [2, 13],
                                            22: [2, 13]
                                        }, {
                                            15: [1, 29],
                                            17: [1, 30],
                                            18: [1, 33],
                                            23: 38,
                                            25: 27,
                                            26: 28,
                                            27: 32,
                                            29: 34,
                                            30: [1, 35],
                                            31: [1, 31],
                                            32: [1, 36],
                                            33: [1, 37]
                                        }, {
                                            24: [1, 39]
                                        }, {
                                            24: [2, 23]
                                        }, {
                                            24: [2, 24],
                                            28: [1, 40]
                                        }, {
                                            24: [2, 30]
                                        }, {
                                            24: [2, 31]
                                        }, {
                                            24: [2, 32]
                                        }, {
                                            24: [2, 25],
                                            28: [2, 25]
                                        }, {
                                            24: [2, 27],
                                            28: [2, 27]
                                        }, {
                                            24: [2, 28],
                                            28: [2, 28]
                                        }, {
                                            24: [2, 29],
                                            28: [2, 29]
                                        }, {
                                            24: [2, 33],
                                            28: [2, 33]
                                        }, {
                                            24: [2, 34],
                                            28: [2, 34]
                                        }, {
                                            24: [1, 41]
                                        }, {
                                            1: [2, 21],
                                            12: [2, 21],
                                            14: [2, 21],
                                            22: [2, 21]
                                        }, {
                                            18: [1, 33],
                                            27: 42,
                                            29: 34,
                                            30: [1, 35],
                                            32: [1, 36],
                                            33: [1, 37]
                                        }, {
                                            1: [2, 22],
                                            12: [2, 22],
                                            14: [2, 22],
                                            22: [2, 22]
                                        }, {
                                            24: [2, 26],
                                            28: [2, 26]
                                        }],
                                        defaultActions: {
                                            27: [2, 23],
                                            29: [2, 30],
                                            30: [2, 31],
                                            31: [2, 32]
                                        },
                                        parseError: function (e, t) {
                                            if (!t.recoverable) throw new Error(e);
                                            this.trace(e)
                                        },
                                        parse: function (e) {
                                            var t = this,
                                                n = [0],
                                                r = [null],
                                                i = [],
                                                a = this.table,
                                                o = "",
                                                s = 0,
                                                c = 0,
                                                u = 0,
                                                l = 1,
                                                p = i.slice.call(arguments, 1);
                                            this.lexer.setInput(e), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, void 0 === this.lexer.yylloc && (this.lexer.yylloc = {});
                                            var f = this.lexer.yylloc;
                                            i.push(f);
                                            var h = this.lexer.options && this.lexer.options.ranges;
                                            "function" == typeof this.yy.parseError ? this.parseError = this.yy.parseError : this.parseError = Object.getPrototypeOf(this).parseError;
                                            for (var d, y, m, g, v, S, E, b, x, k, I = {}; ;) {
                                                if (m = n[n.length - 1], this.defaultActions[m] ? g = this.defaultActions[m] : (null == d && (k = void 0, "number" != typeof (k = t.lexer.lex() || l) && (k = t.symbols_[k] || k), d = k), g = a[m] && a[m][d]), void 0 === g || !g.length || !g[0]) {
                                                    var _ = "";
                                                    for (S in x = [], a[m]) this.terminals_[S] && S > 2 && x.push("'" + this.terminals_[S] + "'");
                                                    _ = this.lexer.showPosition ? "Parse error on line " + (s + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + x.join(", ") + ", got '" + (this.terminals_[d] || d) + "'" : "Parse error on line " + (s + 1) + ": Unexpected " + (d == l ? "end of input" : "'" + (this.terminals_[d] || d) + "'"), this.parseError(_, {
                                                        text: this.lexer.match,
                                                        token: this.terminals_[d] || d,
                                                        line: this.lexer.yylineno,
                                                        loc: f,
                                                        expected: x
                                                    })
                                                }
                                                if (g[0] instanceof Array && g.length > 1) throw new Error("Parse Error: multiple actions possible at state: " + m + ", token: " + d);
                                                switch (g[0]) {
                                                    case 1:
                                                        n.push(d), r.push(this.lexer.yytext), i.push(this.lexer.yylloc), n.push(g[1]), d = null, y ? (d = y, y = null) : (c = this.lexer.yyleng, o = this.lexer.yytext, s = this.lexer.yylineno, f = this.lexer.yylloc, u > 0 && u--);
                                                        break;
                                                    case 2:
                                                        if (E = this.productions_[g[1]][1], I.$ = r[r.length - E], I._$ = {
                                                            first_line: i[i.length - (E || 1)].first_line,
                                                            last_line: i[i.length - 1].last_line,
                                                            first_column: i[i.length - (E || 1)].first_column,
                                                            last_column: i[i.length - 1].last_column
                                                        }, h && (I._$.range = [i[i.length - (E || 1)].range[0], i[i.length - 1].range[1]]), void 0 !== (v = this.performAction.apply(I, [o, c, s, this.yy, g[1], r, i].concat(p)))) return v;
                                                        E && (n = n.slice(0, -1 * E * 2), r = r.slice(0, -1 * E), i = i.slice(0, -1 * E)), n.push(this.productions_[g[1]][0]), r.push(I.$), i.push(I._$), b = a[n[n.length - 2]][n[n.length - 1]], n.push(b);
                                                        break;
                                                    case 3:
                                                        return !0
                                                }
                                            }
                                            return !0
                                        }
                                    },
                                        t = {
                                            initialize: function () {
                                                this._nodes = [], this._node = {}, this._stash = []
                                            },
                                            set: function (e) {
                                                for (var t in e) this._node[t] = e[t];
                                                return this._node
                                            },
                                            node: function (e) {
                                                return arguments.length && (this._node = e), this._node
                                            },
                                            push: function () {
                                                this._nodes.push(this._node), this._node = {}
                                            },
                                            unshift: function () {
                                                this._nodes.unshift(this._node), this._node = {}
                                            },
                                            yield: function () {
                                                var e = this._nodes;
                                                return this.initialize(), e
                                            }
                                        },
                                        n = {
                                            EOF: 1,
                                            parseError: function (e, t) {
                                                if (!this.yy.parser) throw new Error(e);
                                                this.yy.parser.parseError(e, t)
                                            },
                                            setInput: function (e) {
                                                return this._input = e, this._more = this._backtrack = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = {
                                                    first_line: 1,
                                                    first_column: 0,
                                                    last_line: 1,
                                                    last_column: 0
                                                }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this
                                            },
                                            input: function () {
                                                var e = this._input[0];
                                                return this.yytext += e, this.yyleng++, this.offset++, this.match += e, this.matched += e, e.match(/(?:\r\n?|\n).*/g) ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), e
                                            },
                                            unput: function (e) {
                                                var t = e.length,
                                                    n = e.split(/(?:\r\n?|\n)/g);
                                                this._input = e + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - t - 1), this.offset -= t;
                                                var r = this.match.split(/(?:\r\n?|\n)/g);
                                                this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), n.length - 1 && (this.yylineno -= n.length - 1);
                                                var i = this.yylloc.range;
                                                return this.yylloc = {
                                                    first_line: this.yylloc.first_line,
                                                    last_line: this.yylineno + 1,
                                                    first_column: this.yylloc.first_column,
                                                    last_column: n ? (n.length === r.length ? this.yylloc.first_column : 0) + r[r.length - n.length].length - n[0].length : this.yylloc.first_column - t
                                                }, this.options.ranges && (this.yylloc.range = [i[0], i[0] + this.yyleng - t]), this.yyleng = this.yytext.length, this
                                            },
                                            more: function () {
                                                return this._more = !0, this
                                            },
                                            reject: function () {
                                                return this.options.backtrack_lexer ? (this._backtrack = !0, this) : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n" + this.showPosition(), {
                                                    text: "",
                                                    token: null,
                                                    line: this.yylineno
                                                })
                                            },
                                            less: function (e) {
                                                this.unput(this.match.slice(e))
                                            },
                                            pastInput: function () {
                                                var e = this.matched.substr(0, this.matched.length - this.match.length);
                                                return (e.length > 20 ? "..." : "") + e.substr(-20).replace(/\n/g, "")
                                            },
                                            upcomingInput: function () {
                                                var e = this.match;
                                                return e.length < 20 && (e += this._input.substr(0, 20 - e.length)), (e.substr(0, 20) + (e.length > 20 ? "..." : "")).replace(/\n/g, "")
                                            },
                                            showPosition: function () {
                                                var e = this.pastInput(),
                                                    t = new Array(e.length + 1).join("-");
                                                return e + this.upcomingInput() + "\n" + t + "^"
                                            },
                                            test_match: function (e, t) {
                                                var n, r, i;
                                                if (this.options.backtrack_lexer && (i = {
                                                    yylineno: this.yylineno,
                                                    yylloc: {
                                                        first_line: this.yylloc.first_line,
                                                        last_line: this.last_line,
                                                        first_column: this.yylloc.first_column,
                                                        last_column: this.yylloc.last_column
                                                    },
                                                    yytext: this.yytext,
                                                    match: this.match,
                                                    matches: this.matches,
                                                    matched: this.matched,
                                                    yyleng: this.yyleng,
                                                    offset: this.offset,
                                                    _more: this._more,
                                                    _input: this._input,
                                                    yy: this.yy,
                                                    conditionStack: this.conditionStack.slice(0),
                                                    done: this.done
                                                }, this.options.ranges && (i.yylloc.range = this.yylloc.range.slice(0))), (r = e[0].match(/(?:\r\n?|\n).*/g)) && (this.yylineno += r.length), this.yylloc = {
                                                    first_line: this.yylloc.last_line,
                                                    last_line: this.yylineno + 1,
                                                    first_column: this.yylloc.last_column,
                                                    last_column: r ? r[r.length - 1].length - r[r.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + e[0].length
                                                }, this.yytext += e[0], this.match += e[0], this.matches = e, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._backtrack = !1, this._input = this._input.slice(e[0].length), this.matched += e[0], n = this.performAction.call(this, this.yy, this, t, this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), n) return n;
                                                if (this._backtrack) {
                                                    for (var a in i) this[a] = i[a];
                                                    return !1
                                                }
                                                return !1
                                            },
                                            next: function () {
                                                if (this.done) return this.EOF;
                                                var e, t, n, r;
                                                this._input || (this.done = !0), this._more || (this.yytext = "", this.match = "");
                                                for (var i = this._currentRules(), a = 0; a < i.length; a++)
                                                    if ((n = this._input.match(this.rules[i[a]])) && (!t || n[0].length > t[0].length)) {
                                                        if (t = n, r = a, this.options.backtrack_lexer) {
                                                            if (!1 !== (e = this.test_match(n, i[a]))) return e;
                                                            if (this._backtrack) {
                                                                t = !1;
                                                                continue
                                                            }
                                                            return !1
                                                        }
                                                        if (!this.options.flex) break
                                                    } return t ? !1 !== (e = this.test_match(t, i[r])) && e : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
                                                        text: "",
                                                        token: null,
                                                        line: this.yylineno
                                                    })
                                            },
                                            lex: function () {
                                                var e = this.next();
                                                return e || this.lex()
                                            },
                                            begin: function (e) {
                                                this.conditionStack.push(e)
                                            },
                                            popState: function () {
                                                return this.conditionStack.length - 1 > 0 ? this.conditionStack.pop() : this.conditionStack[0]
                                            },
                                            _currentRules: function () {
                                                return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
                                            },
                                            topState: function (e) {
                                                return (e = this.conditionStack.length - 1 - Math.abs(e || 0)) >= 0 ? this.conditionStack[e] : "INITIAL"
                                            },
                                            pushState: function (e) {
                                                this.begin(e)
                                            },
                                            stateStackSize: function () {
                                                return this.conditionStack.length
                                            },
                                            options: {},
                                            performAction: function (e, t, n, r) {
                                                switch (n) {
                                                    case 0:
                                                        return 4;
                                                    case 1:
                                                        return 14;
                                                    case 2:
                                                        return 12;
                                                    case 3:
                                                        return 15;
                                                    case 4:
                                                        return 16;
                                                    case 5:
                                                        return 22;
                                                    case 6:
                                                        return 24;
                                                    case 7:
                                                        return 28;
                                                    case 8:
                                                        return 30;
                                                    case 9:
                                                        return 18;
                                                    case 10:
                                                        return t.yytext = t.yytext.substr(1, t.yyleng - 2), 32;
                                                    case 11:
                                                        return t.yytext = t.yytext.substr(1, t.yyleng - 2), 33;
                                                    case 12:
                                                        return 17;
                                                    case 13:
                                                        return 31
                                                }
                                            },
                                            rules: [/^(?:\$)/, /^(?:\.\.)/, /^(?:\.)/, /^(?:\*)/, /^(?:[a-zA-Z_]+[a-zA-Z0-9_]*)/, /^(?:\[)/, /^(?:\])/, /^(?:,)/, /^(?:((-?(?:0|[1-9][0-9]*)))?\:((-?(?:0|[1-9][0-9]*)))?(\:((-?(?:0|[1-9][0-9]*)))?)?)/, /^(?:(-?(?:0|[1-9][0-9]*)))/, /^(?:"(?:\\["bfnrt/\\]|\\u[a-fA-F0-9]{4}|[^"\\])*")/, /^(?:'(?:\\['bfnrt/\\]|\\u[a-fA-F0-9]{4}|[^'\\])*')/, /^(?:\(.+?\)(?=\]))/, /^(?:\?\(.+?\)(?=\]))/],
                                            conditions: {
                                                INITIAL: {
                                                    rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
                                                    inclusive: !0
                                                }
                                            }
                                        };
  
                                    function r() {
                                        this.yy = {}
                                    }
                                    return e.lexer = n, r.prototype = e, e.Parser = r, new r
                                }();
                                void 0 !== e && void 0 !== n && (n.parser = i, n.Parser = i.Parser, n.parse = function () {
                                    return i.parse.apply(i, arguments)
                                }, n.main = function (t) {
                                    t[1] || (console.log("Usage: " + t[0] + " FILE"), r.exit(1));
                                    var i = e("fs").readFileSync(e("path").normalize(t[1]), "utf8");
                                    return n.parser.parse(i)
                                }, void 0 !== t && e.main === t && n.main(r.argv.slice(1)))
                            }).call(this, e("_process"))
                        }, {
                            _process: 14,
                            fs: 12,
                            path: 13
                        }],
                        2: [function (e, t, n) {
                            t.exports = {
                                identifier: "[a-zA-Z_]+[a-zA-Z0-9_]*",
                                integer: "-?(?:0|[1-9][0-9]*)",
                                qq_string: '"(?:\\\\["bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^"\\\\])*"',
                                q_string: "'(?:\\\\['bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*'"
                            }
                        }, {}],
                        3: [function (e, t, n) {
                            var r = e("./dict"),
                                i = e("fs"),
                                a = {
                                    lex: {
                                        macros: {
                                            esc: "\\\\",
                                            int: r.integer
                                        },
                                        rules: [
                                            ["\\$", "return 'DOLLAR'"],
                                            ["\\.\\.", "return 'DOT_DOT'"],
                                            ["\\.", "return 'DOT'"],
                                            ["\\*", "return 'STAR'"],
                                            [r.identifier, "return 'IDENTIFIER'"],
                                            ["\\[", "return '['"],
                                            ["\\]", "return ']'"],
                                            [",", "return ','"],
                                            ["({int})?\\:({int})?(\\:({int})?)?", "return 'ARRAY_SLICE'"],
                                            ["{int}", "return 'INTEGER'"],
                                            [r.qq_string, "yytext = yytext.substr(1,yyleng-2); return 'QQ_STRING';"],
                                            [r.q_string, "yytext = yytext.substr(1,yyleng-2); return 'Q_STRING';"],
                                            ["\\(.+?\\)(?=\\])", "return 'SCRIPT_EXPRESSION'"],
                                            ["\\?\\(.+?\\)(?=\\])", "return 'FILTER_EXPRESSION'"]
                                        ]
                                    },
                                    start: "JSON_PATH",
                                    bnf: {
                                        JSON_PATH: [
                                            ["DOLLAR", 'yy.ast.set({ expression: { type: "root", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'],
                                            ["DOLLAR PATH_COMPONENTS", 'yy.ast.set({ expression: { type: "root", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'],
                                            ["LEADING_CHILD_MEMBER_EXPRESSION", "yy.ast.unshift(); return yy.ast.yield()"],
                                            ["LEADING_CHILD_MEMBER_EXPRESSION PATH_COMPONENTS", 'yy.ast.set({ operation: "member", scope: "child", expression: { type: "identifier", value: $1 }}); yy.ast.unshift(); return yy.ast.yield()']
                                        ],
                                        PATH_COMPONENTS: [
                                            ["PATH_COMPONENT", ""],
                                            ["PATH_COMPONENTS PATH_COMPONENT", ""]
                                        ],
                                        PATH_COMPONENT: [
                                            ["MEMBER_COMPONENT", 'yy.ast.set({ operation: "member" }); yy.ast.push()'],
                                            ["SUBSCRIPT_COMPONENT", 'yy.ast.set({ operation: "subscript" }); yy.ast.push() ']
                                        ],
                                        MEMBER_COMPONENT: [
                                            ["CHILD_MEMBER_COMPONENT", 'yy.ast.set({ scope: "child" })'],
                                            ["DESCENDANT_MEMBER_COMPONENT", 'yy.ast.set({ scope: "descendant" })']
                                        ],
                                        CHILD_MEMBER_COMPONENT: [
                                            ["DOT MEMBER_EXPRESSION", ""]
                                        ],
                                        LEADING_CHILD_MEMBER_EXPRESSION: [
                                            ["MEMBER_EXPRESSION", 'yy.ast.set({ scope: "child", operation: "member" })']
                                        ],
                                        DESCENDANT_MEMBER_COMPONENT: [
                                            ["DOT_DOT MEMBER_EXPRESSION", ""]
                                        ],
                                        MEMBER_EXPRESSION: [
                                            ["STAR", 'yy.ast.set({ expression: { type: "wildcard", value: $1 } })'],
                                            ["IDENTIFIER", 'yy.ast.set({ expression: { type: "identifier", value: $1 } })'],
                                            ["SCRIPT_EXPRESSION", 'yy.ast.set({ expression: { type: "script_expression", value: $1 } })'],
                                            ["INTEGER", 'yy.ast.set({ expression: { type: "numeric_literal", value: parseInt($1) } })'],
                                            ["END", ""]
                                        ],
                                        SUBSCRIPT_COMPONENT: [
                                            ["CHILD_SUBSCRIPT_COMPONENT", 'yy.ast.set({ scope: "child" })'],
                                            ["DESCENDANT_SUBSCRIPT_COMPONENT", 'yy.ast.set({ scope: "descendant" })']
                                        ],
                                        CHILD_SUBSCRIPT_COMPONENT: [
                                            ["[ SUBSCRIPT ]", ""]
                                        ],
                                        DESCENDANT_SUBSCRIPT_COMPONENT: [
                                            ["DOT_DOT [ SUBSCRIPT ]", ""]
                                        ],
                                        SUBSCRIPT: [
                                            ["SUBSCRIPT_EXPRESSION", ""],
                                            ["SUBSCRIPT_EXPRESSION_LIST", '$1.length > 1? yy.ast.set({ expression: { type: "union", value: $1 } }) : $$ = $1']
                                        ],
                                        SUBSCRIPT_EXPRESSION_LIST: [
                                            ["SUBSCRIPT_EXPRESSION_LISTABLE", "$$ = [$1]"],
                                            ["SUBSCRIPT_EXPRESSION_LIST , SUBSCRIPT_EXPRESSION_LISTABLE", "$$ = $1.concat($3)"]
                                        ],
                                        SUBSCRIPT_EXPRESSION_LISTABLE: [
                                            ["INTEGER", '$$ = { expression: { type: "numeric_literal", value: parseInt($1) } }; yy.ast.set($$)'],
                                            ["STRING_LITERAL", '$$ = { expression: { type: "string_literal", value: $1 } }; yy.ast.set($$)'],
                                            ["ARRAY_SLICE", '$$ = { expression: { type: "slice", value: $1 } }; yy.ast.set($$)']
                                        ],
                                        SUBSCRIPT_EXPRESSION: [
                                            ["STAR", '$$ = { expression: { type: "wildcard", value: $1 } }; yy.ast.set($$)'],
                                            ["SCRIPT_EXPRESSION", '$$ = { expression: { type: "script_expression", value: $1 } }; yy.ast.set($$)'],
                                            ["FILTER_EXPRESSION", '$$ = { expression: { type: "filter_expression", value: $1 } }; yy.ast.set($$)']
                                        ],
                                        STRING_LITERAL: [
                                            ["QQ_STRING", "$$ = $1"],
                                            ["Q_STRING", "$$ = $1"]
                                        ]
                                    }
                                };
                            i.readFileSync && (a.moduleInclude = i.readFileSync(e.resolve("../include/module.js")), a.actionInclude = i.readFileSync(e.resolve("../include/action.js"))), t.exports = a
                        }, {
                            "./dict": 2,
                            fs: 12
                        }],
                        4: [function (e, t, n) {
                            var r = e("./aesprim"),
                                i = e("./slice"),
                                a = e("static-eval"),
                                o = e("underscore").uniq,
                                s = function () {
                                    return this.initialize.apply(this, arguments)
                                };
  
                            function c(t, n, i) {
                                var a = e("./index"),
                                    o = h(r.parse(n).body[0].expression, {
                                        "@": t.value
                                    }),
                                    s = i.replace(/\{\{\s*value\s*\}\}/g, o),
                                    c = a.nodes(t.value, s);
                                return c.forEach(function (e) {
                                    e.path = t.path.concat(e.path.slice(1))
                                }), c
                            }
  
                            function u(e) {
                                return Array.isArray(e)
                            }
  
                            function l(e) {
                                return function (t, n, r, i) {
                                    var a = t.value,
                                        o = t.path,
                                        s = [],
                                        c = function (t, a) {
                                            var o;
                                            u(t) ? (t.forEach(function (e, t) {
                                                s.length >= i || r(t, e, n) && s.push({
                                                    path: a.concat(t),
                                                    value: e
                                                })
                                            }), t.forEach(function (t, n) {
                                                s.length >= i || e && c(t, a.concat(n))
                                            })) : (o = t) && !(o instanceof Array) && o instanceof Object && (this.keys(t).forEach(function (e) {
                                                s.length >= i || r(e, t[e], n) && s.push({
                                                    path: a.concat(e),
                                                    value: t[e]
                                                })
                                            }), this.keys(t).forEach(function (n) {
                                                s.length >= i || e && c(t[n], a.concat(n))
                                            }))
                                        }.bind(this);
                                    return c(a, o), s
                                }
                            }
  
                            function p(e) {
                                return function (t, n, r) {
                                    return this.descend(n, t.expression.value, e, r)
                                }
                            }
  
                            function f(e) {
                                return function (t, n, r) {
                                    return this.traverse(n, t.expression.value, e, r)
                                }
                            }
  
                            function h() {
                                try {
                                    return a.apply(this, arguments)
                                } catch (e) { }
                            }
  
                            function d(e) {
                                return e = e.filter(function (e) {
                                    return e
                                }), o(e, function (e) {
                                    return e.path.map(function (e) {
                                        return String(e).replace("-", "--")
                                    }).join("-")
                                })
                            }
  
                            function y(e) {
                                var t = String(e);
                                return t.match(/^-?[0-9]+$/) ? parseInt(t) : null
                            }
                            s.prototype.initialize = function () {
                                this.traverse = l(!0), this.descend = l()
                            }, s.prototype.keys = Object.keys, s.prototype.resolve = function (e) {
                                var t = [e.operation, e.scope, e.expression.type].join("-"),
                                    n = this._fns[t];
                                if (!n) throw new Error("couldn't resolve key: " + t);
                                return n.bind(this)
                            }, s.prototype.register = function (e, t) {
                                if (!t instanceof Function) throw new Error("handler must be a function");
                                this._fns[e] = t
                            }, s.prototype._fns = {
                                "member-child-identifier": function (e, t) {
                                    var n = e.expression.value,
                                        r = t.value;
                                    if (r instanceof Object && n in r) return [{
                                        value: r[n],
                                        path: t.path.concat(n)
                                    }]
                                },
                                "member-descendant-identifier": f(function (e, t, n) {
                                    return e == n
                                }),
                                "subscript-child-numeric_literal": p(function (e, t, n) {
                                    return e === n
                                }),
                                "member-child-numeric_literal": p(function (e, t, n) {
                                    return String(e) === String(n)
                                }),
                                "subscript-descendant-numeric_literal": f(function (e, t, n) {
                                    return e === n
                                }),
                                "member-child-wildcard": p(function () {
                                    return !0
                                }),
                                "member-descendant-wildcard": f(function () {
                                    return !0
                                }),
                                "subscript-descendant-wildcard": f(function () {
                                    return !0
                                }),
                                "subscript-child-wildcard": p(function () {
                                    return !0
                                }),
                                "subscript-child-slice": function (e, t) {
                                    if (u(t.value)) {
                                        var n = e.expression.value.split(":").map(y),
                                            r = t.value.map(function (e, n) {
                                                return {
                                                    value: e,
                                                    path: t.path.concat(n)
                                                }
                                            });
                                        return i.apply(null, [r].concat(n))
                                    }
                                },
                                "subscript-child-union": function (e, t) {
                                    var n = [];
                                    return e.expression.value.forEach(function (e) {
                                        var r = {
                                            operation: "subscript",
                                            scope: "child",
                                            expression: e.expression
                                        },
                                            i = this.resolve(r)(r, t);
                                        i && (n = n.concat(i))
                                    }, this), d(n)
                                },
                                "subscript-descendant-union": function (t, n, r) {
                                    var i = e(".."),
                                        a = this,
                                        o = [];
                                    return i.nodes(n, "$..*").slice(1).forEach(function (e) {
                                        o.length >= r || t.expression.value.forEach(function (t) {
                                            var n = {
                                                operation: "subscript",
                                                scope: "child",
                                                expression: t.expression
                                            },
                                                r = a.resolve(n)(n, e);
                                            o = o.concat(r)
                                        })
                                    }), d(o)
                                },
                                "subscript-child-filter_expression": function (e, t, n) {
                                    var i = e.expression.value.slice(2, -1),
                                        a = r.parse(i).body[0].expression;
                                    return this.descend(t, null, function (e, t) {
                                        return h(a, {
                                            "@": t
                                        })
                                    }, n)
                                },
                                "subscript-descendant-filter_expression": function (e, t, n) {
                                    var i = e.expression.value.slice(2, -1),
                                        a = r.parse(i).body[0].expression;
                                    return this.traverse(t, null, function (e, t) {
                                        return h(a, {
                                            "@": t
                                        })
                                    }, n)
                                },
                                "subscript-child-script_expression": function (e, t) {
                                    return c(t, e.expression.value.slice(1, -1), "$[{{value}}]")
                                },
                                "member-child-script_expression": function (e, t) {
                                    return c(t, e.expression.value.slice(1, -1), "$.{{value}}")
                                },
                                "member-descendant-script_expression": function (e, t) {
                                    return c(t, e.expression.value.slice(1, -1), "$..value")
                                }
                            }, s.prototype._fns["subscript-child-string_literal"] = s.prototype._fns["member-child-identifier"], s.prototype._fns["member-descendant-numeric_literal"] = s.prototype._fns["subscript-descendant-string_literal"] = s.prototype._fns["member-descendant-identifier"], t.exports = s
                        }, {
                            "..": "jsonpath",
                            "./aesprim": "./aesprim",
                            "./index": 5,
                            "./slice": 7,
                            "static-eval": 15,
                            underscore: 12
                        }],
                        5: [function (e, t, n) {
                            var r = e("assert"),
                                i = e("./dict"),
                                a = e("./parser"),
                                o = e("./handlers"),
                                s = function () {
                                    this.initialize.apply(this, arguments)
                                };
  
                            function c(e) {
                                return "[object String]" == Object.prototype.toString.call(e)
                            }
                            s.prototype.initialize = function () {
                                this.parser = new a, this.handlers = new o
                            }, s.prototype.parse = function (e) {
                                return r.ok(c(e), "we need a path"), this.parser.parse(e)
                            }, s.prototype.parent = function (e, t) {
                                r.ok(e instanceof Object, "obj needs to be an object"), r.ok(t, "we need a path");
                                var n = this.nodes(e, t)[0];
                                n.path.pop();
                                return this.value(e, n.path)
                            }, s.prototype.apply = function (e, t, n) {
                                r.ok(e instanceof Object, "obj needs to be an object"), r.ok(t, "we need a path"), r.equal(typeof n, "function", "fn needs to be function");
                                var i = this.nodes(e, t).sort(function (e, t) {
                                    return t.path.length - e.path.length
                                });
                                return i.forEach(function (t) {
                                    var r = t.path.pop(),
                                        i = this.value(e, this.stringify(t.path)),
                                        a = t.value = n.call(e, i[r]);
                                    i[r] = a
                                }, this), i
                            }, s.prototype.value = function (e, t, n) {
                                if (r.ok(e instanceof Object, "obj needs to be an object"), r.ok(t, "we need a path"), arguments.length >= 3) {
                                    var i = this.nodes(e, t).shift();
                                    if (!i) return this._vivify(e, t, n);
                                    var a = i.path.slice(-1).shift();
                                    this.parent(e, this.stringify(i.path))[a] = n
                                }
                                return this.query(e, this.stringify(t), 1).shift()
                            }, s.prototype._vivify = function (e, t, n) {
                                var i = this;
                                r.ok(e instanceof Object, "obj needs to be an object"), r.ok(t, "we need a path");
                                var a = this.parser.parse(t).map(function (e) {
                                    return e.expression.value
                                }),
                                    o = function (t, n) {
                                        var r = t.pop(),
                                            a = i.value(e, t);
                                        a || (o(t.concat(), "string" == typeof r ? {} : []), a = i.value(e, t)), a[r] = n
                                    };
                                return o(a, n), this.query(e, t)[0]
                            }, s.prototype.query = function (e, t, n) {
                                return r.ok(e instanceof Object, "obj needs to be an object"), r.ok(c(t), "we need a path"), this.nodes(e, t, n).map(function (e) {
                                    return e.value
                                })
                            }, s.prototype.paths = function (e, t, n) {
                                return r.ok(e instanceof Object, "obj needs to be an object"), r.ok(t, "we need a path"), this.nodes(e, t, n).map(function (e) {
                                    return e.path
                                })
                            }, s.prototype.nodes = function (e, t, n) {
                                if (r.ok(e instanceof Object, "obj needs to be an object"), r.ok(t, "we need a path"), 0 === n) return [];
                                var i = this.parser.parse(t),
                                    a = this.handlers,
                                    o = [{
                                        path: ["$"],
                                        value: e
                                    }],
                                    s = [];
                                return i.length && "root" == i[0].expression.type && i.shift(), i.length ? (i.forEach(function (e, t) {
                                    if (!(s.length >= n)) {
                                        var r = a.resolve(e),
                                            c = [];
                                        o.forEach(function (a) {
                                            if (!(s.length >= n)) {
                                                var o = r(e, a, n);
                                                t == i.length - 1 ? s = s.concat(o || []) : c = c.concat(o || [])
                                            }
                                        }), o = c
                                    }
                                }), n ? s.slice(0, n) : s) : o
                            }, s.prototype.stringify = function (e) {
                                r.ok(e, "we need a path");
                                var t = "$",
                                    n = {
                                        "descendant-member": "..{{value}}",
                                        "child-member": ".{{value}}",
                                        "descendant-subscript": "..[{{value}}]",
                                        "child-subscript": "[{{value}}]"
                                    };
                                return (e = this._normalize(e)).forEach(function (e) {
                                    if ("root" != e.expression.type) {
                                        var r, i = [e.scope, e.operation].join("-"),
                                            a = n[i];
                                        if (r = "string_literal" == e.expression.type ? JSON.stringify(e.expression.value) : e.expression.value, !a) throw new Error("couldn't find template " + i);
                                        t += a.replace(/{{value}}/, r)
                                    }
                                }), t
                            }, s.prototype._normalize = function (e) {
                                if (r.ok(e, "we need a path"), "string" == typeof e) return this.parser.parse(e);
                                if (Array.isArray(e) && "string" == typeof e[0]) {
                                    var t = [{
                                        expression: {
                                            type: "root",
                                            value: "$"
                                        }
                                    }];
                                    return e.forEach(function (e, n) {
                                        if ("$" != e || 0 !== n)
                                            if ("string" == typeof e && e.match("^" + i.identifier + "$")) t.push({
                                                operation: "member",
                                                scope: "child",
                                                expression: {
                                                    value: e,
                                                    type: "identifier"
                                                }
                                            });
                                            else {
                                                var r = "number" == typeof e ? "numeric_literal" : "string_literal";
                                                t.push({
                                                    operation: "subscript",
                                                    scope: "child",
                                                    expression: {
                                                        value: e,
                                                        type: r
                                                    }
                                                })
                                            }
                                    }), t
                                }
                                if (Array.isArray(e) && "object" == typeof e[0]) return e;
                                throw new Error("couldn't understand path " + e)
                            }, s.Handlers = o, s.Parser = a;
                            var u = new s;
                            u.JSONPath = s, t.exports = u
                        }, {
                            "./dict": 2,
                            "./handlers": 4,
                            "./parser": 6,
                            assert: 8
                        }],
                        6: [function (e, t, n) {
                            var r = e("./grammar"),
                                i = e("../generated/parser"),
                                a = function () {
                                    var e = new i.Parser,
                                        t = e.parseError;
                                    return e.yy.parseError = function () {
                                        e.yy.ast && e.yy.ast.initialize(), t.apply(e, arguments)
                                    }, e
                                };
                            a.grammar = r, t.exports = a
                        }, {
                            "../generated/parser": 1,
                            "./grammar": 3
                        }],
                        7: [function (e, t, n) {
                            function r(e) {
                                return String(e).match(/^[0-9]+$/) ? parseInt(e) : Number.isFinite(e) ? parseInt(e, 10) : 0
                            }
                            t.exports = function (e, t, n, i) {
                                if ("string" == typeof t) throw new Error("start cannot be a string");
                                if ("string" == typeof n) throw new Error("end cannot be a string");
                                if ("string" == typeof i) throw new Error("step cannot be a string");
                                var a = e.length;
                                if (0 === i) throw new Error("step cannot be zero");
                                if (i = i ? r(i) : 1, n = n < 0 ? a + n : n, t = r(0 === (t = t < 0 ? a + t : t) ? 0 : t || (i > 0 ? 0 : a - 1)), n = r(0 === n ? 0 : n || (i > 0 ? a : -1)), t = i > 0 ? Math.max(0, t) : Math.min(a, t), n = i > 0 ? Math.min(n, a) : Math.max(-1, n), i > 0 && n <= t) return [];
                                if (i < 0 && t <= n) return [];
                                for (var o = [], s = t; s != n && !(i < 0 && s <= n || i > 0 && s >= n); s += i) o.push(e[s]);
                                return o
                            }
                        }, {}],
                        8: [function (e, t, n) {
                            var r = e("util/"),
                                i = Array.prototype.slice,
                                a = Object.prototype.hasOwnProperty,
                                o = t.exports = l;
  
                            function s(e, t) {
                                return r.isUndefined(t) ? "" + t : r.isNumber(t) && !isFinite(t) ? t.toString() : r.isFunction(t) || r.isRegExp(t) ? t.toString() : t
                            }
  
                            function c(e, t) {
                                return r.isString(e) ? e.length < t ? e : e.slice(0, t) : e
                            }
  
                            function u(e, t, n, r, i) {
                                throw new o.AssertionError({
                                    message: n,
                                    actual: e,
                                    expected: t,
                                    operator: r,
                                    stackStartFunction: i
                                })
                            }
  
                            function l(e, t) {
                                e || u(e, !0, t, "==", o.ok)
                            }
  
                            function p(e, t) {
                                if (e === t) return !0;
                                if (r.isBuffer(e) && r.isBuffer(t)) {
                                    if (e.length != t.length) return !1;
                                    for (var n = 0; n < e.length; n++)
                                        if (e[n] !== t[n]) return !1;
                                    return !0
                                }
                                return r.isDate(e) && r.isDate(t) ? e.getTime() === t.getTime() : r.isRegExp(e) && r.isRegExp(t) ? e.source === t.source && e.global === t.global && e.multiline === t.multiline && e.lastIndex === t.lastIndex && e.ignoreCase === t.ignoreCase : r.isObject(e) || r.isObject(t) ? function (e, t) {
                                    if (r.isNullOrUndefined(e) || r.isNullOrUndefined(t)) return !1;
                                    if (e.prototype !== t.prototype) return !1;
                                    if (r.isPrimitive(e) || r.isPrimitive(t)) return e === t;
                                    var n = f(e),
                                        a = f(t);
                                    if (n && !a || !n && a) return !1;
                                    if (n) return e = i.call(e), t = i.call(t), p(e, t);
                                    var o, s, c = y(e),
                                        u = y(t);
                                    if (c.length != u.length) return !1;
                                    for (c.sort(), u.sort(), s = c.length - 1; s >= 0; s--)
                                        if (c[s] != u[s]) return !1;
                                    for (s = c.length - 1; s >= 0; s--)
                                        if (o = c[s], !p(e[o], t[o])) return !1;
                                    return !0
                                }(e, t) : e == t
                            }
  
                            function f(e) {
                                return "[object Arguments]" == Object.prototype.toString.call(e)
                            }
  
                            function h(e, t) {
                                return !(!e || !t) && ("[object RegExp]" == Object.prototype.toString.call(t) ? t.test(e) : e instanceof t || !0 === t.call({}, e))
                            }
  
                            function d(e, t, n, i) {
                                var a;
                                r.isString(n) && (i = n, n = null);
                                try {
                                    t()
                                } catch (e) {
                                    a = e
                                }
                                if (i = (n && n.name ? " (" + n.name + ")." : ".") + (i ? " " + i : "."), e && !a && u(a, n, "Missing expected exception" + i), !e && h(a, n) && u(a, n, "Got unwanted exception" + i), e && a && n && !h(a, n) || !e && a) throw a
                            }
                            o.AssertionError = function (e) {
                                var t;
                                this.name = "AssertionError", this.actual = e.actual, this.expected = e.expected, this.operator = e.operator, e.message ? (this.message = e.message, this.generatedMessage = !1) : (this.message = (t = this, c(JSON.stringify(t.actual, s), 128) + " " + t.operator + " " + c(JSON.stringify(t.expected, s), 128)), this.generatedMessage = !0);
                                var n = e.stackStartFunction || u;
                                if (Error.captureStackTrace) Error.captureStackTrace(this, n);
                                else {
                                    var r = new Error;
                                    if (r.stack) {
                                        var i = r.stack,
                                            a = n.name,
                                            o = i.indexOf("\n" + a);
                                        if (o >= 0) {
                                            var l = i.indexOf("\n", o + 1);
                                            i = i.substring(l + 1)
                                        }
                                        this.stack = i
                                    }
                                }
                            }, r.inherits(o.AssertionError, Error), o.fail = u, o.ok = l, o.equal = function (e, t, n) {
                                e != t && u(e, t, n, "==", o.equal)
                            }, o.notEqual = function (e, t, n) {
                                e == t && u(e, t, n, "!=", o.notEqual)
                            }, o.deepEqual = function (e, t, n) {
                                p(e, t) || u(e, t, n, "deepEqual", o.deepEqual)
                            }, o.notDeepEqual = function (e, t, n) {
                                p(e, t) && u(e, t, n, "notDeepEqual", o.notDeepEqual)
                            }, o.strictEqual = function (e, t, n) {
                                e !== t && u(e, t, n, "===", o.strictEqual)
                            }, o.notStrictEqual = function (e, t, n) {
                                e === t && u(e, t, n, "!==", o.notStrictEqual)
                            }, o.throws = function (e, t, n) {
                                d.apply(this, [!0].concat(i.call(arguments)))
                            }, o.doesNotThrow = function (e, t) {
                                d.apply(this, [!1].concat(i.call(arguments)))
                            }, o.ifError = function (e) {
                                if (e) throw e
                            };
                            var y = Object.keys || function (e) {
                                var t = [];
                                for (var n in e) a.call(e, n) && t.push(n);
                                return t
                            }
                        }, {
                            "util/": 11
                        }],
                        9: [function (e, t, n) {
                            "function" == typeof Object.create ? t.exports = function (e, t) {
                                e.super_ = t, e.prototype = Object.create(t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                })
                            } : t.exports = function (e, t) {
                                e.super_ = t;
                                var n = function () { };
                                n.prototype = t.prototype, e.prototype = new n, e.prototype.constructor = e
                            }
                        }, {}],
                        10: [function (e, t, n) {
                            t.exports = function (e) {
                                return e && "object" == typeof e && "function" == typeof e.copy && "function" == typeof e.fill && "function" == typeof e.readUInt8
                            }
                        }, {}],
                        11: [function (e, t, n) {
                            (function (t, r) {
                                var i = /%[sdj%]/g;
                                n.format = function (e) {
                                    if (!g(e)) {
                                        for (var t = [], n = 0; n < arguments.length; n++) t.push(s(arguments[n]));
                                        return t.join(" ")
                                    }
                                    n = 1;
                                    for (var r = arguments, a = r.length, o = String(e).replace(i, function (e) {
                                        if ("%%" === e) return "%";
                                        if (n >= a) return e;
                                        switch (e) {
                                            case "%s":
                                                return String(r[n++]);
                                            case "%d":
                                                return Number(r[n++]);
                                            case "%j":
                                                try {
                                                    return JSON.stringify(r[n++])
                                                } catch (e) {
                                                    return "[Circular]"
                                                }
                                            default:
                                                return e
                                        }
                                    }), c = r[n]; n < a; c = r[++n]) y(c) || !E(c) ? o += " " + c : o += " " + s(c);
                                    return o
                                }, n.deprecate = function (e, i) {
                                    if (v(r.process)) return function () {
                                        return n.deprecate(e, i).apply(this, arguments)
                                    };
                                    if (!0 === t.noDeprecation) return e;
                                    var a = !1;
                                    return function () {
                                        if (!a) {
                                            if (t.throwDeprecation) throw new Error(i);
                                            t.traceDeprecation ? console.trace(i) : console.error(i), a = !0
                                        }
                                        return e.apply(this, arguments)
                                    }
                                };
                                var a, o = {};
  
                                function s(e, t) {
                                    var r = {
                                        seen: [],
                                        stylize: u
                                    };
                                    return arguments.length >= 3 && (r.depth = arguments[2]), arguments.length >= 4 && (r.colors = arguments[3]), d(t) ? r.showHidden = t : t && n._extend(r, t), v(r.showHidden) && (r.showHidden = !1), v(r.depth) && (r.depth = 2), v(r.colors) && (r.colors = !1), v(r.customInspect) && (r.customInspect = !0), r.colors && (r.stylize = c), l(r, e, r.depth)
                                }
  
                                function c(e, t) {
                                    var n = s.styles[t];
                                    return n ? "[" + s.colors[n][0] + "m" + e + "[" + s.colors[n][1] + "m" : e
                                }
  
                                function u(e, t) {
                                    return e
                                }
  
                                function l(e, t, r) {
                                    if (e.customInspect && t && k(t.inspect) && t.inspect !== n.inspect && (!t.constructor || t.constructor.prototype !== t)) {
                                        var i = t.inspect(r, e);
                                        return g(i) || (i = l(e, i, r)), i
                                    }
                                    var a = function (e, t) {
                                        if (v(t)) return e.stylize("undefined", "undefined");
                                        if (g(t)) {
                                            var n = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                                            return e.stylize(n, "string")
                                        }
                                        if (m(t)) return e.stylize("" + t, "number");
                                        if (d(t)) return e.stylize("" + t, "boolean");
                                        if (y(t)) return e.stylize("null", "null")
                                    }(e, t);
                                    if (a) return a;
                                    var o = Object.keys(t),
                                        s = function (e) {
                                            var t = {};
                                            return e.forEach(function (e, n) {
                                                t[e] = !0
                                            }), t
                                        }(o);
                                    if (e.showHidden && (o = Object.getOwnPropertyNames(t)), x(t) && (o.indexOf("message") >= 0 || o.indexOf("description") >= 0)) return p(t);
                                    if (0 === o.length) {
                                        if (k(t)) {
                                            var c = t.name ? ": " + t.name : "";
                                            return e.stylize("[Function" + c + "]", "special")
                                        }
                                        if (S(t)) return e.stylize(RegExp.prototype.toString.call(t), "regexp");
                                        if (b(t)) return e.stylize(Date.prototype.toString.call(t), "date");
                                        if (x(t)) return p(t)
                                    }
                                    var u, E = "",
                                        I = !1,
                                        _ = ["{", "}"];
                                    (h(t) && (I = !0, _ = ["[", "]"]), k(t)) && (E = " [Function" + (t.name ? ": " + t.name : "") + "]");
                                    return S(t) && (E = " " + RegExp.prototype.toString.call(t)), b(t) && (E = " " + Date.prototype.toUTCString.call(t)), x(t) && (E = " " + p(t)), 0 !== o.length || I && 0 != t.length ? r < 0 ? S(t) ? e.stylize(RegExp.prototype.toString.call(t), "regexp") : e.stylize("[Object]", "special") : (e.seen.push(t), u = I ? function (e, t, n, r, i) {
                                        for (var a = [], o = 0, s = t.length; o < s; ++o) C(t, String(o)) ? a.push(f(e, t, n, r, String(o), !0)) : a.push("");
                                        return i.forEach(function (i) {
                                            i.match(/^\d+$/) || a.push(f(e, t, n, r, i, !0))
                                        }), a
                                    }(e, t, r, s, o) : o.map(function (n) {
                                        return f(e, t, r, s, n, I)
                                    }), e.seen.pop(), function (e, t, n) {
                                        if (e.reduce(function (e, t) {
                                            return 0, t.indexOf("\n") >= 0 && 0, e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
                                        }, 0) > 60) return n[0] + ("" === t ? "" : t + "\n ") + " " + e.join(",\n  ") + " " + n[1];
                                        return n[0] + t + " " + e.join(", ") + " " + n[1]
                                    }(u, E, _)) : _[0] + E + _[1]
                                }
  
                                function p(e) {
                                    return "[" + Error.prototype.toString.call(e) + "]"
                                }
  
                                function f(e, t, n, r, i, a) {
                                    var o, s, c;
                                    if ((c = Object.getOwnPropertyDescriptor(t, i) || {
                                        value: t[i]
                                    }).get ? s = c.set ? e.stylize("[Getter/Setter]", "special") : e.stylize("[Getter]", "special") : c.set && (s = e.stylize("[Setter]", "special")), C(r, i) || (o = "[" + i + "]"), s || (e.seen.indexOf(c.value) < 0 ? (s = y(n) ? l(e, c.value, null) : l(e, c.value, n - 1)).indexOf("\n") > -1 && (s = a ? s.split("\n").map(function (e) {
                                        return "  " + e
                                    }).join("\n").substr(2) : "\n" + s.split("\n").map(function (e) {
                                        return "   " + e
                                    }).join("\n")) : s = e.stylize("[Circular]", "special")), v(o)) {
                                        if (a && i.match(/^\d+$/)) return s;
                                        (o = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (o = o.substr(1, o.length - 2), o = e.stylize(o, "name")) : (o = o.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), o = e.stylize(o, "string"))
                                    }
                                    return o + ": " + s
                                }
  
                                function h(e) {
                                    return Array.isArray(e)
                                }
  
                                function d(e) {
                                    return "boolean" == typeof e
                                }
  
                                function y(e) {
                                    return null === e
                                }
  
                                function m(e) {
                                    return "number" == typeof e
                                }
  
                                function g(e) {
                                    return "string" == typeof e
                                }
  
                                function v(e) {
                                    return void 0 === e
                                }
  
                                function S(e) {
                                    return E(e) && "[object RegExp]" === I(e)
                                }
  
                                function E(e) {
                                    return "object" == typeof e && null !== e
                                }
  
                                function b(e) {
                                    return E(e) && "[object Date]" === I(e)
                                }
  
                                function x(e) {
                                    return E(e) && ("[object Error]" === I(e) || e instanceof Error)
                                }
  
                                function k(e) {
                                    return "function" == typeof e
                                }
  
                                function I(e) {
                                    return Object.prototype.toString.call(e)
                                }
  
                                function _(e) {
                                    return e < 10 ? "0" + e.toString(10) : e.toString(10)
                                }
                                n.debuglog = function (e) {
                                    if (v(a) && (a = t.env.NODE_DEBUG || ""), e = e.toUpperCase(), !o[e])
                                        if (new RegExp("\\b" + e + "\\b", "i").test(a)) {
                                            var r = t.pid;
                                            o[e] = function () {
                                                var t = n.format.apply(n, arguments);
                                                console.error("%s %d: %s", e, r, t)
                                            }
                                        } else o[e] = function () { };
                                    return o[e]
                                }, n.inspect = s, s.colors = {
                                    bold: [1, 22],
                                    italic: [3, 23],
                                    underline: [4, 24],
                                    inverse: [7, 27],
                                    white: [37, 39],
                                    grey: [90, 39],
                                    black: [30, 39],
                                    blue: [34, 39],
                                    cyan: [36, 39],
                                    green: [32, 39],
                                    magenta: [35, 39],
                                    red: [31, 39],
                                    yellow: [33, 39]
                                }, s.styles = {
                                    special: "cyan",
                                    number: "yellow",
                                    boolean: "yellow",
                                    undefined: "grey",
                                    null: "bold",
                                    string: "green",
                                    date: "magenta",
                                    regexp: "red"
                                }, n.isArray = h, n.isBoolean = d, n.isNull = y, n.isNullOrUndefined = function (e) {
                                    return null == e
                                }, n.isNumber = m, n.isString = g, n.isSymbol = function (e) {
                                    return "symbol" == typeof e
                                }, n.isUndefined = v, n.isRegExp = S, n.isObject = E, n.isDate = b, n.isError = x, n.isFunction = k, n.isPrimitive = function (e) {
                                    return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || void 0 === e
                                }, n.isBuffer = e("./support/isBuffer");
                                var w = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  
                                function C(e, t) {
                                    return Object.prototype.hasOwnProperty.call(e, t)
                                }
                                n.log = function () {
                                    var e, t;
                                    console.log("%s - %s", (e = new Date, t = [_(e.getHours()), _(e.getMinutes()), _(e.getSeconds())].join(":"), [e.getDate(), w[e.getMonth()], t].join(" ")), n.format.apply(n, arguments))
                                }, n.inherits = e("inherits"), n._extend = function (e, t) {
                                    if (!t || !E(t)) return e;
                                    for (var n = Object.keys(t), r = n.length; r--;) e[n[r]] = t[n[r]];
                                    return e
                                }
                            }).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                        }, {
                            "./support/isBuffer": 10,
                            _process: 14,
                            inherits: 9
                        }],
                        12: [function (e, t, n) { }, {}],
                        13: [function (e, t, n) {
                            (function (e) {
                                function t(e, t) {
                                    for (var n = 0, r = e.length - 1; r >= 0; r--) {
                                        var i = e[r];
                                        "." === i ? e.splice(r, 1) : ".." === i ? (e.splice(r, 1), n++) : n && (e.splice(r, 1), n--)
                                    }
                                    if (t)
                                        for (; n--; n) e.unshift("..");
                                    return e
                                }
  
                                function r(e, t) {
                                    if (e.filter) return e.filter(t);
                                    for (var n = [], r = 0; r < e.length; r++) t(e[r], r, e) && n.push(e[r]);
                                    return n
                                }
                                n.resolve = function () {
                                    for (var n = "", i = !1, a = arguments.length - 1; a >= -1 && !i; a--) {
                                        var o = a >= 0 ? arguments[a] : e.cwd();
                                        if ("string" != typeof o) throw new TypeError("Arguments to path.resolve must be strings");
                                        o && (n = o + "/" + n, i = "/" === o.charAt(0))
                                    }
                                    return (i ? "/" : "") + (n = t(r(n.split("/"), function (e) {
                                        return !!e
                                    }), !i).join("/")) || "."
                                }, n.normalize = function (e) {
                                    var a = n.isAbsolute(e),
                                        o = "/" === i(e, -1);
                                    return (e = t(r(e.split("/"), function (e) {
                                        return !!e
                                    }), !a).join("/")) || a || (e = "."), e && o && (e += "/"), (a ? "/" : "") + e
                                }, n.isAbsolute = function (e) {
                                    return "/" === e.charAt(0)
                                }, n.join = function () {
                                    var e = Array.prototype.slice.call(arguments, 0);
                                    return n.normalize(r(e, function (e, t) {
                                        if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                                        return e
                                    }).join("/"))
                                }, n.relative = function (e, t) {
                                    function r(e) {
                                        for (var t = 0; t < e.length && "" === e[t]; t++);
                                        for (var n = e.length - 1; n >= 0 && "" === e[n]; n--);
                                        return t > n ? [] : e.slice(t, n - t + 1)
                                    }
                                    e = n.resolve(e).substr(1), t = n.resolve(t).substr(1);
                                    for (var i = r(e.split("/")), a = r(t.split("/")), o = Math.min(i.length, a.length), s = o, c = 0; c < o; c++)
                                        if (i[c] !== a[c]) {
                                            s = c;
                                            break
                                        } var u = [];
                                    for (c = s; c < i.length; c++) u.push("..");
                                    return (u = u.concat(a.slice(s))).join("/")
                                }, n.sep = "/", n.delimiter = ":", n.dirname = function (e) {
                                    if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                                    for (var t = e.charCodeAt(0), n = 47 === t, r = -1, i = !0, a = e.length - 1; a >= 1; --a)
                                        if (47 === (t = e.charCodeAt(a))) {
                                            if (!i) {
                                                r = a;
                                                break
                                            }
                                        } else i = !1;
                                    return -1 === r ? n ? "/" : "." : n && 1 === r ? "/" : e.slice(0, r)
                                }, n.basename = function (e, t) {
                                    var n = function (e) {
                                        "string" != typeof e && (e += "");
                                        var t, n = 0,
                                            r = -1,
                                            i = !0;
                                        for (t = e.length - 1; t >= 0; --t)
                                            if (47 === e.charCodeAt(t)) {
                                                if (!i) {
                                                    n = t + 1;
                                                    break
                                                }
                                            } else - 1 === r && (i = !1, r = t + 1);
                                        return -1 === r ? "" : e.slice(n, r)
                                    }(e);
                                    return t && n.substr(-1 * t.length) === t && (n = n.substr(0, n.length - t.length)), n
                                }, n.extname = function (e) {
                                    "string" != typeof e && (e += "");
                                    for (var t = -1, n = 0, r = -1, i = !0, a = 0, o = e.length - 1; o >= 0; --o) {
                                        var s = e.charCodeAt(o);
                                        if (47 !== s) - 1 === r && (i = !1, r = o + 1), 46 === s ? -1 === t ? t = o : 1 !== a && (a = 1) : -1 !== t && (a = -1);
                                        else if (!i) {
                                            n = o + 1;
                                            break
                                        }
                                    }
                                    return -1 === t || -1 === r || 0 === a || 1 === a && t === r - 1 && t === n + 1 ? "" : e.slice(t, r)
                                };
                                var i = "b" === "ab".substr(-1) ? function (e, t, n) {
                                    return e.substr(t, n)
                                } : function (e, t, n) {
                                    return t < 0 && (t = e.length + t), e.substr(t, n)
                                }
                            }).call(this, e("_process"))
                        }, {
                            _process: 14
                        }],
                        14: [function (e, t, n) {
                            var r, i, a = t.exports = {};
  
                            function o() {
                                throw new Error("setTimeout has not been defined")
                            }
  
                            function s() {
                                throw new Error("clearTimeout has not been defined")
                            }
  
                            function c(e) {
                                if (r === setTimeout) return setTimeout(e, 0);
                                if ((r === o || !r) && setTimeout) return r = setTimeout, setTimeout(e, 0);
                                try {
                                    return r(e, 0)
                                } catch (t) {
                                    try {
                                        return r.call(null, e, 0)
                                    } catch (t) {
                                        return r.call(this, e, 0)
                                    }
                                }
                            } ! function () {
                                try {
                                    r = "function" == typeof setTimeout ? setTimeout : o
                                } catch (e) {
                                    r = o
                                }
                                try {
                                    i = "function" == typeof clearTimeout ? clearTimeout : s
                                } catch (e) {
                                    i = s
                                }
                            }();
                            var u, l = [],
                                p = !1,
                                f = -1;
  
                            function h() {
                                p && u && (p = !1, u.length ? l = u.concat(l) : f = -1, l.length && d())
                            }
  
                            function d() {
                                if (!p) {
                                    var e = c(h);
                                    p = !0;
                                    for (var t = l.length; t;) {
                                        for (u = l, l = []; ++f < t;) u && u[f].run();
                                        f = -1, t = l.length
                                    }
                                    u = null, p = !1,
                                        function (e) {
                                            if (i === clearTimeout) return clearTimeout(e);
                                            if ((i === s || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e);
                                            try {
                                                i(e)
                                            } catch (t) {
                                                try {
                                                    return i.call(null, e)
                                                } catch (t) {
                                                    return i.call(this, e)
                                                }
                                            }
                                        }(e)
                                }
                            }
  
                            function y(e, t) {
                                this.fun = e, this.array = t
                            }
  
                            function m() { }
                            a.nextTick = function (e) {
                                var t = new Array(arguments.length - 1);
                                if (arguments.length > 1)
                                    for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                                l.push(new y(e, t)), 1 !== l.length || p || c(d)
                            }, y.prototype.run = function () {
                                this.fun.apply(null, this.array)
                            }, a.title = "browser", a.browser = !0, a.env = {}, a.argv = [], a.version = "", a.versions = {}, a.on = m, a.addListener = m, a.once = m, a.off = m, a.removeListener = m, a.removeAllListeners = m, a.emit = m, a.prependListener = m, a.prependOnceListener = m, a.listeners = function (e) {
                                return []
                            }, a.binding = function (e) {
                                throw new Error("process.binding is not supported")
                            }, a.cwd = function () {
                                return "/"
                            }, a.chdir = function (e) {
                                throw new Error("process.chdir is not supported")
                            }, a.umask = function () {
                                return 0
                            }
                        }, {}],
                        15: [function (e, t, n) {
                            var r = e("escodegen").generate;
                            t.exports = function (e, t) {
                                t || (t = {});
                                var n = {},
                                    i = function e(i, a) {
                                        if ("Literal" === i.type) return i.value;
                                        if ("UnaryExpression" === i.type) {
                                            var o = e(i.argument);
                                            return "+" === i.operator ? +o : "-" === i.operator ? -o : "~" === i.operator ? ~o : "!" === i.operator ? !o : n
                                        }
                                        if ("ArrayExpression" === i.type) {
                                            for (var s = [], c = 0, u = i.elements.length; c < u; c++) {
                                                if ((g = e(i.elements[c])) === n) return n;
                                                s.push(g)
                                            }
                                            return s
                                        }
                                        if ("ObjectExpression" === i.type) {
                                            var l = {};
                                            for (c = 0; c < i.properties.length; c++) {
                                                var p = null === (v = i.properties[c]).value ? v.value : e(v.value);
                                                if (p === n) return n;
                                                l[v.key.value || v.key.name] = p
                                            }
                                            return l
                                        }
                                        if ("BinaryExpression" === i.type || "LogicalExpression" === i.type) {
                                            if ((u = e(i.left)) === n) return n;
                                            var f = e(i.right);
                                            if (f === n) return n;
                                            var h = i.operator;
                                            return "==" === h ? u == f : "===" === h ? u === f : "!=" === h ? u != f : "!==" === h ? u !== f : "+" === h ? u + f : "-" === h ? u - f : "*" === h ? u * f : "/" === h ? u / f : "%" === h ? u % f : "<" === h ? u < f : "<=" === h ? u <= f : ">" === h ? u > f : ">=" === h ? u >= f : "|" === h ? u | f : "&" === h ? u & f : "^" === h ? u ^ f : "&&" === h ? u && f : "||" === h ? u || f : n
                                        }
                                        if ("Identifier" === i.type) return {}.hasOwnProperty.call(t, i.name) ? t[i.name] : n;
                                        if ("ThisExpression" === i.type) return {}.hasOwnProperty.call(t, "this") ? t.this : n;
                                        if ("CallExpression" === i.type) {
                                            var d = e(i.callee);
                                            if (d === n) return n;
                                            if ("function" != typeof d) return n;
                                            var y = i.callee.object ? e(i.callee.object) : n;
                                            y === n && (y = null);
                                            var m = [];
                                            for (c = 0, u = i.arguments.length; c < u; c++) {
                                                var g;
                                                if ((g = e(i.arguments[c])) === n) return n;
                                                m.push(g)
                                            }
                                            return d.apply(y, m)
                                        }
                                        var v;
                                        if ("MemberExpression" === i.type) return (l = e(i.object)) === n || "function" == typeof l ? n : "Identifier" === i.property.type ? l[i.property.name] : (v = e(i.property)) === n ? n : l[v];
                                        if ("ConditionalExpression" === i.type) return (o = e(i.test)) === n ? n : e(o ? i.consequent : i.alternate);
                                        if ("ExpressionStatement" === i.type) return (o = e(i.expression)) === n ? n : o;
                                        if ("ReturnStatement" === i.type) return e(i.argument);
                                        if ("FunctionExpression" === i.type) {
                                            var S = i.body.body,
                                                E = {};
                                            Object.keys(t).forEach(function (e) {
                                                E[e] = t[e]
                                            });
                                            for (c = 0; c < i.params.length; c++) {
                                                var b = i.params[c];
                                                if ("Identifier" != b.type) return n;
                                                t[b.name] = null
                                            }
                                            for (var c in S)
                                                if (e(S[c]) === n) return n;
                                            t = E;
                                            var x = Object.keys(t),
                                                k = x.map(function (e) {
                                                    return t[e]
                                                });
                                            return Function(x.join(", "), "return " + r(i)).apply(null, k)
                                        }
                                        if ("TemplateLiteral" === i.type) {
                                            var I = "";
                                            for (c = 0; c < i.expressions.length; c++) I += e(i.quasis[c]), I += e(i.expressions[c]);
                                            return I += e(i.quasis[c])
                                        }
                                        if ("TaggedTemplateExpression" === i.type) {
                                            var _ = e(i.tag),
                                                w = i.quasi,
                                                C = w.quasis.map(e),
                                                O = w.expressions.map(e);
                                            return _.apply(null, [C].concat(O))
                                        }
                                        return "TemplateElement" === i.type ? i.value.cooked : n
                                    }(e);
                                return i === n ? void 0 : i
                            }
                        }, {
                            escodegen: 12
                        }],
                        jsonpath: [function (e, t, n) {
                            t.exports = e("./lib/index")
                        }, {
                            "./lib/index": 5
                        }]
                    }, {}, ["jsonpath"])("jsonpath")
                });
  
            }).call(this)
        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}],
    59: [function (require, module, exports) {
        ! function (e, t) {
            "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.moment = t()
        }(this, function () {
            "use strict";
            var e, t;
  
            function n() {
                return e.apply(null, arguments)
            }
  
            function s(e) {
                return e instanceof Array || "[object Array]" === Object.prototype.toString.call(e)
            }
  
            function i(e) {
                return null != e && "[object Object]" === Object.prototype.toString.call(e)
            }
  
            function r(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
  
            function a(e) {
                if (Object.getOwnPropertyNames) return 0 === Object.getOwnPropertyNames(e).length;
                var t;
                for (t in e)
                    if (r(e, t)) return !1;
                return !0
            }
  
            function o(e) {
                return void 0 === e
            }
  
            function u(e) {
                return "number" == typeof e || "[object Number]" === Object.prototype.toString.call(e)
            }
  
            function l(e) {
                return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e)
            }
  
            function d(e, t) {
                var n, s = [],
                    i = e.length;
                for (n = 0; n < i; ++n) s.push(t(e[n], n));
                return s
            }
  
            function h(e, t) {
                for (var n in t) r(t, n) && (e[n] = t[n]);
                return r(t, "toString") && (e.toString = t.toString), r(t, "valueOf") && (e.valueOf = t.valueOf), e
            }
  
            function c(e, t, n, s) {
                return xt(e, t, n, s, !0).utc()
            }
  
            function f(e) {
                return null == e._pf && (e._pf = {
                    empty: !1,
                    unusedTokens: [],
                    unusedInput: [],
                    overflow: -2,
                    charsLeftOver: 0,
                    nullInput: !1,
                    invalidEra: null,
                    invalidMonth: null,
                    invalidFormat: !1,
                    userInvalidated: !1,
                    iso: !1,
                    parsedDateParts: [],
                    era: null,
                    meridiem: null,
                    rfc2822: !1,
                    weekdayMismatch: !1
                }), e._pf
            }
  
            function m(e) {
                var n = null,
                    s = !1,
                    i = e._d && !isNaN(e._d.getTime());
                return i && (n = f(e), s = t.call(n.parsedDateParts, function (e) {
                    return null != e
                }), i = n.overflow < 0 && !n.empty && !n.invalidEra && !n.invalidMonth && !n.invalidWeekday && !n.weekdayMismatch && !n.nullInput && !n.invalidFormat && !n.userInvalidated && (!n.meridiem || n.meridiem && s), e._strict && (i = i && 0 === n.charsLeftOver && 0 === n.unusedTokens.length && void 0 === n.bigHour)), null != Object.isFrozen && Object.isFrozen(e) ? i : (e._isValid = i, e._isValid)
            }
  
            function _(e) {
                var t = c(NaN);
                return null != e ? h(f(t), e) : f(t).userInvalidated = !0, t
            }
            t = Array.prototype.some ? Array.prototype.some : function (e) {
                var t, n = Object(this),
                    s = n.length >>> 0;
                for (t = 0; t < s; t++)
                    if (t in n && e.call(this, n[t], t, n)) return !0;
                return !1
            };
            var y = n.momentProperties = [],
                g = !1;
  
            function w(e, t) {
                var n, s, i, r = y.length;
                if (o(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject), o(t._i) || (e._i = t._i), o(t._f) || (e._f = t._f), o(t._l) || (e._l = t._l), o(t._strict) || (e._strict = t._strict), o(t._tzm) || (e._tzm = t._tzm), o(t._isUTC) || (e._isUTC = t._isUTC), o(t._offset) || (e._offset = t._offset), o(t._pf) || (e._pf = f(t)), o(t._locale) || (e._locale = t._locale), r > 0)
                    for (n = 0; n < r; n++) o(i = t[s = y[n]]) || (e[s] = i);
                return e
            }
  
            function p(e) {
                w(this, e), this._d = new Date(null != e._d ? e._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), !1 === g && (g = !0, n.updateOffset(this), g = !1)
            }
  
            function v(e) {
                return e instanceof p || null != e && null != e._isAMomentObject
            }
  
            function k(e) {
                !1 === n.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e)
            }
  
            function M(e, t) {
                var s = !0;
                return h(function () {
                    if (null != n.deprecationHandler && n.deprecationHandler(null, e), s) {
                        var i, a, o, u = [],
                            l = arguments.length;
                        for (a = 0; a < l; a++) {
                            if (i = "", "object" == typeof arguments[a]) {
                                for (o in i += "\n[" + a + "] ", arguments[0]) r(arguments[0], o) && (i += o + ": " + arguments[0][o] + ", ");
                                i = i.slice(0, -2)
                            } else i = arguments[a];
                            u.push(i)
                        }
                        k(e + "\nArguments: " + Array.prototype.slice.call(u).join("") + "\n" + (new Error).stack), s = !1
                    }
                    return t.apply(this, arguments)
                }, t)
            }
            var D, Y = {};
  
            function S(e, t) {
                null != n.deprecationHandler && n.deprecationHandler(e, t), Y[e] || (k(t), Y[e] = !0)
            }
  
            function O(e) {
                return "undefined" != typeof Function && e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
            }
  
            function b(e, t) {
                var n, s = h({}, e);
                for (n in t) r(t, n) && (i(e[n]) && i(t[n]) ? (s[n] = {}, h(s[n], e[n]), h(s[n], t[n])) : null != t[n] ? s[n] = t[n] : delete s[n]);
                for (n in e) r(e, n) && !r(t, n) && i(e[n]) && (s[n] = h({}, s[n]));
                return s
            }
  
            function T(e) {
                null != e && this.set(e)
            }
            n.suppressDeprecationWarnings = !1, n.deprecationHandler = null, D = Object.keys ? Object.keys : function (e) {
                var t, n = [];
                for (t in e) r(e, t) && n.push(t);
                return n
            };
  
            function x(e, t, n) {
                var s = "" + Math.abs(e),
                    i = t - s.length;
                return (e >= 0 ? n ? "+" : "" : "-") + Math.pow(10, Math.max(0, i)).toString().substr(1) + s
            }
            var N = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
                W = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
                P = {},
                R = {};
  
            function C(e, t, n, s) {
                var i = s;
                "string" == typeof s && (i = function () {
                    return this[s]()
                }), e && (R[e] = i), t && (R[t[0]] = function () {
                    return x(i.apply(this, arguments), t[1], t[2])
                }), n && (R[n] = function () {
                    return this.localeData().ordinal(i.apply(this, arguments), e)
                })
            }
  
            function U(e, t) {
                return e.isValid() ? (t = H(t, e.localeData()), P[t] = P[t] || function (e) {
                    var t, n, s, i = e.match(N);
                    for (t = 0, n = i.length; t < n; t++) R[i[t]] ? i[t] = R[i[t]] : i[t] = (s = i[t]).match(/\[[\s\S]/) ? s.replace(/^\[|\]$/g, "") : s.replace(/\\/g, "");
                    return function (t) {
                        var s, r = "";
                        for (s = 0; s < n; s++) r += O(i[s]) ? i[s].call(t, e) : i[s];
                        return r
                    }
                }(t), P[t](e)) : e.localeData().invalidDate()
            }
  
            function H(e, t) {
                var n = 5;
  
                function s(e) {
                    return t.longDateFormat(e) || e
                }
                for (W.lastIndex = 0; n >= 0 && W.test(e);) e = e.replace(W, s), W.lastIndex = 0, n -= 1;
                return e
            }
            var F = {
                D: "date",
                dates: "date",
                date: "date",
                d: "day",
                days: "day",
                day: "day",
                e: "weekday",
                weekdays: "weekday",
                weekday: "weekday",
                E: "isoWeekday",
                isoweekdays: "isoWeekday",
                isoweekday: "isoWeekday",
                DDD: "dayOfYear",
                dayofyears: "dayOfYear",
                dayofyear: "dayOfYear",
                h: "hour",
                hours: "hour",
                hour: "hour",
                ms: "millisecond",
                milliseconds: "millisecond",
                millisecond: "millisecond",
                m: "minute",
                minutes: "minute",
                minute: "minute",
                M: "month",
                months: "month",
                month: "month",
                Q: "quarter",
                quarters: "quarter",
                quarter: "quarter",
                s: "second",
                seconds: "second",
                second: "second",
                gg: "weekYear",
                weekyears: "weekYear",
                weekyear: "weekYear",
                GG: "isoWeekYear",
                isoweekyears: "isoWeekYear",
                isoweekyear: "isoWeekYear",
                w: "week",
                weeks: "week",
                week: "week",
                W: "isoWeek",
                isoweeks: "isoWeek",
                isoweek: "isoWeek",
                y: "year",
                years: "year",
                year: "year"
            };
  
            function L(e) {
                return "string" == typeof e ? F[e] || F[e.toLowerCase()] : void 0
            }
  
            function V(e) {
                var t, n, s = {};
                for (n in e) r(e, n) && (t = L(n)) && (s[t] = e[n]);
                return s
            }
            var G = {
                date: 9,
                day: 11,
                weekday: 11,
                isoWeekday: 11,
                dayOfYear: 4,
                hour: 13,
                millisecond: 16,
                minute: 14,
                month: 8,
                quarter: 7,
                second: 15,
                weekYear: 1,
                isoWeekYear: 1,
                week: 5,
                isoWeek: 5,
                year: 1
            };
            var E, A = /\d/,
                j = /\d\d/,
                I = /\d{3}/,
                Z = /\d{4}/,
                z = /[+-]?\d{6}/,
                q = /\d\d?/,
                $ = /\d\d\d\d?/,
                B = /\d\d\d\d\d\d?/,
                J = /\d{1,3}/,
                Q = /\d{1,4}/,
                X = /[+-]?\d{1,6}/,
                K = /\d+/,
                ee = /[+-]?\d+/,
                te = /Z|[+-]\d\d:?\d\d/gi,
                ne = /Z|[+-]\d\d(?::?\d\d)?/gi,
                se = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
                ie = /^[1-9]\d?/,
                re = /^([1-9]\d|\d)/;
  
            function ae(e, t, n) {
                E[e] = O(t) ? t : function (e, s) {
                    return e && n ? n : t
                }
            }
  
            function oe(e, t) {
                return r(E, e) ? E[e](t._strict, t._locale) : new RegExp(ue(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (e, t, n, s, i) {
                    return t || n || s || i
                })))
            }
  
            function ue(e) {
                return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
            }
  
            function le(e) {
                return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
            }
  
            function de(e) {
                var t = +e,
                    n = 0;
                return 0 !== t && isFinite(t) && (n = le(t)), n
            }
            E = {};
            var he = {};
  
            function ce(e, t) {
                var n, s, i = t;
                for ("string" == typeof e && (e = [e]), u(t) && (i = function (e, n) {
                    n[t] = de(e)
                }), s = e.length, n = 0; n < s; n++) he[e[n]] = i
            }
  
            function fe(e, t) {
                ce(e, function (e, n, s, i) {
                    s._w = s._w || {}, t(e, s._w, s, i)
                })
            }
  
            function me(e, t, n) {
                null != t && r(he, e) && he[e](t, n._a, n, e)
            }
  
            function _e(e) {
                return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
            }
            var ye = 0,
                ge = 1,
                we = 2,
                pe = 3,
                ve = 4,
                ke = 5,
                Me = 6,
                De = 7,
                Ye = 8;
  
            function Se(e) {
                return _e(e) ? 366 : 365
            }
            C("Y", 0, 0, function () {
                var e = this.year();
                return e <= 9999 ? x(e, 4) : "+" + e
            }), C(0, ["YY", 2], 0, function () {
                return this.year() % 100
            }), C(0, ["YYYY", 4], 0, "year"), C(0, ["YYYYY", 5], 0, "year"), C(0, ["YYYYYY", 6, !0], 0, "year"), ae("Y", ee), ae("YY", q, j), ae("YYYY", Q, Z), ae("YYYYY", X, z), ae("YYYYYY", X, z), ce(["YYYYY", "YYYYYY"], ye), ce("YYYY", function (e, t) {
                t[ye] = 2 === e.length ? n.parseTwoDigitYear(e) : de(e)
            }), ce("YY", function (e, t) {
                t[ye] = n.parseTwoDigitYear(e)
            }), ce("Y", function (e, t) {
                t[ye] = parseInt(e, 10)
            }), n.parseTwoDigitYear = function (e) {
                return de(e) + (de(e) > 68 ? 1900 : 2e3)
            };
            var Oe, be = Te("FullYear", !0);
  
            function Te(e, t) {
                return function (s) {
                    return null != s ? (Ne(this, e, s), n.updateOffset(this, t), this) : xe(this, e)
                }
            }
  
            function xe(e, t) {
                if (!e.isValid()) return NaN;
                var n = e._d,
                    s = e._isUTC;
                switch (t) {
                    case "Milliseconds":
                        return s ? n.getUTCMilliseconds() : n.getMilliseconds();
                    case "Seconds":
                        return s ? n.getUTCSeconds() : n.getSeconds();
                    case "Minutes":
                        return s ? n.getUTCMinutes() : n.getMinutes();
                    case "Hours":
                        return s ? n.getUTCHours() : n.getHours();
                    case "Date":
                        return s ? n.getUTCDate() : n.getDate();
                    case "Day":
                        return s ? n.getUTCDay() : n.getDay();
                    case "Month":
                        return s ? n.getUTCMonth() : n.getMonth();
                    case "FullYear":
                        return s ? n.getUTCFullYear() : n.getFullYear();
                    default:
                        return NaN
                }
            }
  
            function Ne(e, t, n) {
                var s, i, r, a, o;
                if (e.isValid() && !isNaN(n)) {
                    switch (s = e._d, i = e._isUTC, t) {
                        case "Milliseconds":
                            return void (i ? s.setUTCMilliseconds(n) : s.setMilliseconds(n));
                        case "Seconds":
                            return void (i ? s.setUTCSeconds(n) : s.setSeconds(n));
                        case "Minutes":
                            return void (i ? s.setUTCMinutes(n) : s.setMinutes(n));
                        case "Hours":
                            return void (i ? s.setUTCHours(n) : s.setHours(n));
                        case "Date":
                            return void (i ? s.setUTCDate(n) : s.setDate(n));
                        case "FullYear":
                            break;
                        default:
                            return
                    }
                    r = n, a = e.month(), o = 29 !== (o = e.date()) || 1 !== a || _e(r) ? o : 28, i ? s.setUTCFullYear(r, a, o) : s.setFullYear(r, a, o)
                }
            }
  
            function We(e, t) {
                if (isNaN(e) || isNaN(t)) return NaN;
                var n, s = (t % (n = 12) + n) % n;
                return e += (t - s) / 12, 1 === s ? _e(e) ? 29 : 28 : 31 - s % 7 % 2
            }
            Oe = Array.prototype.indexOf ? Array.prototype.indexOf : function (e) {
                var t;
                for (t = 0; t < this.length; ++t)
                    if (this[t] === e) return t;
                return -1
            }, C("M", ["MM", 2], "Mo", function () {
                return this.month() + 1
            }), C("MMM", 0, 0, function (e) {
                return this.localeData().monthsShort(this, e)
            }), C("MMMM", 0, 0, function (e) {
                return this.localeData().months(this, e)
            }), ae("M", q, ie), ae("MM", q, j), ae("MMM", function (e, t) {
                return t.monthsShortRegex(e)
            }), ae("MMMM", function (e, t) {
                return t.monthsRegex(e)
            }), ce(["M", "MM"], function (e, t) {
                t[ge] = de(e) - 1
            }), ce(["MMM", "MMMM"], function (e, t, n, s) {
                var i = n._locale.monthsParse(e, s, n._strict);
                null != i ? t[ge] = i : f(n).invalidMonth = e
            });
            var Pe = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                Re = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                Ce = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
                Ue = se,
                He = se;
  
            function Fe(e, t) {
                if (!e.isValid()) return e;
                if ("string" == typeof t)
                    if (/^\d+$/.test(t)) t = de(t);
                    else if (!u(t = e.localeData().monthsParse(t))) return e;
                var n = t,
                    s = e.date();
                return s = s < 29 ? s : Math.min(s, We(e.year(), n)), e._isUTC ? e._d.setUTCMonth(n, s) : e._d.setMonth(n, s), e
            }
  
            function Le(e) {
                return null != e ? (Fe(this, e), n.updateOffset(this, !0), this) : xe(this, "Month")
            }
  
            function Ve() {
                function e(e, t) {
                    return t.length - e.length
                }
                var t, n, s, i, r = [],
                    a = [],
                    o = [];
                for (t = 0; t < 12; t++) n = c([2e3, t]), s = ue(this.monthsShort(n, "")), i = ue(this.months(n, "")), r.push(s), a.push(i), o.push(i), o.push(s);
                r.sort(e), a.sort(e), o.sort(e), this._monthsRegex = new RegExp("^(" + o.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + a.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + r.join("|") + ")", "i")
            }
  
            function Ge(e) {
                var t, n;
                return e < 100 && e >= 0 ? ((n = Array.prototype.slice.call(arguments))[0] = e + 400, t = new Date(Date.UTC.apply(null, n)), isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)) : t = new Date(Date.UTC.apply(null, arguments)), t
            }
  
            function Ee(e, t, n) {
                var s = 7 + t - n;
                return -((7 + Ge(e, 0, s).getUTCDay() - t) % 7) + s - 1
            }
  
            function Ae(e, t, n, s, i) {
                var r, a, o = 1 + 7 * (t - 1) + (7 + n - s) % 7 + Ee(e, s, i);
                return o <= 0 ? a = Se(r = e - 1) + o : o > Se(e) ? (r = e + 1, a = o - Se(e)) : (r = e, a = o), {
                    year: r,
                    dayOfYear: a
                }
            }
  
            function je(e, t, n) {
                var s, i, r = Ee(e.year(), t, n),
                    a = Math.floor((e.dayOfYear() - r - 1) / 7) + 1;
                return a < 1 ? s = a + Ie(i = e.year() - 1, t, n) : a > Ie(e.year(), t, n) ? (s = a - Ie(e.year(), t, n), i = e.year() + 1) : (i = e.year(), s = a), {
                    week: s,
                    year: i
                }
            }
  
            function Ie(e, t, n) {
                var s = Ee(e, t, n),
                    i = Ee(e + 1, t, n);
                return (Se(e) - s + i) / 7
            }
            C("w", ["ww", 2], "wo", "week"), C("W", ["WW", 2], "Wo", "isoWeek"), ae("w", q, ie), ae("ww", q, j), ae("W", q, ie), ae("WW", q, j), fe(["w", "ww", "W", "WW"], function (e, t, n, s) {
                t[s.substr(0, 1)] = de(e)
            });
  
            function Ze(e, t) {
                return e.slice(t, 7).concat(e.slice(0, t))
            }
            C("d", 0, "do", "day"), C("dd", 0, 0, function (e) {
                return this.localeData().weekdaysMin(this, e)
            }), C("ddd", 0, 0, function (e) {
                return this.localeData().weekdaysShort(this, e)
            }), C("dddd", 0, 0, function (e) {
                return this.localeData().weekdays(this, e)
            }), C("e", 0, 0, "weekday"), C("E", 0, 0, "isoWeekday"), ae("d", q), ae("e", q), ae("E", q), ae("dd", function (e, t) {
                return t.weekdaysMinRegex(e)
            }), ae("ddd", function (e, t) {
                return t.weekdaysShortRegex(e)
            }), ae("dddd", function (e, t) {
                return t.weekdaysRegex(e)
            }), fe(["dd", "ddd", "dddd"], function (e, t, n, s) {
                var i = n._locale.weekdaysParse(e, s, n._strict);
                null != i ? t.d = i : f(n).invalidWeekday = e
            }), fe(["d", "e", "E"], function (e, t, n, s) {
                t[s] = de(e)
            });
            var ze = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                qe = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                $e = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                Be = se,
                Je = se,
                Qe = se;
  
            function Xe() {
                function e(e, t) {
                    return t.length - e.length
                }
                var t, n, s, i, r, a = [],
                    o = [],
                    u = [],
                    l = [];
                for (t = 0; t < 7; t++) n = c([2e3, 1]).day(t), s = ue(this.weekdaysMin(n, "")), i = ue(this.weekdaysShort(n, "")), r = ue(this.weekdays(n, "")), a.push(s), o.push(i), u.push(r), l.push(s), l.push(i), l.push(r);
                a.sort(e), o.sort(e), u.sort(e), l.sort(e), this._weekdaysRegex = new RegExp("^(" + l.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + u.join("|") + ")", "i"), this._weekdaysShortStrictRegex = new RegExp("^(" + o.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + a.join("|") + ")", "i")
            }
  
            function Ke() {
                return this.hours() % 12 || 12
            }
  
            function et(e, t) {
                C(e, 0, 0, function () {
                    return this.localeData().meridiem(this.hours(), this.minutes(), t)
                })
            }
  
            function tt(e, t) {
                return t._meridiemParse
            }
            C("H", ["HH", 2], 0, "hour"), C("h", ["hh", 2], 0, Ke), C("k", ["kk", 2], 0, function () {
                return this.hours() || 24
            }), C("hmm", 0, 0, function () {
                return "" + Ke.apply(this) + x(this.minutes(), 2)
            }), C("hmmss", 0, 0, function () {
                return "" + Ke.apply(this) + x(this.minutes(), 2) + x(this.seconds(), 2)
            }), C("Hmm", 0, 0, function () {
                return "" + this.hours() + x(this.minutes(), 2)
            }), C("Hmmss", 0, 0, function () {
                return "" + this.hours() + x(this.minutes(), 2) + x(this.seconds(), 2)
            }), et("a", !0), et("A", !1), ae("a", tt), ae("A", tt), ae("H", q, re), ae("h", q, ie), ae("k", q, ie), ae("HH", q, j), ae("hh", q, j), ae("kk", q, j), ae("hmm", $), ae("hmmss", B), ae("Hmm", $), ae("Hmmss", B), ce(["H", "HH"], pe), ce(["k", "kk"], function (e, t, n) {
                var s = de(e);
                t[pe] = 24 === s ? 0 : s
            }), ce(["a", "A"], function (e, t, n) {
                n._isPm = n._locale.isPM(e), n._meridiem = e
            }), ce(["h", "hh"], function (e, t, n) {
                t[pe] = de(e), f(n).bigHour = !0
            }), ce("hmm", function (e, t, n) {
                var s = e.length - 2;
                t[pe] = de(e.substr(0, s)), t[ve] = de(e.substr(s)), f(n).bigHour = !0
            }), ce("hmmss", function (e, t, n) {
                var s = e.length - 4,
                    i = e.length - 2;
                t[pe] = de(e.substr(0, s)), t[ve] = de(e.substr(s, 2)), t[ke] = de(e.substr(i)), f(n).bigHour = !0
            }), ce("Hmm", function (e, t, n) {
                var s = e.length - 2;
                t[pe] = de(e.substr(0, s)), t[ve] = de(e.substr(s))
            }), ce("Hmmss", function (e, t, n) {
                var s = e.length - 4,
                    i = e.length - 2;
                t[pe] = de(e.substr(0, s)), t[ve] = de(e.substr(s, 2)), t[ke] = de(e.substr(i))
            });
            var nt = Te("Hours", !0);
            var st, it = {
                calendar: {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                },
                longDateFormat: {
                    LTS: "h:mm:ss A",
                    LT: "h:mm A",
                    L: "MM/DD/YYYY",
                    LL: "MMMM D, YYYY",
                    LLL: "MMMM D, YYYY h:mm A",
                    LLLL: "dddd, MMMM D, YYYY h:mm A"
                },
                invalidDate: "Invalid date",
                ordinal: "%d",
                dayOfMonthOrdinalParse: /\d{1,2}/,
                relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    ss: "%d seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    w: "a week",
                    ww: "%d weeks",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                },
                months: Pe,
                monthsShort: Re,
                week: {
                    dow: 0,
                    doy: 6
                },
                weekdays: ze,
                weekdaysMin: $e,
                weekdaysShort: qe,
                meridiemParse: /[ap]\.?m?\.?/i
            },
                rt = {},
                at = {};
  
            function ot(e, t) {
                var n, s = Math.min(e.length, t.length);
                for (n = 0; n < s; n += 1)
                    if (e[n] !== t[n]) return n;
                return s
            }
  
            function ut(e) {
                return e ? e.toLowerCase().replace("_", "-") : e
            }
  
            function lt(e) {
                var t = null;
                if (void 0 === rt[e] && "undefined" != typeof module && module && module.exports && function (e) {
                    return !(!e || !e.match("^[^/\\\\]*$"))
                }(e)) try {
                    t = st._abbr, require("./locale/" + e), dt(t)
                } catch (t) {
                    rt[e] = null
                }
                return rt[e]
            }
  
            function dt(e, t) {
                var n;
                return e && ((n = o(t) ? ct(e) : ht(e, t)) ? st = n : "undefined" != typeof console && console.warn && console.warn("Locale " + e + " not found. Did you forget to load it?")), st._abbr
            }
  
            function ht(e, t) {
                if (null !== t) {
                    var n, s = it;
                    if (t.abbr = e, null != rt[e]) S("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), s = rt[e]._config;
                    else if (null != t.parentLocale)
                        if (null != rt[t.parentLocale]) s = rt[t.parentLocale]._config;
                        else {
                            if (null == (n = lt(t.parentLocale))) return at[t.parentLocale] || (at[t.parentLocale] = []), at[t.parentLocale].push({
                                name: e,
                                config: t
                            }), null;
                            s = n._config
                        } return rt[e] = new T(b(s, t)), at[e] && at[e].forEach(function (e) {
                            ht(e.name, e.config)
                        }), dt(e), rt[e]
                }
                return delete rt[e], null
            }
  
            function ct(e) {
                var t;
                if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) return st;
                if (!s(e)) {
                    if (t = lt(e)) return t;
                    e = [e]
                }
                return function (e) {
                    for (var t, n, s, i, r = 0; r < e.length;) {
                        for (t = (i = ut(e[r]).split("-")).length, n = (n = ut(e[r + 1])) ? n.split("-") : null; t > 0;) {
                            if (s = lt(i.slice(0, t).join("-"))) return s;
                            if (n && n.length >= t && ot(i, n) >= t - 1) break;
                            t--
                        }
                        r++
                    }
                    return st
                }(e)
            }
  
            function ft(e) {
                var t, n = e._a;
                return n && -2 === f(e).overflow && (t = n[ge] < 0 || n[ge] > 11 ? ge : n[we] < 1 || n[we] > We(n[ye], n[ge]) ? we : n[pe] < 0 || n[pe] > 24 || 24 === n[pe] && (0 !== n[ve] || 0 !== n[ke] || 0 !== n[Me]) ? pe : n[ve] < 0 || n[ve] > 59 ? ve : n[ke] < 0 || n[ke] > 59 ? ke : n[Me] < 0 || n[Me] > 999 ? Me : -1, f(e)._overflowDayOfYear && (t < ye || t > we) && (t = we), f(e)._overflowWeeks && -1 === t && (t = De), f(e)._overflowWeekday && -1 === t && (t = Ye), f(e).overflow = t), e
            }
            var mt = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                _t = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
                yt = /Z|[+-]\d\d(?::?\d\d)?/,
                gt = [
                    ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
                    ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
                    ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
                    ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
                    ["YYYY-DDD", /\d{4}-\d{3}/],
                    ["YYYY-MM", /\d{4}-\d\d/, !1],
                    ["YYYYYYMMDD", /[+-]\d{10}/],
                    ["YYYYMMDD", /\d{8}/],
                    ["GGGG[W]WWE", /\d{4}W\d{3}/],
                    ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
                    ["YYYYDDD", /\d{7}/],
                    ["YYYYMM", /\d{6}/, !1],
                    ["YYYY", /\d{4}/, !1]
                ],
                wt = [
                    ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
                    ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
                    ["HH:mm:ss", /\d\d:\d\d:\d\d/],
                    ["HH:mm", /\d\d:\d\d/],
                    ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
                    ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
                    ["HHmmss", /\d\d\d\d\d\d/],
                    ["HHmm", /\d\d\d\d/],
                    ["HH", /\d\d/]
                ],
                pt = /^\/?Date\((-?\d+)/i,
                vt = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
                kt = {
                    UT: 0,
                    GMT: 0,
                    EDT: -240,
                    EST: -300,
                    CDT: -300,
                    CST: -360,
                    MDT: -360,
                    MST: -420,
                    PDT: -420,
                    PST: -480
                };
  
            function Mt(e) {
                var t, n, s, i, r, a, o = e._i,
                    u = mt.exec(o) || _t.exec(o),
                    l = gt.length,
                    d = wt.length;
                if (u) {
                    for (f(e).iso = !0, t = 0, n = l; t < n; t++)
                        if (gt[t][1].exec(u[1])) {
                            i = gt[t][0], s = !1 !== gt[t][2];
                            break
                        } if (null == i) return void (e._isValid = !1);
                    if (u[3]) {
                        for (t = 0, n = d; t < n; t++)
                            if (wt[t][1].exec(u[3])) {
                                r = (u[2] || " ") + wt[t][0];
                                break
                            } if (null == r) return void (e._isValid = !1)
                    }
                    if (!s && null != r) return void (e._isValid = !1);
                    if (u[4]) {
                        if (!yt.exec(u[4])) return void (e._isValid = !1);
                        a = "Z"
                    }
                    e._f = i + (r || "") + (a || ""), bt(e)
                } else e._isValid = !1
            }
  
            function Dt(e) {
                var t = parseInt(e, 10);
                return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t
            }
  
            function Yt(e) {
                var t, n, s, i, r, a, o, u, l = vt.exec(e._i.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, ""));
                if (l) {
                    if (n = l[4], s = l[3], i = l[2], r = l[5], a = l[6], o = l[7], u = [Dt(n), Re.indexOf(s), parseInt(i, 10), parseInt(r, 10), parseInt(a, 10)], o && u.push(parseInt(o, 10)), t = u, ! function (e, t, n) {
                        return !e || qe.indexOf(e) === new Date(t[0], t[1], t[2]).getDay() || (f(n).weekdayMismatch = !0, n._isValid = !1, !1)
                    }(l[1], t, e)) return;
                    e._a = t, e._tzm = function (e, t, n) {
                        if (e) return kt[e];
                        if (t) return 0;
                        var s = parseInt(n, 10),
                            i = s % 100;
                        return (s - i) / 100 * 60 + i
                    }(l[8], l[9], l[10]), e._d = Ge.apply(null, e._a), e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), f(e).rfc2822 = !0
                } else e._isValid = !1
            }
  
            function St(e, t, n) {
                return null != e ? e : null != t ? t : n
            }
  
            function Ot(e) {
                var t, s, i, r, a, o = [];
                if (!e._d) {
                    for (i = function (e) {
                        var t = new Date(n.now());
                        return e._useUTC ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()] : [t.getFullYear(), t.getMonth(), t.getDate()]
                    }(e), e._w && null == e._a[we] && null == e._a[ge] && function (e) {
                        var t, n, s, i, r, a, o, u, l;
                        null != (t = e._w).GG || null != t.W || null != t.E ? (r = 1, a = 4, n = St(t.GG, e._a[ye], je(Nt(), 1, 4).year), s = St(t.W, 1), ((i = St(t.E, 1)) < 1 || i > 7) && (u = !0)) : (r = e._locale._week.dow, a = e._locale._week.doy, l = je(Nt(), r, a), n = St(t.gg, e._a[ye], l.year), s = St(t.w, l.week), null != t.d ? ((i = t.d) < 0 || i > 6) && (u = !0) : null != t.e ? (i = t.e + r, (t.e < 0 || t.e > 6) && (u = !0)) : i = r);
                        s < 1 || s > Ie(n, r, a) ? f(e)._overflowWeeks = !0 : null != u ? f(e)._overflowWeekday = !0 : (o = Ae(n, s, i, r, a), e._a[ye] = o.year, e._dayOfYear = o.dayOfYear)
                    }(e), null != e._dayOfYear && (a = St(e._a[ye], i[ye]), (e._dayOfYear > Se(a) || 0 === e._dayOfYear) && (f(e)._overflowDayOfYear = !0), s = Ge(a, 0, e._dayOfYear), e._a[ge] = s.getUTCMonth(), e._a[we] = s.getUTCDate()), t = 0; t < 3 && null == e._a[t]; ++t) e._a[t] = o[t] = i[t];
                    for (; t < 7; t++) e._a[t] = o[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
                    24 === e._a[pe] && 0 === e._a[ve] && 0 === e._a[ke] && 0 === e._a[Me] && (e._nextDay = !0, e._a[pe] = 0), e._d = (e._useUTC ? Ge : function (e, t, n, s, i, r, a) {
                        var o;
                        return e < 100 && e >= 0 ? (o = new Date(e + 400, t, n, s, i, r, a), isFinite(o.getFullYear()) && o.setFullYear(e)) : o = new Date(e, t, n, s, i, r, a), o
                    }).apply(null, o), r = e._useUTC ? e._d.getUTCDay() : e._d.getDay(), null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[pe] = 24), e._w && void 0 !== e._w.d && e._w.d !== r && (f(e).weekdayMismatch = !0)
                }
            }
  
            function bt(e) {
                if (e._f !== n.ISO_8601)
                    if (e._f !== n.RFC_2822) {
                        e._a = [], f(e).empty = !0;
                        var t, s, i, r, a, o, u, l = "" + e._i,
                            d = l.length,
                            h = 0;
                        for (u = (i = H(e._f, e._locale).match(N) || []).length, t = 0; t < u; t++) r = i[t], (s = (l.match(oe(r, e)) || [])[0]) && ((a = l.substr(0, l.indexOf(s))).length > 0 && f(e).unusedInput.push(a), l = l.slice(l.indexOf(s) + s.length), h += s.length), R[r] ? (s ? f(e).empty = !1 : f(e).unusedTokens.push(r), me(r, s, e)) : e._strict && !s && f(e).unusedTokens.push(r);
                        f(e).charsLeftOver = d - h, l.length > 0 && f(e).unusedInput.push(l), e._a[pe] <= 12 && !0 === f(e).bigHour && e._a[pe] > 0 && (f(e).bigHour = void 0), f(e).parsedDateParts = e._a.slice(0), f(e).meridiem = e._meridiem, e._a[pe] = function (e, t, n) {
                            var s;
                            if (null == n) return t;
                            return null != e.meridiemHour ? e.meridiemHour(t, n) : null != e.isPM ? ((s = e.isPM(n)) && t < 12 && (t += 12), s || 12 !== t || (t = 0), t) : t
                        }(e._locale, e._a[pe], e._meridiem), null !== (o = f(e).era) && (e._a[ye] = e._locale.erasConvertYear(o, e._a[ye])), Ot(e), ft(e)
                    } else Yt(e);
                else Mt(e)
            }
  
            function Tt(e) {
                var t = e._i,
                    r = e._f;
                return e._locale = e._locale || ct(e._l), null === t || void 0 === r && "" === t ? _({
                    nullInput: !0
                }) : ("string" == typeof t && (e._i = t = e._locale.preparse(t)), v(t) ? new p(ft(t)) : (l(t) ? e._d = t : s(r) ? function (e) {
                    var t, n, s, i, r, a, o = !1,
                        u = e._f.length;
                    if (0 === u) return f(e).invalidFormat = !0, void (e._d = new Date(NaN));
                    for (i = 0; i < u; i++) r = 0, a = !1, t = w({}, e), null != e._useUTC && (t._useUTC = e._useUTC), t._f = e._f[i], bt(t), m(t) && (a = !0), r += f(t).charsLeftOver, r += 10 * f(t).unusedTokens.length, f(t).score = r, o ? r < s && (s = r, n = t) : (null == s || r < s || a) && (s = r, n = t, a && (o = !0));
                    h(e, n || t)
                }(e) : r ? bt(e) : function (e) {
                    var t = e._i;
                    o(t) ? e._d = new Date(n.now()) : l(t) ? e._d = new Date(t.valueOf()) : "string" == typeof t ? function (e) {
                        var t = pt.exec(e._i);
                        null === t ? (Mt(e), !1 === e._isValid && (delete e._isValid, Yt(e), !1 === e._isValid && (delete e._isValid, e._strict ? e._isValid = !1 : n.createFromInputFallback(e)))) : e._d = new Date(+t[1])
                    }(e) : s(t) ? (e._a = d(t.slice(0), function (e) {
                        return parseInt(e, 10)
                    }), Ot(e)) : i(t) ? function (e) {
                        if (!e._d) {
                            var t = V(e._i),
                                n = void 0 === t.day ? t.date : t.day;
                            e._a = d([t.year, t.month, n, t.hour, t.minute, t.second, t.millisecond], function (e) {
                                return e && parseInt(e, 10)
                            }), Ot(e)
                        }
                    }(e) : u(t) ? e._d = new Date(t) : n.createFromInputFallback(e)
                }(e), m(e) || (e._d = null), e))
            }
  
            function xt(e, t, n, r, o) {
                var u, l = {};
                return !0 !== t && !1 !== t || (r = t, t = void 0), !0 !== n && !1 !== n || (r = n, n = void 0), (i(e) && a(e) || s(e) && 0 === e.length) && (e = void 0), l._isAMomentObject = !0, l._useUTC = l._isUTC = o, l._l = n, l._i = e, l._f = t, l._strict = r, (u = new p(ft(Tt(l))))._nextDay && (u.add(1, "d"), u._nextDay = void 0), u
            }
  
            function Nt(e, t, n, s) {
                return xt(e, t, n, s, !1)
            }
            n.createFromInputFallback = M("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function (e) {
                e._d = new Date(e._i + (e._useUTC ? " UTC" : ""))
            }), n.ISO_8601 = function () { }, n.RFC_2822 = function () { };
            var Wt = M("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
                var e = Nt.apply(null, arguments);
                return this.isValid() && e.isValid() ? e < this ? this : e : _()
            }),
                Pt = M("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
                    var e = Nt.apply(null, arguments);
                    return this.isValid() && e.isValid() ? e > this ? this : e : _()
                });
  
            function Rt(e, t) {
                var n, i;
                if (1 === t.length && s(t[0]) && (t = t[0]), !t.length) return Nt();
                for (n = t[0], i = 1; i < t.length; ++i) t[i].isValid() && !t[i][e](n) || (n = t[i]);
                return n
            }
            var Ct = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
  
            function Ut(e) {
                var t = V(e),
                    n = t.year || 0,
                    s = t.quarter || 0,
                    i = t.month || 0,
                    a = t.week || t.isoWeek || 0,
                    o = t.day || 0,
                    u = t.hour || 0,
                    l = t.minute || 0,
                    d = t.second || 0,
                    h = t.millisecond || 0;
                this._isValid = function (e) {
                    var t, n, s = !1,
                        i = Ct.length;
                    for (t in e)
                        if (r(e, t) && (-1 === Oe.call(Ct, t) || null != e[t] && isNaN(e[t]))) return !1;
                    for (n = 0; n < i; ++n)
                        if (e[Ct[n]]) {
                            if (s) return !1;
                            parseFloat(e[Ct[n]]) !== de(e[Ct[n]]) && (s = !0)
                        } return !0
                }(t), this._milliseconds = +h + 1e3 * d + 6e4 * l + 1e3 * u * 60 * 60, this._days = +o + 7 * a, this._months = +i + 3 * s + 12 * n, this._data = {}, this._locale = ct(), this._bubble()
            }
  
            function Ht(e) {
                return e instanceof Ut
            }
  
            function Ft(e) {
                return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e)
            }
  
            function Lt(e, t) {
                C(e, 0, 0, function () {
                    var e = this.utcOffset(),
                        n = "+";
                    return e < 0 && (e = -e, n = "-"), n + x(~~(e / 60), 2) + t + x(~~e % 60, 2)
                })
            }
            Lt("Z", ":"), Lt("ZZ", ""), ae("Z", ne), ae("ZZ", ne), ce(["Z", "ZZ"], function (e, t, n) {
                n._useUTC = !0, n._tzm = Gt(ne, e)
            });
            var Vt = /([\+\-]|\d\d)/gi;
  
            function Gt(e, t) {
                var n, s, i = (t || "").match(e);
                return null === i ? null : 0 === (s = 60 * (n = ((i[i.length - 1] || []) + "").match(Vt) || ["-", 0, 0])[1] + de(n[2])) ? 0 : "+" === n[0] ? s : -s
            }
  
            function Et(e, t) {
                var s, i;
                return t._isUTC ? (s = t.clone(), i = (v(e) || l(e) ? e.valueOf() : Nt(e).valueOf()) - s.valueOf(), s._d.setTime(s._d.valueOf() + i), n.updateOffset(s, !1), s) : Nt(e).local()
            }
  
            function At(e) {
                return -Math.round(e._d.getTimezoneOffset())
            }
  
            function jt() {
                return !!this.isValid() && (this._isUTC && 0 === this._offset)
            }
            n.updateOffset = function () { };
            var It = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
                Zt = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
  
            function zt(e, t) {
                var n, s, i, a = e,
                    o = null;
                return Ht(e) ? a = {
                    ms: e._milliseconds,
                    d: e._days,
                    M: e._months
                } : u(e) || !isNaN(+e) ? (a = {}, t ? a[t] = +e : a.milliseconds = +e) : (o = It.exec(e)) ? (n = "-" === o[1] ? -1 : 1, a = {
                    y: 0,
                    d: de(o[we]) * n,
                    h: de(o[pe]) * n,
                    m: de(o[ve]) * n,
                    s: de(o[ke]) * n,
                    ms: de(Ft(1e3 * o[Me])) * n
                }) : (o = Zt.exec(e)) ? (n = "-" === o[1] ? -1 : 1, a = {
                    y: qt(o[2], n),
                    M: qt(o[3], n),
                    w: qt(o[4], n),
                    d: qt(o[5], n),
                    h: qt(o[6], n),
                    m: qt(o[7], n),
                    s: qt(o[8], n)
                }) : null == a ? a = {} : "object" == typeof a && ("from" in a || "to" in a) && (i = function (e, t) {
                    var n;
                    if (!e.isValid() || !t.isValid()) return {
                        milliseconds: 0,
                        months: 0
                    };
                    t = Et(t, e), e.isBefore(t) ? n = $t(e, t) : ((n = $t(t, e)).milliseconds = -n.milliseconds, n.months = -n.months);
                    return n
                }(Nt(a.from), Nt(a.to)), (a = {}).ms = i.milliseconds, a.M = i.months), s = new Ut(a), Ht(e) && r(e, "_locale") && (s._locale = e._locale), Ht(e) && r(e, "_isValid") && (s._isValid = e._isValid), s
            }
  
            function qt(e, t) {
                var n = e && parseFloat(e.replace(",", "."));
                return (isNaN(n) ? 0 : n) * t
            }
  
            function $t(e, t) {
                var n = {};
                return n.months = t.month() - e.month() + 12 * (t.year() - e.year()), e.clone().add(n.months, "M").isAfter(t) && --n.months, n.milliseconds = +t - +e.clone().add(n.months, "M"), n
            }
  
            function Bt(e, t) {
                return function (n, s) {
                    var i;
                    return null === s || isNaN(+s) || (S(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), i = n, n = s, s = i), Jt(this, zt(n, s), e), this
                }
            }
  
            function Jt(e, t, s, i) {
                var r = t._milliseconds,
                    a = Ft(t._days),
                    o = Ft(t._months);
                e.isValid() && (i = null == i || i, o && Fe(e, xe(e, "Month") + o * s), a && Ne(e, "Date", xe(e, "Date") + a * s), r && e._d.setTime(e._d.valueOf() + r * s), i && n.updateOffset(e, a || o))
            }
            zt.fn = Ut.prototype, zt.invalid = function () {
                return zt(NaN)
            };
            var Qt = Bt(1, "add"),
                Xt = Bt(-1, "subtract");
  
            function Kt(e) {
                return "string" == typeof e || e instanceof String
            }
  
            function en(e) {
                return v(e) || l(e) || Kt(e) || u(e) || function (e) {
                    var t = s(e),
                        n = !1;
                    t && (n = 0 === e.filter(function (t) {
                        return !u(t) && Kt(e)
                    }).length);
                    return t && n
                }(e) || function (e) {
                    var t, n, s = i(e) && !a(e),
                        o = !1,
                        u = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"],
                        l = u.length;
                    for (t = 0; t < l; t += 1) n = u[t], o = o || r(e, n);
                    return s && o
                }(e) || null == e
            }
  
            function tn(e, t) {
                if (e.date() < t.date()) return -tn(t, e);
                var n = 12 * (t.year() - e.year()) + (t.month() - e.month()),
                    s = e.clone().add(n, "months");
                return -(n + (t - s < 0 ? (t - s) / (s - e.clone().add(n - 1, "months")) : (t - s) / (e.clone().add(n + 1, "months") - s))) || 0
            }
  
            function nn(e) {
                var t;
                return void 0 === e ? this._locale._abbr : (null != (t = ct(e)) && (this._locale = t), this)
            }
            n.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", n.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
            var sn = M("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (e) {
                return void 0 === e ? this.localeData() : this.locale(e)
            });
  
            function rn() {
                return this._locale
            }
            var an = 1e3,
                on = 60 * an,
                un = 60 * on,
                ln = 3506328 * un;
  
            function dn(e, t) {
                return (e % t + t) % t
            }
  
            function hn(e, t, n) {
                return e < 100 && e >= 0 ? new Date(e + 400, t, n) - ln : new Date(e, t, n).valueOf()
            }
  
            function cn(e, t, n) {
                return e < 100 && e >= 0 ? Date.UTC(e + 400, t, n) - ln : Date.UTC(e, t, n)
            }
  
            function fn(e, t) {
                return t.erasAbbrRegex(e)
            }
  
            function mn() {
                var e, t, n, s, i, r = [],
                    a = [],
                    o = [],
                    u = [],
                    l = this.eras();
                for (e = 0, t = l.length; e < t; ++e) n = ue(l[e].name), s = ue(l[e].abbr), i = ue(l[e].narrow), a.push(n), r.push(s), o.push(i), u.push(n), u.push(s), u.push(i);
                this._erasRegex = new RegExp("^(" + u.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + a.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp("^(" + o.join("|") + ")", "i")
            }
  
            function _n(e, t) {
                C(0, [e, e.length], 0, t)
            }
  
            function yn(e, t, n, s, i) {
                var r;
                return null == e ? je(this, s, i).year : (t > (r = Ie(e, s, i)) && (t = r), function (e, t, n, s, i) {
                    var r = Ae(e, t, n, s, i),
                        a = Ge(r.year, 0, r.dayOfYear);
                    return this.year(a.getUTCFullYear()), this.month(a.getUTCMonth()), this.date(a.getUTCDate()), this
                }.call(this, e, t, n, s, i))
            }
            C("N", 0, 0, "eraAbbr"), C("NN", 0, 0, "eraAbbr"), C("NNN", 0, 0, "eraAbbr"), C("NNNN", 0, 0, "eraName"), C("NNNNN", 0, 0, "eraNarrow"), C("y", ["y", 1], "yo", "eraYear"), C("y", ["yy", 2], 0, "eraYear"), C("y", ["yyy", 3], 0, "eraYear"), C("y", ["yyyy", 4], 0, "eraYear"), ae("N", fn), ae("NN", fn), ae("NNN", fn), ae("NNNN", function (e, t) {
                return t.erasNameRegex(e)
            }), ae("NNNNN", function (e, t) {
                return t.erasNarrowRegex(e)
            }), ce(["N", "NN", "NNN", "NNNN", "NNNNN"], function (e, t, n, s) {
                var i = n._locale.erasParse(e, s, n._strict);
                i ? f(n).era = i : f(n).invalidEra = e
            }), ae("y", K), ae("yy", K), ae("yyy", K), ae("yyyy", K), ae("yo", function (e, t) {
                return t._eraYearOrdinalRegex || K
            }), ce(["y", "yy", "yyy", "yyyy"], ye), ce(["yo"], function (e, t, n, s) {
                var i;
                n._locale._eraYearOrdinalRegex && (i = e.match(n._locale._eraYearOrdinalRegex)), n._locale.eraYearOrdinalParse ? t[ye] = n._locale.eraYearOrdinalParse(e, i) : t[ye] = parseInt(e, 10)
            }), C(0, ["gg", 2], 0, function () {
                return this.weekYear() % 100
            }), C(0, ["GG", 2], 0, function () {
                return this.isoWeekYear() % 100
            }), _n("gggg", "weekYear"), _n("ggggg", "weekYear"), _n("GGGG", "isoWeekYear"), _n("GGGGG", "isoWeekYear"), ae("G", ee), ae("g", ee), ae("GG", q, j), ae("gg", q, j), ae("GGGG", Q, Z), ae("gggg", Q, Z), ae("GGGGG", X, z), ae("ggggg", X, z), fe(["gggg", "ggggg", "GGGG", "GGGGG"], function (e, t, n, s) {
                t[s.substr(0, 2)] = de(e)
            }), fe(["gg", "GG"], function (e, t, s, i) {
                t[i] = n.parseTwoDigitYear(e)
            }), C("Q", 0, "Qo", "quarter"), ae("Q", A), ce("Q", function (e, t) {
                t[ge] = 3 * (de(e) - 1)
            }), C("D", ["DD", 2], "Do", "date"), ae("D", q, ie), ae("DD", q, j), ae("Do", function (e, t) {
                return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient
            }), ce(["D", "DD"], we), ce("Do", function (e, t) {
                t[we] = de(e.match(q)[0])
            });
            var gn = Te("Date", !0);
            C("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), ae("DDD", J), ae("DDDD", I), ce(["DDD", "DDDD"], function (e, t, n) {
                n._dayOfYear = de(e)
            }), C("m", ["mm", 2], 0, "minute"), ae("m", q, re), ae("mm", q, j), ce(["m", "mm"], ve);
            var wn = Te("Minutes", !1);
            C("s", ["ss", 2], 0, "second"), ae("s", q, re), ae("ss", q, j), ce(["s", "ss"], ke);
            var pn, vn, kn = Te("Seconds", !1);
            for (C("S", 0, 0, function () {
                return ~~(this.millisecond() / 100)
            }), C(0, ["SS", 2], 0, function () {
                return ~~(this.millisecond() / 10)
            }), C(0, ["SSS", 3], 0, "millisecond"), C(0, ["SSSS", 4], 0, function () {
                return 10 * this.millisecond()
            }), C(0, ["SSSSS", 5], 0, function () {
                return 100 * this.millisecond()
            }), C(0, ["SSSSSS", 6], 0, function () {
                return 1e3 * this.millisecond()
            }), C(0, ["SSSSSSS", 7], 0, function () {
                return 1e4 * this.millisecond()
            }), C(0, ["SSSSSSSS", 8], 0, function () {
                return 1e5 * this.millisecond()
            }), C(0, ["SSSSSSSSS", 9], 0, function () {
                return 1e6 * this.millisecond()
            }), ae("S", J, A), ae("SS", J, j), ae("SSS", J, I), pn = "SSSS"; pn.length <= 9; pn += "S") ae(pn, K);
  
            function Mn(e, t) {
                t[Me] = de(1e3 * ("0." + e))
            }
            for (pn = "S"; pn.length <= 9; pn += "S") ce(pn, Mn);
            vn = Te("Milliseconds", !1), C("z", 0, 0, "zoneAbbr"), C("zz", 0, 0, "zoneName");
            var Dn = p.prototype;
  
            function Yn(e) {
                return e
            }
            Dn.add = Qt, Dn.calendar = function (e, t) {
                1 === arguments.length && (arguments[0] ? en(arguments[0]) ? (e = arguments[0], t = void 0) : function (e) {
                    var t, n = i(e) && !a(e),
                        s = !1,
                        o = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"];
                    for (t = 0; t < o.length; t += 1) s = s || r(e, o[t]);
                    return n && s
                }(arguments[0]) && (t = arguments[0], e = void 0) : (e = void 0, t = void 0));
                var s = e || Nt(),
                    o = Et(s, this).startOf("day"),
                    u = n.calendarFormat(this, o) || "sameElse",
                    l = t && (O(t[u]) ? t[u].call(this, s) : t[u]);
                return this.format(l || this.localeData().calendar(u, this, Nt(s)))
            }, Dn.clone = function () {
                return new p(this)
            }, Dn.diff = function (e, t, n) {
                var s, i, r;
                if (!this.isValid()) return NaN;
                if (!(s = Et(e, this)).isValid()) return NaN;
                switch (i = 6e4 * (s.utcOffset() - this.utcOffset()), t = L(t)) {
                    case "year":
                        r = tn(this, s) / 12;
                        break;
                    case "month":
                        r = tn(this, s);
                        break;
                    case "quarter":
                        r = tn(this, s) / 3;
                        break;
                    case "second":
                        r = (this - s) / 1e3;
                        break;
                    case "minute":
                        r = (this - s) / 6e4;
                        break;
                    case "hour":
                        r = (this - s) / 36e5;
                        break;
                    case "day":
                        r = (this - s - i) / 864e5;
                        break;
                    case "week":
                        r = (this - s - i) / 6048e5;
                        break;
                    default:
                        r = this - s
                }
                return n ? r : le(r)
            }, Dn.endOf = function (e) {
                var t, s;
                if (void 0 === (e = L(e)) || "millisecond" === e || !this.isValid()) return this;
                switch (s = this._isUTC ? cn : hn, e) {
                    case "year":
                        t = s(this.year() + 1, 0, 1) - 1;
                        break;
                    case "quarter":
                        t = s(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                        break;
                    case "month":
                        t = s(this.year(), this.month() + 1, 1) - 1;
                        break;
                    case "week":
                        t = s(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                        break;
                    case "isoWeek":
                        t = s(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                        break;
                    case "day":
                    case "date":
                        t = s(this.year(), this.month(), this.date() + 1) - 1;
                        break;
                    case "hour":
                        t = this._d.valueOf(), t += un - dn(t + (this._isUTC ? 0 : this.utcOffset() * on), un) - 1;
                        break;
                    case "minute":
                        t = this._d.valueOf(), t += on - dn(t, on) - 1;
                        break;
                    case "second":
                        t = this._d.valueOf(), t += an - dn(t, an) - 1
                }
                return this._d.setTime(t), n.updateOffset(this, !0), this
            }, Dn.format = function (e) {
                e || (e = this.isUtc() ? n.defaultFormatUtc : n.defaultFormat);
                var t = U(this, e);
                return this.localeData().postformat(t)
            }, Dn.from = function (e, t) {
                return this.isValid() && (v(e) && e.isValid() || Nt(e).isValid()) ? zt({
                    to: this,
                    from: e
                }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
            }, Dn.fromNow = function (e) {
                return this.from(Nt(), e)
            }, Dn.to = function (e, t) {
                return this.isValid() && (v(e) && e.isValid() || Nt(e).isValid()) ? zt({
                    from: this,
                    to: e
                }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
            }, Dn.toNow = function (e) {
                return this.to(Nt(), e)
            }, Dn.get = function (e) {
                return O(this[e = L(e)]) ? this[e]() : this
            }, Dn.invalidAt = function () {
                return f(this).overflow
            }, Dn.isAfter = function (e, t) {
                var n = v(e) ? e : Nt(e);
                return !(!this.isValid() || !n.isValid()) && ("millisecond" === (t = L(t) || "millisecond") ? this.valueOf() > n.valueOf() : n.valueOf() < this.clone().startOf(t).valueOf())
            }, Dn.isBefore = function (e, t) {
                var n = v(e) ? e : Nt(e);
                return !(!this.isValid() || !n.isValid()) && ("millisecond" === (t = L(t) || "millisecond") ? this.valueOf() < n.valueOf() : this.clone().endOf(t).valueOf() < n.valueOf())
            }, Dn.isBetween = function (e, t, n, s) {
                var i = v(e) ? e : Nt(e),
                    r = v(t) ? t : Nt(t);
                return !!(this.isValid() && i.isValid() && r.isValid()) && ("(" === (s = s || "()")[0] ? this.isAfter(i, n) : !this.isBefore(i, n)) && (")" === s[1] ? this.isBefore(r, n) : !this.isAfter(r, n))
            }, Dn.isSame = function (e, t) {
                var n, s = v(e) ? e : Nt(e);
                return !(!this.isValid() || !s.isValid()) && ("millisecond" === (t = L(t) || "millisecond") ? this.valueOf() === s.valueOf() : (n = s.valueOf(), this.clone().startOf(t).valueOf() <= n && n <= this.clone().endOf(t).valueOf()))
            }, Dn.isSameOrAfter = function (e, t) {
                return this.isSame(e, t) || this.isAfter(e, t)
            }, Dn.isSameOrBefore = function (e, t) {
                return this.isSame(e, t) || this.isBefore(e, t)
            }, Dn.isValid = function () {
                return m(this)
            }, Dn.lang = sn, Dn.locale = nn, Dn.localeData = rn, Dn.max = Pt, Dn.min = Wt, Dn.parsingFlags = function () {
                return h({}, f(this))
            }, Dn.set = function (e, t) {
                if ("object" == typeof e) {
                    var n, s = function (e) {
                        var t, n = [];
                        for (t in e) r(e, t) && n.push({
                            unit: t,
                            priority: G[t]
                        });
                        return n.sort(function (e, t) {
                            return e.priority - t.priority
                        }), n
                    }(e = V(e)),
                        i = s.length;
                    for (n = 0; n < i; n++) this[s[n].unit](e[s[n].unit])
                } else if (O(this[e = L(e)])) return this[e](t);
                return this
            }, Dn.startOf = function (e) {
                var t, s;
                if (void 0 === (e = L(e)) || "millisecond" === e || !this.isValid()) return this;
                switch (s = this._isUTC ? cn : hn, e) {
                    case "year":
                        t = s(this.year(), 0, 1);
                        break;
                    case "quarter":
                        t = s(this.year(), this.month() - this.month() % 3, 1);
                        break;
                    case "month":
                        t = s(this.year(), this.month(), 1);
                        break;
                    case "week":
                        t = s(this.year(), this.month(), this.date() - this.weekday());
                        break;
                    case "isoWeek":
                        t = s(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                        break;
                    case "day":
                    case "date":
                        t = s(this.year(), this.month(), this.date());
                        break;
                    case "hour":
                        t = this._d.valueOf(), t -= dn(t + (this._isUTC ? 0 : this.utcOffset() * on), un);
                        break;
                    case "minute":
                        t = this._d.valueOf(), t -= dn(t, on);
                        break;
                    case "second":
                        t = this._d.valueOf(), t -= dn(t, an)
                }
                return this._d.setTime(t), n.updateOffset(this, !0), this
            }, Dn.subtract = Xt, Dn.toArray = function () {
                var e = this;
                return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()]
            }, Dn.toObject = function () {
                var e = this;
                return {
                    years: e.year(),
                    months: e.month(),
                    date: e.date(),
                    hours: e.hours(),
                    minutes: e.minutes(),
                    seconds: e.seconds(),
                    milliseconds: e.milliseconds()
                }
            }, Dn.toDate = function () {
                return new Date(this.valueOf())
            }, Dn.toISOString = function (e) {
                if (!this.isValid()) return null;
                var t = !0 !== e,
                    n = t ? this.clone().utc() : this;
                return n.year() < 0 || n.year() > 9999 ? U(n, t ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : O(Date.prototype.toISOString) ? t ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", U(n, "Z")) : U(n, t ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
            }, Dn.inspect = function () {
                if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
                var e, t, n, s = "moment",
                    i = "";
                return this.isLocal() || (s = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone", i = "Z"), e = "[" + s + '("]', t = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", n = i + '[")]', this.format(e + t + "-MM-DD[T]HH:mm:ss.SSS" + n)
            }, "undefined" != typeof Symbol && null != Symbol.for && (Dn[Symbol.for("nodejs.util.inspect.custom")] = function () {
                return "Moment<" + this.format() + ">"
            }), Dn.toJSON = function () {
                return this.isValid() ? this.toISOString() : null
            }, Dn.toString = function () {
                return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
            }, Dn.unix = function () {
                return Math.floor(this.valueOf() / 1e3)
            }, Dn.valueOf = function () {
                return this._d.valueOf() - 6e4 * (this._offset || 0)
            }, Dn.creationData = function () {
                return {
                    input: this._i,
                    format: this._f,
                    locale: this._locale,
                    isUTC: this._isUTC,
                    strict: this._strict
                }
            }, Dn.eraName = function () {
                var e, t, n, s = this.localeData().eras();
                for (e = 0, t = s.length; e < t; ++e) {
                    if (n = this.clone().startOf("day").valueOf(), s[e].since <= n && n <= s[e].until) return s[e].name;
                    if (s[e].until <= n && n <= s[e].since) return s[e].name
                }
                return ""
            }, Dn.eraNarrow = function () {
                var e, t, n, s = this.localeData().eras();
                for (e = 0, t = s.length; e < t; ++e) {
                    if (n = this.clone().startOf("day").valueOf(), s[e].since <= n && n <= s[e].until) return s[e].narrow;
                    if (s[e].until <= n && n <= s[e].since) return s[e].narrow
                }
                return ""
            }, Dn.eraAbbr = function () {
                var e, t, n, s = this.localeData().eras();
                for (e = 0, t = s.length; e < t; ++e) {
                    if (n = this.clone().startOf("day").valueOf(), s[e].since <= n && n <= s[e].until) return s[e].abbr;
                    if (s[e].until <= n && n <= s[e].since) return s[e].abbr
                }
                return ""
            }, Dn.eraYear = function () {
                var e, t, s, i, r = this.localeData().eras();
                for (e = 0, t = r.length; e < t; ++e)
                    if (s = r[e].since <= r[e].until ? 1 : -1, i = this.clone().startOf("day").valueOf(), r[e].since <= i && i <= r[e].until || r[e].until <= i && i <= r[e].since) return (this.year() - n(r[e].since).year()) * s + r[e].offset;
                return this.year()
            }, Dn.year = be, Dn.isLeapYear = function () {
                return _e(this.year())
            }, Dn.weekYear = function (e) {
                return yn.call(this, e, this.week(), this.weekday() + this.localeData()._week.dow, this.localeData()._week.dow, this.localeData()._week.doy)
            }, Dn.isoWeekYear = function (e) {
                return yn.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
            }, Dn.quarter = Dn.quarters = function (e) {
                return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3)
            }, Dn.month = Le, Dn.daysInMonth = function () {
                return We(this.year(), this.month())
            }, Dn.week = Dn.weeks = function (e) {
                var t = this.localeData().week(this);
                return null == e ? t : this.add(7 * (e - t), "d")
            }, Dn.isoWeek = Dn.isoWeeks = function (e) {
                var t = je(this, 1, 4).week;
                return null == e ? t : this.add(7 * (e - t), "d")
            }, Dn.weeksInYear = function () {
                var e = this.localeData()._week;
                return Ie(this.year(), e.dow, e.doy)
            }, Dn.weeksInWeekYear = function () {
                var e = this.localeData()._week;
                return Ie(this.weekYear(), e.dow, e.doy)
            }, Dn.isoWeeksInYear = function () {
                return Ie(this.year(), 1, 4)
            }, Dn.isoWeeksInISOWeekYear = function () {
                return Ie(this.isoWeekYear(), 1, 4)
            }, Dn.date = gn, Dn.day = Dn.days = function (e) {
                if (!this.isValid()) return null != e ? this : NaN;
                var t = xe(this, "Day");
                return null != e ? (e = function (e, t) {
                    return "string" != typeof e ? e : isNaN(e) ? "number" == typeof (e = t.weekdaysParse(e)) ? e : null : parseInt(e, 10)
                }(e, this.localeData()), this.add(e - t, "d")) : t
            }, Dn.weekday = function (e) {
                if (!this.isValid()) return null != e ? this : NaN;
                var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
                return null == e ? t : this.add(e - t, "d")
            }, Dn.isoWeekday = function (e) {
                if (!this.isValid()) return null != e ? this : NaN;
                if (null != e) {
                    var t = function (e, t) {
                        return "string" == typeof e ? t.weekdaysParse(e) % 7 || 7 : isNaN(e) ? null : e
                    }(e, this.localeData());
                    return this.day(this.day() % 7 ? t : t - 7)
                }
                return this.day() || 7
            }, Dn.dayOfYear = function (e) {
                var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
                return null == e ? t : this.add(e - t, "d")
            }, Dn.hour = Dn.hours = nt, Dn.minute = Dn.minutes = wn, Dn.second = Dn.seconds = kn, Dn.millisecond = Dn.milliseconds = vn, Dn.utcOffset = function (e, t, s) {
                var i, r = this._offset || 0;
                if (!this.isValid()) return null != e ? this : NaN;
                if (null != e) {
                    if ("string" == typeof e) {
                        if (null === (e = Gt(ne, e))) return this
                    } else Math.abs(e) < 16 && !s && (e *= 60);
                    return !this._isUTC && t && (i = At(this)), this._offset = e, this._isUTC = !0, null != i && this.add(i, "m"), r !== e && (!t || this._changeInProgress ? Jt(this, zt(e - r, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, n.updateOffset(this, !0), this._changeInProgress = null)), this
                }
                return this._isUTC ? r : At(this)
            }, Dn.utc = function (e) {
                return this.utcOffset(0, e)
            }, Dn.local = function (e) {
                return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(At(this), "m")), this
            }, Dn.parseZone = function () {
                if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
                else if ("string" == typeof this._i) {
                    var e = Gt(te, this._i);
                    null != e ? this.utcOffset(e) : this.utcOffset(0, !0)
                }
                return this
            }, Dn.hasAlignedHourOffset = function (e) {
                return !!this.isValid() && (e = e ? Nt(e).utcOffset() : 0, (this.utcOffset() - e) % 60 == 0)
            }, Dn.isDST = function () {
                return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
            }, Dn.isLocal = function () {
                return !!this.isValid() && !this._isUTC
            }, Dn.isUtcOffset = function () {
                return !!this.isValid() && this._isUTC
            }, Dn.isUtc = jt, Dn.isUTC = jt, Dn.zoneAbbr = function () {
                return this._isUTC ? "UTC" : ""
            }, Dn.zoneName = function () {
                return this._isUTC ? "Coordinated Universal Time" : ""
            }, Dn.dates = M("dates accessor is deprecated. Use date instead.", gn), Dn.months = M("months accessor is deprecated. Use month instead", Le), Dn.years = M("years accessor is deprecated. Use year instead", be), Dn.zone = M("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", function (e, t) {
                return null != e ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this) : -this.utcOffset()
            }), Dn.isDSTShifted = M("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", function () {
                if (!o(this._isDSTShifted)) return this._isDSTShifted;
                var e, t = {};
                return w(t, this), (t = Tt(t))._a ? (e = t._isUTC ? c(t._a) : Nt(t._a), this._isDSTShifted = this.isValid() && function (e, t, n) {
                    var s, i = Math.min(e.length, t.length),
                        r = Math.abs(e.length - t.length),
                        a = 0;
                    for (s = 0; s < i; s++)(n && e[s] !== t[s] || !n && de(e[s]) !== de(t[s])) && a++;
                    return a + r
                }(t._a, e.toArray()) > 0) : this._isDSTShifted = !1, this._isDSTShifted
            });
            var Sn = T.prototype;
  
            function On(e, t, n, s) {
                var i = ct(),
                    r = c().set(s, t);
                return i[n](r, e)
            }
  
            function bn(e, t, n) {
                if (u(e) && (t = e, e = void 0), e = e || "", null != t) return On(e, t, n, "month");
                var s, i = [];
                for (s = 0; s < 12; s++) i[s] = On(e, s, n, "month");
                return i
            }
  
            function Tn(e, t, n, s) {
                "boolean" == typeof e ? (u(t) && (n = t, t = void 0), t = t || "") : (n = t = e, e = !1, u(t) && (n = t, t = void 0), t = t || "");
                var i, r = ct(),
                    a = e ? r._week.dow : 0,
                    o = [];
                if (null != n) return On(t, (n + a) % 7, s, "day");
                for (i = 0; i < 7; i++) o[i] = On(t, (i + a) % 7, s, "day");
                return o
            }
            Sn.calendar = function (e, t, n) {
                var s = this._calendar[e] || this._calendar.sameElse;
                return O(s) ? s.call(t, n) : s
            }, Sn.longDateFormat = function (e) {
                var t = this._longDateFormat[e],
                    n = this._longDateFormat[e.toUpperCase()];
                return t || !n ? t : (this._longDateFormat[e] = n.match(N).map(function (e) {
                    return "MMMM" === e || "MM" === e || "DD" === e || "dddd" === e ? e.slice(1) : e
                }).join(""), this._longDateFormat[e])
            }, Sn.invalidDate = function () {
                return this._invalidDate
            }, Sn.ordinal = function (e) {
                return this._ordinal.replace("%d", e)
            }, Sn.preparse = Yn, Sn.postformat = Yn, Sn.relativeTime = function (e, t, n, s) {
                var i = this._relativeTime[n];
                return O(i) ? i(e, t, n, s) : i.replace(/%d/i, e)
            }, Sn.pastFuture = function (e, t) {
                var n = this._relativeTime[e > 0 ? "future" : "past"];
                return O(n) ? n(t) : n.replace(/%s/i, t)
            }, Sn.set = function (e) {
                var t, n;
                for (n in e) r(e, n) && (O(t = e[n]) ? this[n] = t : this["_" + n] = t);
                this._config = e, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source)
            }, Sn.eras = function (e, t) {
                var s, i, r, a = this._eras || ct("en")._eras;
                for (s = 0, i = a.length; s < i; ++s) {
                    switch (typeof a[s].since) {
                        case "string":
                            r = n(a[s].since).startOf("day"), a[s].since = r.valueOf()
                    }
                    switch (typeof a[s].until) {
                        case "undefined":
                            a[s].until = 1 / 0;
                            break;
                        case "string":
                            r = n(a[s].until).startOf("day").valueOf(), a[s].until = r.valueOf()
                    }
                }
                return a
            }, Sn.erasParse = function (e, t, n) {
                var s, i, r, a, o, u = this.eras();
                for (e = e.toUpperCase(), s = 0, i = u.length; s < i; ++s)
                    if (r = u[s].name.toUpperCase(), a = u[s].abbr.toUpperCase(), o = u[s].narrow.toUpperCase(), n) switch (t) {
                        case "N":
                        case "NN":
                        case "NNN":
                            if (a === e) return u[s];
                            break;
                        case "NNNN":
                            if (r === e) return u[s];
                            break;
                        case "NNNNN":
                            if (o === e) return u[s]
                    } else if ([r, a, o].indexOf(e) >= 0) return u[s]
            }, Sn.erasConvertYear = function (e, t) {
                var s = e.since <= e.until ? 1 : -1;
                return void 0 === t ? n(e.since).year() : n(e.since).year() + (t - e.offset) * s
            }, Sn.erasAbbrRegex = function (e) {
                return r(this, "_erasAbbrRegex") || mn.call(this), e ? this._erasAbbrRegex : this._erasRegex
            }, Sn.erasNameRegex = function (e) {
                return r(this, "_erasNameRegex") || mn.call(this), e ? this._erasNameRegex : this._erasRegex
            }, Sn.erasNarrowRegex = function (e) {
                return r(this, "_erasNarrowRegex") || mn.call(this), e ? this._erasNarrowRegex : this._erasRegex
            }, Sn.months = function (e, t) {
                return e ? s(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || Ce).test(t) ? "format" : "standalone"][e.month()] : s(this._months) ? this._months : this._months.standalone
            }, Sn.monthsShort = function (e, t) {
                return e ? s(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[Ce.test(t) ? "format" : "standalone"][e.month()] : s(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
            }, Sn.monthsParse = function (e, t, n) {
                var s, i, r;
                if (this._monthsParseExact) return function (e, t, n) {
                    var s, i, r, a = e.toLocaleLowerCase();
                    if (!this._monthsParse)
                        for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], s = 0; s < 12; ++s) r = c([2e3, s]), this._shortMonthsParse[s] = this.monthsShort(r, "").toLocaleLowerCase(), this._longMonthsParse[s] = this.months(r, "").toLocaleLowerCase();
                    return n ? "MMM" === t ? -1 !== (i = Oe.call(this._shortMonthsParse, a)) ? i : null : -1 !== (i = Oe.call(this._longMonthsParse, a)) ? i : null : "MMM" === t ? -1 !== (i = Oe.call(this._shortMonthsParse, a)) ? i : -1 !== (i = Oe.call(this._longMonthsParse, a)) ? i : null : -1 !== (i = Oe.call(this._longMonthsParse, a)) ? i : -1 !== (i = Oe.call(this._shortMonthsParse, a)) ? i : null
                }.call(this, e, t, n);
                for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), s = 0; s < 12; s++) {
                    if (i = c([2e3, s]), n && !this._longMonthsParse[s] && (this._longMonthsParse[s] = new RegExp("^" + this.months(i, "").replace(".", "") + "$", "i"), this._shortMonthsParse[s] = new RegExp("^" + this.monthsShort(i, "").replace(".", "") + "$", "i")), n || this._monthsParse[s] || (r = "^" + this.months(i, "") + "|^" + this.monthsShort(i, ""), this._monthsParse[s] = new RegExp(r.replace(".", ""), "i")), n && "MMMM" === t && this._longMonthsParse[s].test(e)) return s;
                    if (n && "MMM" === t && this._shortMonthsParse[s].test(e)) return s;
                    if (!n && this._monthsParse[s].test(e)) return s
                }
            }, Sn.monthsRegex = function (e) {
                return this._monthsParseExact ? (r(this, "_monthsRegex") || Ve.call(this), e ? this._monthsStrictRegex : this._monthsRegex) : (r(this, "_monthsRegex") || (this._monthsRegex = He), this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex)
            }, Sn.monthsShortRegex = function (e) {
                return this._monthsParseExact ? (r(this, "_monthsRegex") || Ve.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (r(this, "_monthsShortRegex") || (this._monthsShortRegex = Ue), this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex)
            }, Sn.week = function (e) {
                return je(e, this._week.dow, this._week.doy).week
            }, Sn.firstDayOfYear = function () {
                return this._week.doy
            }, Sn.firstDayOfWeek = function () {
                return this._week.dow
            }, Sn.weekdays = function (e, t) {
                var n = s(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(t) ? "format" : "standalone"];
                return !0 === e ? Ze(n, this._week.dow) : e ? n[e.day()] : n
            }, Sn.weekdaysMin = function (e) {
                return !0 === e ? Ze(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin
            }, Sn.weekdaysShort = function (e) {
                return !0 === e ? Ze(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort
            }, Sn.weekdaysParse = function (e, t, n) {
                var s, i, r;
                if (this._weekdaysParseExact) return function (e, t, n) {
                    var s, i, r, a = e.toLocaleLowerCase();
                    if (!this._weekdaysParse)
                        for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], s = 0; s < 7; ++s) r = c([2e3, 1]).day(s), this._minWeekdaysParse[s] = this.weekdaysMin(r, "").toLocaleLowerCase(), this._shortWeekdaysParse[s] = this.weekdaysShort(r, "").toLocaleLowerCase(), this._weekdaysParse[s] = this.weekdays(r, "").toLocaleLowerCase();
                    return n ? "dddd" === t ? -1 !== (i = Oe.call(this._weekdaysParse, a)) ? i : null : "ddd" === t ? -1 !== (i = Oe.call(this._shortWeekdaysParse, a)) ? i : null : -1 !== (i = Oe.call(this._minWeekdaysParse, a)) ? i : null : "dddd" === t ? -1 !== (i = Oe.call(this._weekdaysParse, a)) ? i : -1 !== (i = Oe.call(this._shortWeekdaysParse, a)) ? i : -1 !== (i = Oe.call(this._minWeekdaysParse, a)) ? i : null : "ddd" === t ? -1 !== (i = Oe.call(this._shortWeekdaysParse, a)) ? i : -1 !== (i = Oe.call(this._weekdaysParse, a)) ? i : -1 !== (i = Oe.call(this._minWeekdaysParse, a)) ? i : null : -1 !== (i = Oe.call(this._minWeekdaysParse, a)) ? i : -1 !== (i = Oe.call(this._weekdaysParse, a)) ? i : -1 !== (i = Oe.call(this._shortWeekdaysParse, a)) ? i : null
                }.call(this, e, t, n);
                for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), s = 0; s < 7; s++) {
                    if (i = c([2e3, 1]).day(s), n && !this._fullWeekdaysParse[s] && (this._fullWeekdaysParse[s] = new RegExp("^" + this.weekdays(i, "").replace(".", "\\.?") + "$", "i"), this._shortWeekdaysParse[s] = new RegExp("^" + this.weekdaysShort(i, "").replace(".", "\\.?") + "$", "i"), this._minWeekdaysParse[s] = new RegExp("^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$", "i")), this._weekdaysParse[s] || (r = "^" + this.weekdays(i, "") + "|^" + this.weekdaysShort(i, "") + "|^" + this.weekdaysMin(i, ""), this._weekdaysParse[s] = new RegExp(r.replace(".", ""), "i")), n && "dddd" === t && this._fullWeekdaysParse[s].test(e)) return s;
                    if (n && "ddd" === t && this._shortWeekdaysParse[s].test(e)) return s;
                    if (n && "dd" === t && this._minWeekdaysParse[s].test(e)) return s;
                    if (!n && this._weekdaysParse[s].test(e)) return s
                }
            }, Sn.weekdaysRegex = function (e) {
                return this._weekdaysParseExact ? (r(this, "_weekdaysRegex") || Xe.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (r(this, "_weekdaysRegex") || (this._weekdaysRegex = Be), this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex)
            }, Sn.weekdaysShortRegex = function (e) {
                return this._weekdaysParseExact ? (r(this, "_weekdaysRegex") || Xe.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (r(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = Je), this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
            }, Sn.weekdaysMinRegex = function (e) {
                return this._weekdaysParseExact ? (r(this, "_weekdaysRegex") || Xe.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (r(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Qe), this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
            }, Sn.isPM = function (e) {
                return "p" === (e + "").toLowerCase().charAt(0)
            }, Sn.meridiem = function (e, t, n) {
                return e > 11 ? n ? "pm" : "PM" : n ? "am" : "AM"
            }, dt("en", {
                eras: [{
                    since: "0001-01-01",
                    until: 1 / 0,
                    offset: 1,
                    name: "Anno Domini",
                    narrow: "AD",
                    abbr: "AD"
                }, {
                    since: "0000-12-31",
                    until: -1 / 0,
                    offset: 1,
                    name: "Before Christ",
                    narrow: "BC",
                    abbr: "BC"
                }],
                dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                ordinal: function (e) {
                    var t = e % 10;
                    return e + (1 === de(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                }
            }), n.lang = M("moment.lang is deprecated. Use moment.locale instead.", dt), n.langData = M("moment.langData is deprecated. Use moment.localeData instead.", ct);
            var xn = Math.abs;
  
            function Nn(e, t, n, s) {
                var i = zt(t, n);
                return e._milliseconds += s * i._milliseconds, e._days += s * i._days, e._months += s * i._months, e._bubble()
            }
  
            function Wn(e) {
                return e < 0 ? Math.floor(e) : Math.ceil(e)
            }
  
            function Pn(e) {
                return 4800 * e / 146097
            }
  
            function Rn(e) {
                return 146097 * e / 4800
            }
  
            function Cn(e) {
                return function () {
                    return this.as(e)
                }
            }
            var Un = Cn("ms"),
                Hn = Cn("s"),
                Fn = Cn("m"),
                Ln = Cn("h"),
                Vn = Cn("d"),
                Gn = Cn("w"),
                En = Cn("M"),
                An = Cn("Q"),
                jn = Cn("y"),
                In = Un;
  
            function Zn(e) {
                return function () {
                    return this.isValid() ? this._data[e] : NaN
                }
            }
            var zn = Zn("milliseconds"),
                qn = Zn("seconds"),
                $n = Zn("minutes"),
                Bn = Zn("hours"),
                Jn = Zn("days"),
                Qn = Zn("months"),
                Xn = Zn("years");
            var Kn = Math.round,
                es = {
                    ss: 44,
                    s: 45,
                    m: 45,
                    h: 22,
                    d: 26,
                    w: null,
                    M: 11
                };
            var ts = Math.abs;
  
            function ns(e) {
                return (e > 0) - (e < 0) || +e
            }
  
            function ss() {
                if (!this.isValid()) return this.localeData().invalidDate();
                var e, t, n, s, i, r, a, o, u = ts(this._milliseconds) / 1e3,
                    l = ts(this._days),
                    d = ts(this._months),
                    h = this.asSeconds();
                return h ? (e = le(u / 60), t = le(e / 60), u %= 60, e %= 60, n = le(d / 12), d %= 12, s = u ? u.toFixed(3).replace(/\.?0+$/, "") : "", i = h < 0 ? "-" : "", r = ns(this._months) !== ns(h) ? "-" : "", a = ns(this._days) !== ns(h) ? "-" : "", o = ns(this._milliseconds) !== ns(h) ? "-" : "", i + "P" + (n ? r + n + "Y" : "") + (d ? r + d + "M" : "") + (l ? a + l + "D" : "") + (t || e || u ? "T" : "") + (t ? o + t + "H" : "") + (e ? o + e + "M" : "") + (u ? o + s + "S" : "")) : "P0D"
            }
            var is = Ut.prototype;
            return is.isValid = function () {
                return this._isValid
            }, is.abs = function () {
                var e = this._data;
                return this._milliseconds = xn(this._milliseconds), this._days = xn(this._days), this._months = xn(this._months), e.milliseconds = xn(e.milliseconds), e.seconds = xn(e.seconds), e.minutes = xn(e.minutes), e.hours = xn(e.hours), e.months = xn(e.months), e.years = xn(e.years), this
            }, is.add = function (e, t) {
                return Nn(this, e, t, 1)
            }, is.subtract = function (e, t) {
                return Nn(this, e, t, -1)
            }, is.as = function (e) {
                if (!this.isValid()) return NaN;
                var t, n, s = this._milliseconds;
                if ("month" === (e = L(e)) || "quarter" === e || "year" === e) switch (t = this._days + s / 864e5, n = this._months + Pn(t), e) {
                    case "month":
                        return n;
                    case "quarter":
                        return n / 3;
                    case "year":
                        return n / 12
                } else switch (t = this._days + Math.round(Rn(this._months)), e) {
                    case "week":
                        return t / 7 + s / 6048e5;
                    case "day":
                        return t + s / 864e5;
                    case "hour":
                        return 24 * t + s / 36e5;
                    case "minute":
                        return 1440 * t + s / 6e4;
                    case "second":
                        return 86400 * t + s / 1e3;
                    case "millisecond":
                        return Math.floor(864e5 * t) + s;
                    default:
                        throw new Error("Unknown unit " + e)
                }
            }, is.asMilliseconds = Un, is.asSeconds = Hn, is.asMinutes = Fn, is.asHours = Ln, is.asDays = Vn, is.asWeeks = Gn, is.asMonths = En, is.asQuarters = An, is.asYears = jn, is.valueOf = In, is._bubble = function () {
                var e, t, n, s, i, r = this._milliseconds,
                    a = this._days,
                    o = this._months,
                    u = this._data;
                return r >= 0 && a >= 0 && o >= 0 || r <= 0 && a <= 0 && o <= 0 || (r += 864e5 * Wn(Rn(o) + a), a = 0, o = 0), u.milliseconds = r % 1e3, e = le(r / 1e3), u.seconds = e % 60, t = le(e / 60), u.minutes = t % 60, n = le(t / 60), u.hours = n % 24, a += le(n / 24), o += i = le(Pn(a)), a -= Wn(Rn(i)), s = le(o / 12), o %= 12, u.days = a, u.months = o, u.years = s, this
            }, is.clone = function () {
                return zt(this)
            }, is.get = function (e) {
                return e = L(e), this.isValid() ? this[e + "s"]() : NaN
            }, is.milliseconds = zn, is.seconds = qn, is.minutes = $n, is.hours = Bn, is.days = Jn, is.weeks = function () {
                return le(this.days() / 7)
            }, is.months = Qn, is.years = Xn, is.humanize = function (e, t) {
                if (!this.isValid()) return this.localeData().invalidDate();
                var n, s, i = !1,
                    r = es;
                return "object" == typeof e && (t = e, e = !1), "boolean" == typeof e && (i = e), "object" == typeof t && (r = Object.assign({}, es, t), null != t.s && null == t.ss && (r.ss = t.s - 1)), s = function (e, t, n, s) {
                    var i = zt(e).abs(),
                        r = Kn(i.as("s")),
                        a = Kn(i.as("m")),
                        o = Kn(i.as("h")),
                        u = Kn(i.as("d")),
                        l = Kn(i.as("M")),
                        d = Kn(i.as("w")),
                        h = Kn(i.as("y")),
                        c = r <= n.ss && ["s", r] || r < n.s && ["ss", r] || a <= 1 && ["m"] || a < n.m && ["mm", a] || o <= 1 && ["h"] || o < n.h && ["hh", o] || u <= 1 && ["d"] || u < n.d && ["dd", u];
                    return null != n.w && (c = c || d <= 1 && ["w"] || d < n.w && ["ww", d]), (c = c || l <= 1 && ["M"] || l < n.M && ["MM", l] || h <= 1 && ["y"] || ["yy", h])[2] = t, c[3] = +e > 0, c[4] = s,
                        function (e, t, n, s, i) {
                            return i.relativeTime(t || 1, !!n, e, s)
                        }.apply(null, c)
                }(this, !i, r, n = this.localeData()), i && (s = n.pastFuture(+this, s)), n.postformat(s)
            }, is.toISOString = ss, is.toString = ss, is.toJSON = ss, is.locale = nn, is.localeData = rn, is.toIsoString = M("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", ss), is.lang = sn, C("X", 0, 0, "unix"), C("x", 0, 0, "valueOf"), ae("x", ee), ae("X", /[+-]?\d+(\.\d{1,3})?/), ce("X", function (e, t, n) {
                n._d = new Date(1e3 * parseFloat(e))
            }), ce("x", function (e, t, n) {
                n._d = new Date(de(e))
            }), n.version = "2.30.1", e = Nt, n.fn = Dn, n.min = function () {
                return Rt("isBefore", [].slice.call(arguments, 0))
            }, n.max = function () {
                return Rt("isAfter", [].slice.call(arguments, 0))
            }, n.now = function () {
                return Date.now ? Date.now() : +new Date
            }, n.utc = c, n.unix = function (e) {
                return Nt(1e3 * e)
            }, n.months = function (e, t) {
                return bn(e, t, "months")
            }, n.isDate = l, n.locale = dt, n.invalid = _, n.duration = zt, n.isMoment = v, n.weekdays = function (e, t, n) {
                return Tn(e, t, n, "weekdays")
            }, n.parseZone = function () {
                return Nt.apply(null, arguments).parseZone()
            }, n.localeData = ct, n.isDuration = Ht, n.monthsShort = function (e, t) {
                return bn(e, t, "monthsShort")
            }, n.weekdaysMin = function (e, t, n) {
                return Tn(e, t, n, "weekdaysMin")
            }, n.defineLocale = ht, n.updateLocale = function (e, t) {
                if (null != t) {
                    var n, s, i = it;
                    null != rt[e] && null != rt[e].parentLocale ? rt[e].set(b(rt[e]._config, t)) : (null != (s = lt(e)) && (i = s._config), t = b(i, t), null == s && (t.abbr = e), (n = new T(t)).parentLocale = rt[e], rt[e] = n), dt(e)
                } else null != rt[e] && (null != rt[e].parentLocale ? (rt[e] = rt[e].parentLocale, e === dt() && dt(e)) : null != rt[e] && delete rt[e]);
                return rt[e]
            }, n.locales = function () {
                return D(rt)
            }, n.weekdaysShort = function (e, t, n) {
                return Tn(e, t, n, "weekdaysShort")
            }, n.normalizeUnits = L, n.relativeTimeRounding = function (e) {
                return void 0 === e ? Kn : "function" == typeof e && (Kn = e, !0)
            }, n.relativeTimeThreshold = function (e, t) {
                return void 0 !== es[e] && (void 0 === t ? es[e] : (es[e] = t, "s" === e && (es.ss = t - 1), !0))
            }, n.calendarFormat = function (e, t) {
                var n = e.diff(t, "days", !0);
                return n < -6 ? "sameElse" : n < -1 ? "lastWeek" : n < 0 ? "lastDay" : n < 1 ? "sameDay" : n < 2 ? "nextDay" : n < 7 ? "nextWeek" : "sameElse"
            }, n.prototype = Dn, n.HTML5_FMT = {
                DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                DATE: "YYYY-MM-DD",
                TIME: "HH:mm",
                TIME_SECONDS: "HH:mm:ss",
                TIME_MS: "HH:mm:ss.SSS",
                WEEK: "GGGG-[W]WW",
                MONTH: "YYYY-MM"
            }, n
        });
  
    }, {}],
    60: [function (require, module, exports) {
        "use strict";
        var __importDefault = this && this.__importDefault || function (e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.generate = exports.compile = void 0;
        var boolbase_1 = __importDefault(require("boolbase"));
  
        function compile(e) {
            var r = e[0],
                t = e[1] - 1;
            if (t < 0 && r <= 0) return boolbase_1.default.falseFunc;
            if (-1 === r) return function (e) {
                return e <= t
            };
            if (0 === r) return function (e) {
                return e === t
            };
            if (1 === r) return t < 0 ? boolbase_1.default.trueFunc : function (e) {
                return e >= t
            };
            var n = Math.abs(r),
                u = (t % n + n) % n;
            return r > 1 ? function (e) {
                return e >= t && e % n === u
            } : function (e) {
                return e <= t && e % n === u
            }
        }
  
        function generate(e) {
            var r = e[0],
                t = e[1] - 1,
                n = 0;
            if (r < 0) {
                var u = -r,
                    o = (t % u + u) % u;
                return function () {
                    var e = o + u * n++;
                    return e > t ? null : e
                }
            }
            return 0 === r ? t < 0 ? function () {
                return null
            } : function () {
                return 0 == n++ ? t : null
            } : (t < 0 && (t += r * Math.ceil(-t / r)), function () {
                return r * n++ + t
            })
        }
        exports.compile = compile, exports.generate = generate;
  
    }, {
        "boolbase": 2
    }],
    61: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.sequence = exports.generate = exports.compile = exports.parse = void 0;
        var parse_js_1 = require("./parse.js");
        Object.defineProperty(exports, "parse", {
            enumerable: !0,
            get: function () {
                return parse_js_1.parse
            }
        });
        var compile_js_1 = require("./compile.js");
  
        function nthCheck(e) {
            return (0, compile_js_1.compile)((0, parse_js_1.parse)(e))
        }
  
        function sequence(e) {
            return (0, compile_js_1.generate)((0, parse_js_1.parse)(e))
        }
        Object.defineProperty(exports, "compile", {
            enumerable: !0,
            get: function () {
                return compile_js_1.compile
            }
        }), Object.defineProperty(exports, "generate", {
            enumerable: !0,
            get: function () {
                return compile_js_1.generate
            }
        }), exports.default = nthCheck, exports.sequence = sequence;
  
    }, {
        "./compile.js": 60,
        "./parse.js": 62
    }],
    62: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.parse = void 0;
        var whitespace = new Set([9, 10, 12, 13, 32]),
            ZERO = "0".charCodeAt(0),
            NINE = "9".charCodeAt(0);
  
        function parse(e) {
            if ("even" === (e = e.trim().toLowerCase())) return [2, 0];
            if ("odd" === e) return [2, 1];
            var r = 0,
                t = 0,
                n = a(),
                o = c();
            if (r < e.length && "n" === e.charAt(r) && (r++, t = n * (null != o ? o : 1), h(), r < e.length ? (n = a(), h(), o = c()) : n = o = 0), null === o || r < e.length) throw new Error("n-th rule couldn't be parsed ('".concat(e, "')"));
            return [t, n * o];
  
            function a() {
                return "-" === e.charAt(r) ? (r++, -1) : ("+" === e.charAt(r) && r++, 1)
            }
  
            function c() {
                for (var t = r, n = 0; r < e.length && e.charCodeAt(r) >= ZERO && e.charCodeAt(r) <= NINE;) n = 10 * n + (e.charCodeAt(r) - ZERO), r++;
                return r === t ? null : n
            }
  
            function h() {
                for (; r < e.length && whitespace.has(e.charCodeAt(r));) r++
            }
        }
        exports.parse = parse;
  
    }, {}],
    63: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.adapter = exports.serializeDoctypeContent = void 0;
        const parse5_1 = require("parse5"),
            domhandler_1 = require("domhandler");
  
        function createTextNode(e) {
            return new domhandler_1.Text(e)
        }
  
        function enquoteDoctypeId(e) {
            const t = e.includes('"') ? "'" : '"';
            return t + e + t
        }
  
        function serializeDoctypeContent(e, t, n) {
            let o = "!DOCTYPE ";
            return e && (o += e), t ? o += ` PUBLIC ${enquoteDoctypeId(t)}` : n && (o += " SYSTEM"), n && (o += ` ${enquoteDoctypeId(n)}`), o
        }
        exports.serializeDoctypeContent = serializeDoctypeContent, exports.adapter = {
            isCommentNode: domhandler_1.isComment,
            isElementNode: domhandler_1.isTag,
            isTextNode: domhandler_1.isText,
            createDocument() {
                const e = new domhandler_1.Document([]);
                return e["x-mode"] = parse5_1.html.DOCUMENT_MODE.NO_QUIRKS, e
            },
            createDocumentFragment: () => new domhandler_1.Document([]),
            createElement(e, t, n) {
                const o = Object.create(null),
                    r = Object.create(null),
                    d = Object.create(null);
                for (let e = 0; e < n.length; e++) {
                    const t = n[e].name;
                    o[t] = n[e].value, r[t] = n[e].namespace, d[t] = n[e].prefix
                }
                const a = new domhandler_1.Element(e, o, []);
                return a.namespace = t, a["x-attribsNamespace"] = r, a["x-attribsPrefix"] = d, a
            },
            createCommentNode: e => new domhandler_1.Comment(e),
            appendChild(e, t) {
                const n = e.children[e.children.length - 1];
                n && (n.next = t, t.prev = n), e.children.push(t), t.parent = e
            },
            insertBefore(e, t, n) {
                const o = e.children.indexOf(n),
                    {
                        prev: r
                    } = n;
                r && (r.next = t, t.prev = r), n.prev = t, t.next = n, e.children.splice(o, 0, t), t.parent = e
            },
            setTemplateContent(e, t) {
                exports.adapter.appendChild(e, t)
            },
            getTemplateContent: e => e.children[0],
            setDocumentType(e, t, n, o) {
                const r = serializeDoctypeContent(t, n, o);
                let d = e.children.find(e => (0, domhandler_1.isDirective)(e) && "!doctype" === e.name);
                d ? d.data = null != r ? r : null : (d = new domhandler_1.ProcessingInstruction("!doctype", r), exports.adapter.appendChild(e, d)), d["x-name"] = null != t ? t : void 0, d["x-publicId"] = null != n ? n : void 0, d["x-systemId"] = null != o ? o : void 0
            },
            setDocumentMode(e, t) {
                e["x-mode"] = t
            },
            getDocumentMode: e => e["x-mode"],
            detachNode(e) {
                if (e.parent) {
                    const t = e.parent.children.indexOf(e),
                        {
                            prev: n,
                            next: o
                        } = e;
                    e.prev = null, e.next = null, n && (n.next = o), o && (o.prev = n), e.parent.children.splice(t, 1), e.parent = null
                }
            },
            insertText(e, t) {
                const n = e.children[e.children.length - 1];
                n && (0, domhandler_1.isText)(n) ? n.data += t : exports.adapter.appendChild(e, createTextNode(t))
            },
            insertTextBefore(e, t, n) {
                const o = e.children[e.children.indexOf(n) - 1];
                o && (0, domhandler_1.isText)(o) ? o.data += t : exports.adapter.insertBefore(e, createTextNode(t), n)
            },
            adoptAttributes(e, t) {
                for (let n = 0; n < t.length; n++) {
                    const o = t[n].name;
                    void 0 === e.attribs[o] && (e.attribs[o] = t[n].value, e["x-attribsNamespace"][o] = t[n].namespace, e["x-attribsPrefix"][o] = t[n].prefix)
                }
            },
            getFirstChild: e => e.children[0],
            getChildNodes: e => e.children,
            getParentNode: e => e.parent,
            getAttrList: e => e.attributes,
            getTagName: e => e.name,
            getNamespaceURI: e => e.namespace,
            getTextNodeContent: e => e.data,
            getCommentNodeContent: e => e.data,
            getDocumentTypeNodeName(e) {
                var t;
                return null !== (t = e["x-name"]) && void 0 !== t ? t : ""
            },
            getDocumentTypeNodePublicId(e) {
                var t;
                return null !== (t = e["x-publicId"]) && void 0 !== t ? t : ""
            },
            getDocumentTypeNodeSystemId(e) {
                var t;
                return null !== (t = e["x-systemId"]) && void 0 !== t ? t : ""
            },
            isDocumentTypeNode: e => (0, domhandler_1.isDirective)(e) && "!doctype" === e.name,
            setNodeSourceCodeLocation(e, t) {
                t && (e.startIndex = t.startOffset, e.endIndex = t.endOffset), e.sourceCodeLocation = t
            },
            getNodeSourceCodeLocation: e => e.sourceCodeLocation,
            updateNodeSourceCodeLocation(e, t) {
                null != t.endOffset && (e.endIndex = t.endOffset), e.sourceCodeLocation = Object.assign(Object.assign({}, e.sourceCodeLocation), t)
            }
        };
  
    }, {
        "domhandler": 37,
        "parse5": 70
    }],
    64: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.getDocumentMode = exports.isConforming = void 0;
        const html_js_1 = require("./html.js"),
            VALID_DOCTYPE_NAME = "html",
            VALID_SYSTEM_ID = "about:legacy-compat",
            QUIRKS_MODE_SYSTEM_ID = "http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd",
            QUIRKS_MODE_PUBLIC_ID_PREFIXES = ["+//silmaril//dtd html pro v0r11 19970101//", "-//as//dtd html 3.0 aswedit + extensions//", "-//advasoft ltd//dtd html 3.0 aswedit + extensions//", "-//ietf//dtd html 2.0 level 1//", "-//ietf//dtd html 2.0 level 2//", "-//ietf//dtd html 2.0 strict level 1//", "-//ietf//dtd html 2.0 strict level 2//", "-//ietf//dtd html 2.0 strict//", "-//ietf//dtd html 2.0//", "-//ietf//dtd html 2.1e//", "-//ietf//dtd html 3.0//", "-//ietf//dtd html 3.2 final//", "-//ietf//dtd html 3.2//", "-//ietf//dtd html 3//", "-//ietf//dtd html level 0//", "-//ietf//dtd html level 1//", "-//ietf//dtd html level 2//", "-//ietf//dtd html level 3//", "-//ietf//dtd html strict level 0//", "-//ietf//dtd html strict level 1//", "-//ietf//dtd html strict level 2//", "-//ietf//dtd html strict level 3//", "-//ietf//dtd html strict//", "-//ietf//dtd html//", "-//metrius//dtd metrius presentational//", "-//microsoft//dtd internet explorer 2.0 html strict//", "-//microsoft//dtd internet explorer 2.0 html//", "-//microsoft//dtd internet explorer 2.0 tables//", "-//microsoft//dtd internet explorer 3.0 html strict//", "-//microsoft//dtd internet explorer 3.0 html//", "-//microsoft//dtd internet explorer 3.0 tables//", "-//netscape comm. corp.//dtd html//", "-//netscape comm. corp.//dtd strict html//", "-//o'reilly and associates//dtd html 2.0//", "-//o'reilly and associates//dtd html extended 1.0//", "-//o'reilly and associates//dtd html extended relaxed 1.0//", "-//sq//dtd html 2.0 hotmetal + extensions//", "-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//", "-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//", "-//spyglass//dtd html 2.0 extended//", "-//sun microsystems corp.//dtd hotjava html//", "-//sun microsystems corp.//dtd hotjava strict html//", "-//w3c//dtd html 3 1995-03-24//", "-//w3c//dtd html 3.2 draft//", "-//w3c//dtd html 3.2 final//", "-//w3c//dtd html 3.2//", "-//w3c//dtd html 3.2s draft//", "-//w3c//dtd html 4.0 frameset//", "-//w3c//dtd html 4.0 transitional//", "-//w3c//dtd html experimental 19960712//", "-//w3c//dtd html experimental 970421//", "-//w3c//dtd w3 html//", "-//w3o//dtd w3 html 3.0//", "-//webtechs//dtd mozilla html 2.0//", "-//webtechs//dtd mozilla html//"],
            QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [...QUIRKS_MODE_PUBLIC_ID_PREFIXES, "-//w3c//dtd html 4.01 frameset//", "-//w3c//dtd html 4.01 transitional//"],
            QUIRKS_MODE_PUBLIC_IDS = new Set(["-//w3o//dtd w3 html strict 3.0//en//", "-/w3c/dtd html 4.0 transitional/en", "html"]),
            LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ["-//w3c//dtd xhtml 1.0 frameset//", "-//w3c//dtd xhtml 1.0 transitional//"],
            LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES, "-//w3c//dtd html 4.01 frameset//", "-//w3c//dtd html 4.01 transitional//"];
  
        function hasPrefix(t, e) {
            return e.some(e => t.startsWith(e))
        }
  
        function isConforming(t) {
            return t.name === VALID_DOCTYPE_NAME && null === t.publicId && (null === t.systemId || t.systemId === VALID_SYSTEM_ID)
        }
  
        function getDocumentMode(t) {
            if (t.name !== VALID_DOCTYPE_NAME) return html_js_1.DOCUMENT_MODE.QUIRKS;
            const {
                systemId: e
            } = t;
            if (e && e.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) return html_js_1.DOCUMENT_MODE.QUIRKS;
            let {
                publicId: d
            } = t;
            if (null !== d) {
                if (d = d.toLowerCase(), QUIRKS_MODE_PUBLIC_IDS.has(d)) return html_js_1.DOCUMENT_MODE.QUIRKS;
                let t = null === e ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;
                if (hasPrefix(d, t)) return html_js_1.DOCUMENT_MODE.QUIRKS;
                if (hasPrefix(d, t = null === e ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES)) return html_js_1.DOCUMENT_MODE.LIMITED_QUIRKS
            }
            return html_js_1.DOCUMENT_MODE.NO_QUIRKS
        }
        exports.isConforming = isConforming, exports.getDocumentMode = getDocumentMode;
  
    }, {
        "./html.js": 67
    }],
    65: [function (require, module, exports) {
        "use strict";
        var ERR;
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.ERR = void 0,
            function (e) {
                e.controlCharacterInInputStream = "control-character-in-input-stream", e.noncharacterInInputStream = "noncharacter-in-input-stream", e.surrogateInInputStream = "surrogate-in-input-stream", e.nonVoidHtmlElementStartTagWithTrailingSolidus = "non-void-html-element-start-tag-with-trailing-solidus", e.endTagWithAttributes = "end-tag-with-attributes", e.endTagWithTrailingSolidus = "end-tag-with-trailing-solidus", e.unexpectedSolidusInTag = "unexpected-solidus-in-tag", e.unexpectedNullCharacter = "unexpected-null-character", e.unexpectedQuestionMarkInsteadOfTagName = "unexpected-question-mark-instead-of-tag-name", e.invalidFirstCharacterOfTagName = "invalid-first-character-of-tag-name", e.unexpectedEqualsSignBeforeAttributeName = "unexpected-equals-sign-before-attribute-name", e.missingEndTagName = "missing-end-tag-name", e.unexpectedCharacterInAttributeName = "unexpected-character-in-attribute-name", e.unknownNamedCharacterReference = "unknown-named-character-reference", e.missingSemicolonAfterCharacterReference = "missing-semicolon-after-character-reference", e.unexpectedCharacterAfterDoctypeSystemIdentifier = "unexpected-character-after-doctype-system-identifier", e.unexpectedCharacterInUnquotedAttributeValue = "unexpected-character-in-unquoted-attribute-value", e.eofBeforeTagName = "eof-before-tag-name", e.eofInTag = "eof-in-tag", e.missingAttributeValue = "missing-attribute-value", e.missingWhitespaceBetweenAttributes = "missing-whitespace-between-attributes", e.missingWhitespaceAfterDoctypePublicKeyword = "missing-whitespace-after-doctype-public-keyword", e.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers = "missing-whitespace-between-doctype-public-and-system-identifiers", e.missingWhitespaceAfterDoctypeSystemKeyword = "missing-whitespace-after-doctype-system-keyword", e.missingQuoteBeforeDoctypePublicIdentifier = "missing-quote-before-doctype-public-identifier", e.missingQuoteBeforeDoctypeSystemIdentifier = "missing-quote-before-doctype-system-identifier", e.missingDoctypePublicIdentifier = "missing-doctype-public-identifier", e.missingDoctypeSystemIdentifier = "missing-doctype-system-identifier", e.abruptDoctypePublicIdentifier = "abrupt-doctype-public-identifier", e.abruptDoctypeSystemIdentifier = "abrupt-doctype-system-identifier", e.cdataInHtmlContent = "cdata-in-html-content", e.incorrectlyOpenedComment = "incorrectly-opened-comment", e.eofInScriptHtmlCommentLikeText = "eof-in-script-html-comment-like-text", e.eofInDoctype = "eof-in-doctype", e.nestedComment = "nested-comment", e.abruptClosingOfEmptyComment = "abrupt-closing-of-empty-comment", e.eofInComment = "eof-in-comment", e.incorrectlyClosedComment = "incorrectly-closed-comment", e.eofInCdata = "eof-in-cdata", e.absenceOfDigitsInNumericCharacterReference = "absence-of-digits-in-numeric-character-reference", e.nullCharacterReference = "null-character-reference", e.surrogateCharacterReference = "surrogate-character-reference", e.characterReferenceOutsideUnicodeRange = "character-reference-outside-unicode-range", e.controlCharacterReference = "control-character-reference", e.noncharacterCharacterReference = "noncharacter-character-reference", e.missingWhitespaceBeforeDoctypeName = "missing-whitespace-before-doctype-name", e.missingDoctypeName = "missing-doctype-name", e.invalidCharacterSequenceAfterDoctypeName = "invalid-character-sequence-after-doctype-name", e.duplicateAttribute = "duplicate-attribute", e.nonConformingDoctype = "non-conforming-doctype", e.missingDoctype = "missing-doctype", e.misplacedDoctype = "misplaced-doctype", e.endTagWithoutMatchingOpenElement = "end-tag-without-matching-open-element", e.closingOfElementWithOpenChildElements = "closing-of-element-with-open-child-elements", e.disallowedContentInNoscriptInHead = "disallowed-content-in-noscript-in-head", e.openElementsLeftAfterEof = "open-elements-left-after-eof", e.abandonedHeadElementChild = "abandoned-head-element-child", e.misplacedStartTagForHeadElement = "misplaced-start-tag-for-head-element", e.nestedNoscriptInHead = "nested-noscript-in-head", e.eofInElementThatCanContainOnlyText = "eof-in-element-that-can-contain-only-text"
            }(ERR = exports.ERR || (exports.ERR = {}));
  
    }, {}],
    66: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.isIntegrationPoint = exports.adjustTokenSVGTagName = exports.adjustTokenXMLAttrs = exports.adjustTokenSVGAttrs = exports.adjustTokenMathMLAttrs = exports.causesExit = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = void 0;
        const html_js_1 = require("./html.js"),
            MIME_TYPES = {
                TEXT_HTML: "text/html",
                APPLICATION_XML: "application/xhtml+xml"
            },
            DEFINITION_URL_ATTR = "definitionurl",
            ADJUSTED_DEFINITION_URL_ATTR = "definitionURL",
            SVG_ATTRS_ADJUSTMENT_MAP = new Map(["attributeName", "attributeType", "baseFrequency", "baseProfile", "calcMode", "clipPathUnits", "diffuseConstant", "edgeMode", "filterUnits", "glyphRef", "gradientTransform", "gradientUnits", "kernelMatrix", "kernelUnitLength", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "limitingConeAngle", "markerHeight", "markerUnits", "markerWidth", "maskContentUnits", "maskUnits", "numOctaves", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "refX", "refY", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "specularConstant", "specularExponent", "spreadMethod", "startOffset", "stdDeviation", "stitchTiles", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textLength", "viewBox", "viewTarget", "xChannelSelector", "yChannelSelector", "zoomAndPan"].map(t => [t.toLowerCase(), t])),
            XML_ATTRS_ADJUSTMENT_MAP = new Map([
                ["xlink:actuate", {
                    prefix: "xlink",
                    name: "actuate",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xlink:arcrole", {
                    prefix: "xlink",
                    name: "arcrole",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xlink:href", {
                    prefix: "xlink",
                    name: "href",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xlink:role", {
                    prefix: "xlink",
                    name: "role",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xlink:show", {
                    prefix: "xlink",
                    name: "show",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xlink:title", {
                    prefix: "xlink",
                    name: "title",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xlink:type", {
                    prefix: "xlink",
                    name: "type",
                    namespace: html_js_1.NS.XLINK
                }],
                ["xml:base", {
                    prefix: "xml",
                    name: "base",
                    namespace: html_js_1.NS.XML
                }],
                ["xml:lang", {
                    prefix: "xml",
                    name: "lang",
                    namespace: html_js_1.NS.XML
                }],
                ["xml:space", {
                    prefix: "xml",
                    name: "space",
                    namespace: html_js_1.NS.XML
                }],
                ["xmlns", {
                    prefix: "",
                    name: "xmlns",
                    namespace: html_js_1.NS.XMLNS
                }],
                ["xmlns:xlink", {
                    prefix: "xmlns",
                    name: "xlink",
                    namespace: html_js_1.NS.XMLNS
                }]
            ]);
        exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map(["altGlyph", "altGlyphDef", "altGlyphItem", "animateColor", "animateMotion", "animateTransform", "clipPath", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "foreignObject", "glyphRef", "linearGradient", "radialGradient", "textPath"].map(t => [t.toLowerCase(), t]));
        const EXITS_FOREIGN_CONTENT = new Set([html_js_1.TAG_ID.B, html_js_1.TAG_ID.BIG, html_js_1.TAG_ID.BLOCKQUOTE, html_js_1.TAG_ID.BODY, html_js_1.TAG_ID.BR, html_js_1.TAG_ID.CENTER, html_js_1.TAG_ID.CODE, html_js_1.TAG_ID.DD, html_js_1.TAG_ID.DIV, html_js_1.TAG_ID.DL, html_js_1.TAG_ID.DT, html_js_1.TAG_ID.EM, html_js_1.TAG_ID.EMBED, html_js_1.TAG_ID.H1, html_js_1.TAG_ID.H2, html_js_1.TAG_ID.H3, html_js_1.TAG_ID.H4, html_js_1.TAG_ID.H5, html_js_1.TAG_ID.H6, html_js_1.TAG_ID.HEAD, html_js_1.TAG_ID.HR, html_js_1.TAG_ID.I, html_js_1.TAG_ID.IMG, html_js_1.TAG_ID.LI, html_js_1.TAG_ID.LISTING, html_js_1.TAG_ID.MENU, html_js_1.TAG_ID.META, html_js_1.TAG_ID.NOBR, html_js_1.TAG_ID.OL, html_js_1.TAG_ID.P, html_js_1.TAG_ID.PRE, html_js_1.TAG_ID.RUBY, html_js_1.TAG_ID.S, html_js_1.TAG_ID.SMALL, html_js_1.TAG_ID.SPAN, html_js_1.TAG_ID.STRONG, html_js_1.TAG_ID.STRIKE, html_js_1.TAG_ID.SUB, html_js_1.TAG_ID.SUP, html_js_1.TAG_ID.TABLE, html_js_1.TAG_ID.TT, html_js_1.TAG_ID.U, html_js_1.TAG_ID.UL, html_js_1.TAG_ID.VAR]);
  
        function causesExit(t) {
            const e = t.tagID;
            return e === html_js_1.TAG_ID.FONT && t.attrs.some(({
                name: t
            }) => t === html_js_1.ATTRS.COLOR || t === html_js_1.ATTRS.SIZE || t === html_js_1.ATTRS.FACE) || EXITS_FOREIGN_CONTENT.has(e)
        }
  
        function adjustTokenMathMLAttrs(t) {
            for (let e = 0; e < t.attrs.length; e++)
                if (t.attrs[e].name === DEFINITION_URL_ATTR) {
                    t.attrs[e].name = ADJUSTED_DEFINITION_URL_ATTR;
                    break
                }
        }
  
        function adjustTokenSVGAttrs(t) {
            for (let e = 0; e < t.attrs.length; e++) {
                const _ = SVG_ATTRS_ADJUSTMENT_MAP.get(t.attrs[e].name);
                null != _ && (t.attrs[e].name = _)
            }
        }
  
        function adjustTokenXMLAttrs(t) {
            for (let e = 0; e < t.attrs.length; e++) {
                const _ = XML_ATTRS_ADJUSTMENT_MAP.get(t.attrs[e].name);
                _ && (t.attrs[e].prefix = _.prefix, t.attrs[e].name = _.name, t.attrs[e].namespace = _.namespace)
            }
        }
  
        function adjustTokenSVGTagName(t) {
            const e = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP.get(t.tagName);
            null != e && (t.tagName = e, t.tagID = (0, html_js_1.getTagID)(t.tagName))
        }
  
        function isMathMLTextIntegrationPoint(t, e) {
            return e === html_js_1.NS.MATHML && (t === html_js_1.TAG_ID.MI || t === html_js_1.TAG_ID.MO || t === html_js_1.TAG_ID.MN || t === html_js_1.TAG_ID.MS || t === html_js_1.TAG_ID.MTEXT)
        }
  
        function isHtmlIntegrationPoint(t, e, _) {
            if (e === html_js_1.NS.MATHML && t === html_js_1.TAG_ID.ANNOTATION_XML)
                for (let t = 0; t < _.length; t++)
                    if (_[t].name === html_js_1.ATTRS.ENCODING) {
                        const e = _[t].value.toLowerCase();
                        return e === MIME_TYPES.TEXT_HTML || e === MIME_TYPES.APPLICATION_XML
                    } return e === html_js_1.NS.SVG && (t === html_js_1.TAG_ID.FOREIGN_OBJECT || t === html_js_1.TAG_ID.DESC || t === html_js_1.TAG_ID.TITLE)
        }
  
        function isIntegrationPoint(t, e, _, s) {
            return (!s || s === html_js_1.NS.HTML) && isHtmlIntegrationPoint(t, e, _) || (!s || s === html_js_1.NS.MATHML) && isMathMLTextIntegrationPoint(t, e)
        }
        exports.causesExit = causesExit, exports.adjustTokenMathMLAttrs = adjustTokenMathMLAttrs, exports.adjustTokenSVGAttrs = adjustTokenSVGAttrs, exports.adjustTokenXMLAttrs = adjustTokenXMLAttrs, exports.adjustTokenSVGTagName = adjustTokenSVGTagName, exports.isIntegrationPoint = isIntegrationPoint;
  
    }, {
        "./html.js": 67
    }],
    67: [function (require, module, exports) {
        "use strict";
        var NS, ATTRS, DOCUMENT_MODE, TAG_NAMES, TAG_ID;
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.hasUnescapedText = exports.isNumberedHeader = exports.SPECIAL_ELEMENTS = exports.getTagID = exports.TAG_ID = exports.TAG_NAMES = exports.DOCUMENT_MODE = exports.ATTRS = exports.NS = void 0,
            function (A) {
                A.HTML = "http://www.w3.org/1999/xhtml", A.MATHML = "http://www.w3.org/1998/Math/MathML", A.SVG = "http://www.w3.org/2000/svg", A.XLINK = "http://www.w3.org/1999/xlink", A.XML = "http://www.w3.org/XML/1998/namespace", A.XMLNS = "http://www.w3.org/2000/xmlns/"
            }(NS = exports.NS || (exports.NS = {})),
            function (A) {
                A.TYPE = "type", A.ACTION = "action", A.ENCODING = "encoding", A.PROMPT = "prompt", A.NAME = "name", A.COLOR = "color", A.FACE = "face", A.SIZE = "size"
            }(ATTRS = exports.ATTRS || (exports.ATTRS = {})),
            function (A) {
                A.NO_QUIRKS = "no-quirks", A.QUIRKS = "quirks", A.LIMITED_QUIRKS = "limited-quirks"
            }(DOCUMENT_MODE = exports.DOCUMENT_MODE || (exports.DOCUMENT_MODE = {})),
            function (A) {
                A.A = "a", A.ADDRESS = "address", A.ANNOTATION_XML = "annotation-xml", A.APPLET = "applet", A.AREA = "area", A.ARTICLE = "article", A.ASIDE = "aside", A.B = "b", A.BASE = "base", A.BASEFONT = "basefont", A.BGSOUND = "bgsound", A.BIG = "big", A.BLOCKQUOTE = "blockquote", A.BODY = "body", A.BR = "br", A.BUTTON = "button", A.CAPTION = "caption", A.CENTER = "center", A.CODE = "code", A.COL = "col", A.COLGROUP = "colgroup", A.DD = "dd", A.DESC = "desc", A.DETAILS = "details", A.DIALOG = "dialog", A.DIR = "dir", A.DIV = "div", A.DL = "dl", A.DT = "dt", A.EM = "em", A.EMBED = "embed", A.FIELDSET = "fieldset", A.FIGCAPTION = "figcaption", A.FIGURE = "figure", A.FONT = "font", A.FOOTER = "footer", A.FOREIGN_OBJECT = "foreignObject", A.FORM = "form", A.FRAME = "frame", A.FRAMESET = "frameset", A.H1 = "h1", A.H2 = "h2", A.H3 = "h3", A.H4 = "h4", A.H5 = "h5", A.H6 = "h6", A.HEAD = "head", A.HEADER = "header", A.HGROUP = "hgroup", A.HR = "hr", A.HTML = "html", A.I = "i", A.IMG = "img", A.IMAGE = "image", A.INPUT = "input", A.IFRAME = "iframe", A.KEYGEN = "keygen", A.LABEL = "label", A.LI = "li", A.LINK = "link", A.LISTING = "listing", A.MAIN = "main", A.MALIGNMARK = "malignmark", A.MARQUEE = "marquee", A.MATH = "math", A.MENU = "menu", A.META = "meta", A.MGLYPH = "mglyph", A.MI = "mi", A.MO = "mo", A.MN = "mn", A.MS = "ms", A.MTEXT = "mtext", A.NAV = "nav", A.NOBR = "nobr", A.NOFRAMES = "noframes", A.NOEMBED = "noembed", A.NOSCRIPT = "noscript", A.OBJECT = "object", A.OL = "ol", A.OPTGROUP = "optgroup", A.OPTION = "option", A.P = "p", A.PARAM = "param", A.PLAINTEXT = "plaintext", A.PRE = "pre", A.RB = "rb", A.RP = "rp", A.RT = "rt", A.RTC = "rtc", A.RUBY = "ruby", A.S = "s", A.SCRIPT = "script", A.SECTION = "section", A.SELECT = "select", A.SOURCE = "source", A.SMALL = "small", A.SPAN = "span", A.STRIKE = "strike", A.STRONG = "strong", A.STYLE = "style", A.SUB = "sub", A.SUMMARY = "summary", A.SUP = "sup", A.TABLE = "table", A.TBODY = "tbody", A.TEMPLATE = "template", A.TEXTAREA = "textarea", A.TFOOT = "tfoot", A.TD = "td", A.TH = "th", A.THEAD = "thead", A.TITLE = "title", A.TR = "tr", A.TRACK = "track", A.TT = "tt", A.U = "u", A.UL = "ul", A.SVG = "svg", A.VAR = "var", A.WBR = "wbr", A.XMP = "xmp"
            }(TAG_NAMES = exports.TAG_NAMES || (exports.TAG_NAMES = {})),
            function (A) {
                A[A.UNKNOWN = 0] = "UNKNOWN", A[A.A = 1] = "A", A[A.ADDRESS = 2] = "ADDRESS", A[A.ANNOTATION_XML = 3] = "ANNOTATION_XML", A[A.APPLET = 4] = "APPLET", A[A.AREA = 5] = "AREA", A[A.ARTICLE = 6] = "ARTICLE", A[A.ASIDE = 7] = "ASIDE", A[A.B = 8] = "B", A[A.BASE = 9] = "BASE", A[A.BASEFONT = 10] = "BASEFONT", A[A.BGSOUND = 11] = "BGSOUND", A[A.BIG = 12] = "BIG", A[A.BLOCKQUOTE = 13] = "BLOCKQUOTE", A[A.BODY = 14] = "BODY", A[A.BR = 15] = "BR", A[A.BUTTON = 16] = "BUTTON", A[A.CAPTION = 17] = "CAPTION", A[A.CENTER = 18] = "CENTER", A[A.CODE = 19] = "CODE", A[A.COL = 20] = "COL", A[A.COLGROUP = 21] = "COLGROUP", A[A.DD = 22] = "DD", A[A.DESC = 23] = "DESC", A[A.DETAILS = 24] = "DETAILS", A[A.DIALOG = 25] = "DIALOG", A[A.DIR = 26] = "DIR", A[A.DIV = 27] = "DIV", A[A.DL = 28] = "DL", A[A.DT = 29] = "DT", A[A.EM = 30] = "EM", A[A.EMBED = 31] = "EMBED", A[A.FIELDSET = 32] = "FIELDSET", A[A.FIGCAPTION = 33] = "FIGCAPTION", A[A.FIGURE = 34] = "FIGURE", A[A.FONT = 35] = "FONT", A[A.FOOTER = 36] = "FOOTER", A[A.FOREIGN_OBJECT = 37] = "FOREIGN_OBJECT", A[A.FORM = 38] = "FORM", A[A.FRAME = 39] = "FRAME", A[A.FRAMESET = 40] = "FRAMESET", A[A.H1 = 41] = "H1", A[A.H2 = 42] = "H2", A[A.H3 = 43] = "H3", A[A.H4 = 44] = "H4", A[A.H5 = 45] = "H5", A[A.H6 = 46] = "H6", A[A.HEAD = 47] = "HEAD", A[A.HEADER = 48] = "HEADER", A[A.HGROUP = 49] = "HGROUP", A[A.HR = 50] = "HR", A[A.HTML = 51] = "HTML", A[A.I = 52] = "I", A[A.IMG = 53] = "IMG", A[A.IMAGE = 54] = "IMAGE", A[A.INPUT = 55] = "INPUT", A[A.IFRAME = 56] = "IFRAME", A[A.KEYGEN = 57] = "KEYGEN", A[A.LABEL = 58] = "LABEL", A[A.LI = 59] = "LI", A[A.LINK = 60] = "LINK", A[A.LISTING = 61] = "LISTING", A[A.MAIN = 62] = "MAIN", A[A.MALIGNMARK = 63] = "MALIGNMARK", A[A.MARQUEE = 64] = "MARQUEE", A[A.MATH = 65] = "MATH", A[A.MENU = 66] = "MENU", A[A.META = 67] = "META", A[A.MGLYPH = 68] = "MGLYPH", A[A.MI = 69] = "MI", A[A.MO = 70] = "MO", A[A.MN = 71] = "MN", A[A.MS = 72] = "MS", A[A.MTEXT = 73] = "MTEXT", A[A.NAV = 74] = "NAV", A[A.NOBR = 75] = "NOBR", A[A.NOFRAMES = 76] = "NOFRAMES", A[A.NOEMBED = 77] = "NOEMBED", A[A.NOSCRIPT = 78] = "NOSCRIPT", A[A.OBJECT = 79] = "OBJECT", A[A.OL = 80] = "OL", A[A.OPTGROUP = 81] = "OPTGROUP", A[A.OPTION = 82] = "OPTION", A[A.P = 83] = "P", A[A.PARAM = 84] = "PARAM", A[A.PLAINTEXT = 85] = "PLAINTEXT", A[A.PRE = 86] = "PRE", A[A.RB = 87] = "RB", A[A.RP = 88] = "RP", A[A.RT = 89] = "RT", A[A.RTC = 90] = "RTC", A[A.RUBY = 91] = "RUBY", A[A.S = 92] = "S", A[A.SCRIPT = 93] = "SCRIPT", A[A.SECTION = 94] = "SECTION", A[A.SELECT = 95] = "SELECT", A[A.SOURCE = 96] = "SOURCE", A[A.SMALL = 97] = "SMALL", A[A.SPAN = 98] = "SPAN", A[A.STRIKE = 99] = "STRIKE", A[A.STRONG = 100] = "STRONG", A[A.STYLE = 101] = "STYLE", A[A.SUB = 102] = "SUB", A[A.SUMMARY = 103] = "SUMMARY", A[A.SUP = 104] = "SUP", A[A.TABLE = 105] = "TABLE", A[A.TBODY = 106] = "TBODY", A[A.TEMPLATE = 107] = "TEMPLATE", A[A.TEXTAREA = 108] = "TEXTAREA", A[A.TFOOT = 109] = "TFOOT", A[A.TD = 110] = "TD", A[A.TH = 111] = "TH", A[A.THEAD = 112] = "THEAD", A[A.TITLE = 113] = "TITLE", A[A.TR = 114] = "TR", A[A.TRACK = 115] = "TRACK", A[A.TT = 116] = "TT", A[A.U = 117] = "U", A[A.UL = 118] = "UL", A[A.SVG = 119] = "SVG", A[A.VAR = 120] = "VAR", A[A.WBR = 121] = "WBR", A[A.XMP = 122] = "XMP"
            }(TAG_ID = exports.TAG_ID || (exports.TAG_ID = {}));
        const TAG_NAME_TO_ID = new Map([
            [TAG_NAMES.A, TAG_ID.A],
            [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],
            [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],
            [TAG_NAMES.APPLET, TAG_ID.APPLET],
            [TAG_NAMES.AREA, TAG_ID.AREA],
            [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],
            [TAG_NAMES.ASIDE, TAG_ID.ASIDE],
            [TAG_NAMES.B, TAG_ID.B],
            [TAG_NAMES.BASE, TAG_ID.BASE],
            [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],
            [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],
            [TAG_NAMES.BIG, TAG_ID.BIG],
            [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],
            [TAG_NAMES.BODY, TAG_ID.BODY],
            [TAG_NAMES.BR, TAG_ID.BR],
            [TAG_NAMES.BUTTON, TAG_ID.BUTTON],
            [TAG_NAMES.CAPTION, TAG_ID.CAPTION],
            [TAG_NAMES.CENTER, TAG_ID.CENTER],
            [TAG_NAMES.CODE, TAG_ID.CODE],
            [TAG_NAMES.COL, TAG_ID.COL],
            [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],
            [TAG_NAMES.DD, TAG_ID.DD],
            [TAG_NAMES.DESC, TAG_ID.DESC],
            [TAG_NAMES.DETAILS, TAG_ID.DETAILS],
            [TAG_NAMES.DIALOG, TAG_ID.DIALOG],
            [TAG_NAMES.DIR, TAG_ID.DIR],
            [TAG_NAMES.DIV, TAG_ID.DIV],
            [TAG_NAMES.DL, TAG_ID.DL],
            [TAG_NAMES.DT, TAG_ID.DT],
            [TAG_NAMES.EM, TAG_ID.EM],
            [TAG_NAMES.EMBED, TAG_ID.EMBED],
            [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],
            [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],
            [TAG_NAMES.FIGURE, TAG_ID.FIGURE],
            [TAG_NAMES.FONT, TAG_ID.FONT],
            [TAG_NAMES.FOOTER, TAG_ID.FOOTER],
            [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],
            [TAG_NAMES.FORM, TAG_ID.FORM],
            [TAG_NAMES.FRAME, TAG_ID.FRAME],
            [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],
            [TAG_NAMES.H1, TAG_ID.H1],
            [TAG_NAMES.H2, TAG_ID.H2],
            [TAG_NAMES.H3, TAG_ID.H3],
            [TAG_NAMES.H4, TAG_ID.H4],
            [TAG_NAMES.H5, TAG_ID.H5],
            [TAG_NAMES.H6, TAG_ID.H6],
            [TAG_NAMES.HEAD, TAG_ID.HEAD],
            [TAG_NAMES.HEADER, TAG_ID.HEADER],
            [TAG_NAMES.HGROUP, TAG_ID.HGROUP],
            [TAG_NAMES.HR, TAG_ID.HR],
            [TAG_NAMES.HTML, TAG_ID.HTML],
            [TAG_NAMES.I, TAG_ID.I],
            [TAG_NAMES.IMG, TAG_ID.IMG],
            [TAG_NAMES.IMAGE, TAG_ID.IMAGE],
            [TAG_NAMES.INPUT, TAG_ID.INPUT],
            [TAG_NAMES.IFRAME, TAG_ID.IFRAME],
            [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],
            [TAG_NAMES.LABEL, TAG_ID.LABEL],
            [TAG_NAMES.LI, TAG_ID.LI],
            [TAG_NAMES.LINK, TAG_ID.LINK],
            [TAG_NAMES.LISTING, TAG_ID.LISTING],
            [TAG_NAMES.MAIN, TAG_ID.MAIN],
            [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],
            [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],
            [TAG_NAMES.MATH, TAG_ID.MATH],
            [TAG_NAMES.MENU, TAG_ID.MENU],
            [TAG_NAMES.META, TAG_ID.META],
            [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],
            [TAG_NAMES.MI, TAG_ID.MI],
            [TAG_NAMES.MO, TAG_ID.MO],
            [TAG_NAMES.MN, TAG_ID.MN],
            [TAG_NAMES.MS, TAG_ID.MS],
            [TAG_NAMES.MTEXT, TAG_ID.MTEXT],
            [TAG_NAMES.NAV, TAG_ID.NAV],
            [TAG_NAMES.NOBR, TAG_ID.NOBR],
            [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],
            [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],
            [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],
            [TAG_NAMES.OBJECT, TAG_ID.OBJECT],
            [TAG_NAMES.OL, TAG_ID.OL],
            [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],
            [TAG_NAMES.OPTION, TAG_ID.OPTION],
            [TAG_NAMES.P, TAG_ID.P],
            [TAG_NAMES.PARAM, TAG_ID.PARAM],
            [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],
            [TAG_NAMES.PRE, TAG_ID.PRE],
            [TAG_NAMES.RB, TAG_ID.RB],
            [TAG_NAMES.RP, TAG_ID.RP],
            [TAG_NAMES.RT, TAG_ID.RT],
            [TAG_NAMES.RTC, TAG_ID.RTC],
            [TAG_NAMES.RUBY, TAG_ID.RUBY],
            [TAG_NAMES.S, TAG_ID.S],
            [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],
            [TAG_NAMES.SECTION, TAG_ID.SECTION],
            [TAG_NAMES.SELECT, TAG_ID.SELECT],
            [TAG_NAMES.SOURCE, TAG_ID.SOURCE],
            [TAG_NAMES.SMALL, TAG_ID.SMALL],
            [TAG_NAMES.SPAN, TAG_ID.SPAN],
            [TAG_NAMES.STRIKE, TAG_ID.STRIKE],
            [TAG_NAMES.STRONG, TAG_ID.STRONG],
            [TAG_NAMES.STYLE, TAG_ID.STYLE],
            [TAG_NAMES.SUB, TAG_ID.SUB],
            [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],
            [TAG_NAMES.SUP, TAG_ID.SUP],
            [TAG_NAMES.TABLE, TAG_ID.TABLE],
            [TAG_NAMES.TBODY, TAG_ID.TBODY],
            [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],
            [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],
            [TAG_NAMES.TFOOT, TAG_ID.TFOOT],
            [TAG_NAMES.TD, TAG_ID.TD],
            [TAG_NAMES.TH, TAG_ID.TH],
            [TAG_NAMES.THEAD, TAG_ID.THEAD],
            [TAG_NAMES.TITLE, TAG_ID.TITLE],
            [TAG_NAMES.TR, TAG_ID.TR],
            [TAG_NAMES.TRACK, TAG_ID.TRACK],
            [TAG_NAMES.TT, TAG_ID.TT],
            [TAG_NAMES.U, TAG_ID.U],
            [TAG_NAMES.UL, TAG_ID.UL],
            [TAG_NAMES.SVG, TAG_ID.SVG],
            [TAG_NAMES.VAR, TAG_ID.VAR],
            [TAG_NAMES.WBR, TAG_ID.WBR],
            [TAG_NAMES.XMP, TAG_ID.XMP]
        ]);
  
        function getTagID(A) {
            var T;
            return null !== (T = TAG_NAME_TO_ID.get(A)) && void 0 !== T ? T : TAG_ID.UNKNOWN
        }
        exports.getTagID = getTagID;
        const $ = TAG_ID;
  
        function isNumberedHeader(A) {
            return A === $.H1 || A === $.H2 || A === $.H3 || A === $.H4 || A === $.H5 || A === $.H6
        }
        exports.SPECIAL_ELEMENTS = {
            [NS.HTML]: new Set([$.ADDRESS, $.APPLET, $.AREA, $.ARTICLE, $.ASIDE, $.BASE, $.BASEFONT, $.BGSOUND, $.BLOCKQUOTE, $.BODY, $.BR, $.BUTTON, $.CAPTION, $.CENTER, $.COL, $.COLGROUP, $.DD, $.DETAILS, $.DIR, $.DIV, $.DL, $.DT, $.EMBED, $.FIELDSET, $.FIGCAPTION, $.FIGURE, $.FOOTER, $.FORM, $.FRAME, $.FRAMESET, $.H1, $.H2, $.H3, $.H4, $.H5, $.H6, $.HEAD, $.HEADER, $.HGROUP, $.HR, $.HTML, $.IFRAME, $.IMG, $.INPUT, $.LI, $.LINK, $.LISTING, $.MAIN, $.MARQUEE, $.MENU, $.META, $.NAV, $.NOEMBED, $.NOFRAMES, $.NOSCRIPT, $.OBJECT, $.OL, $.P, $.PARAM, $.PLAINTEXT, $.PRE, $.SCRIPT, $.SECTION, $.SELECT, $.SOURCE, $.STYLE, $.SUMMARY, $.TABLE, $.TBODY, $.TD, $.TEMPLATE, $.TEXTAREA, $.TFOOT, $.TH, $.THEAD, $.TITLE, $.TR, $.TRACK, $.UL, $.WBR, $.XMP]),
            [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),
            [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),
            [NS.XLINK]: new Set,
            [NS.XML]: new Set,
            [NS.XMLNS]: new Set
        }, exports.isNumberedHeader = isNumberedHeader;
        const UNESCAPED_TEXT = new Set([TAG_NAMES.STYLE, TAG_NAMES.SCRIPT, TAG_NAMES.XMP, TAG_NAMES.IFRAME, TAG_NAMES.NOEMBED, TAG_NAMES.NOFRAMES, TAG_NAMES.PLAINTEXT]);
  
        function hasUnescapedText(A, T) {
            return UNESCAPED_TEXT.has(A) || T && A === TAG_NAMES.NOSCRIPT
        }
        exports.hasUnescapedText = hasUnescapedText;
  
    }, {}],
    68: [function (require, module, exports) {
        "use strict";
        var TokenType;
  
        function getTokenAttr(e, T) {
            for (let t = e.attrs.length - 1; t >= 0; t--)
                if (e.attrs[t].name === T) return e.attrs[t].value;
            return null
        }
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.getTokenAttr = exports.TokenType = void 0,
            function (e) {
                e[e.CHARACTER = 0] = "CHARACTER", e[e.NULL_CHARACTER = 1] = "NULL_CHARACTER", e[e.WHITESPACE_CHARACTER = 2] = "WHITESPACE_CHARACTER", e[e.START_TAG = 3] = "START_TAG", e[e.END_TAG = 4] = "END_TAG", e[e.COMMENT = 5] = "COMMENT", e[e.DOCTYPE = 6] = "DOCTYPE", e[e.EOF = 7] = "EOF", e[e.HIBERNATION = 8] = "HIBERNATION"
            }(TokenType = exports.TokenType || (exports.TokenType = {})), exports.getTokenAttr = getTokenAttr;
  
    }, {}],
    69: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.isUndefinedCodePoint = exports.isControlCodePoint = exports.getSurrogatePairCodePoint = exports.isSurrogatePair = exports.isSurrogate = exports.SEQUENCES = exports.CODE_POINTS = exports.REPLACEMENT_CHARACTER = void 0;
        const UNDEFINED_CODE_POINTS = new Set([65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111]);
        var CODE_POINTS;
  
        function isSurrogate(A) {
            return A >= 55296 && A <= 57343
        }
  
        function isSurrogatePair(A) {
            return A >= 56320 && A <= 57343
        }
  
        function getSurrogatePairCodePoint(A, _) {
            return 1024 * (A - 55296) + 9216 + _
        }
  
        function isControlCodePoint(A) {
            return 32 !== A && 10 !== A && 13 !== A && 9 !== A && 12 !== A && A >= 1 && A <= 31 || A >= 127 && A <= 159
        }
  
        function isUndefinedCodePoint(A) {
            return A >= 64976 && A <= 65007 || UNDEFINED_CODE_POINTS.has(A)
        }
        exports.REPLACEMENT_CHARACTER = "�",
            function (A) {
                A[A.EOF = -1] = "EOF", A[A.NULL = 0] = "NULL", A[A.TABULATION = 9] = "TABULATION", A[A.CARRIAGE_RETURN = 13] = "CARRIAGE_RETURN", A[A.LINE_FEED = 10] = "LINE_FEED", A[A.FORM_FEED = 12] = "FORM_FEED", A[A.SPACE = 32] = "SPACE", A[A.EXCLAMATION_MARK = 33] = "EXCLAMATION_MARK", A[A.QUOTATION_MARK = 34] = "QUOTATION_MARK", A[A.NUMBER_SIGN = 35] = "NUMBER_SIGN", A[A.AMPERSAND = 38] = "AMPERSAND", A[A.APOSTROPHE = 39] = "APOSTROPHE", A[A.HYPHEN_MINUS = 45] = "HYPHEN_MINUS", A[A.SOLIDUS = 47] = "SOLIDUS", A[A.DIGIT_0 = 48] = "DIGIT_0", A[A.DIGIT_9 = 57] = "DIGIT_9", A[A.SEMICOLON = 59] = "SEMICOLON", A[A.LESS_THAN_SIGN = 60] = "LESS_THAN_SIGN", A[A.EQUALS_SIGN = 61] = "EQUALS_SIGN", A[A.GREATER_THAN_SIGN = 62] = "GREATER_THAN_SIGN", A[A.QUESTION_MARK = 63] = "QUESTION_MARK", A[A.LATIN_CAPITAL_A = 65] = "LATIN_CAPITAL_A", A[A.LATIN_CAPITAL_F = 70] = "LATIN_CAPITAL_F", A[A.LATIN_CAPITAL_X = 88] = "LATIN_CAPITAL_X", A[A.LATIN_CAPITAL_Z = 90] = "LATIN_CAPITAL_Z", A[A.RIGHT_SQUARE_BRACKET = 93] = "RIGHT_SQUARE_BRACKET", A[A.GRAVE_ACCENT = 96] = "GRAVE_ACCENT", A[A.LATIN_SMALL_A = 97] = "LATIN_SMALL_A", A[A.LATIN_SMALL_F = 102] = "LATIN_SMALL_F", A[A.LATIN_SMALL_X = 120] = "LATIN_SMALL_X", A[A.LATIN_SMALL_Z = 122] = "LATIN_SMALL_Z", A[A.REPLACEMENT_CHARACTER = 65533] = "REPLACEMENT_CHARACTER"
            }(CODE_POINTS = exports.CODE_POINTS || (exports.CODE_POINTS = {})), exports.SEQUENCES = {
                DASH_DASH: "--",
                CDATA_START: "[CDATA[",
                DOCTYPE: "doctype",
                SCRIPT: "script",
                PUBLIC: "public",
                SYSTEM: "system"
            }, exports.isSurrogate = isSurrogate, exports.isSurrogatePair = isSurrogatePair, exports.getSurrogatePairCodePoint = getSurrogatePairCodePoint, exports.isControlCodePoint = isControlCodePoint, exports.isUndefinedCodePoint = isUndefinedCodePoint;
  
    }, {}],
    70: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.parseFragment = exports.parse = exports.TokenizerMode = exports.Tokenizer = exports.Token = exports.html = exports.foreignContent = exports.ErrorCodes = exports.serializeOuter = exports.serialize = exports.Parser = exports.defaultTreeAdapter = void 0;
        const index_js_1 = require("./parser/index.js");
        var default_js_1 = require("./tree-adapters/default.js");
        Object.defineProperty(exports, "defaultTreeAdapter", {
            enumerable: !0,
            get: function () {
                return default_js_1.defaultTreeAdapter
            }
        });
        var index_js_2 = require("./parser/index.js");
        Object.defineProperty(exports, "Parser", {
            enumerable: !0,
            get: function () {
                return index_js_2.Parser
            }
        });
        var index_js_3 = require("./serializer/index.js");
        Object.defineProperty(exports, "serialize", {
            enumerable: !0,
            get: function () {
                return index_js_3.serialize
            }
        }), Object.defineProperty(exports, "serializeOuter", {
            enumerable: !0,
            get: function () {
                return index_js_3.serializeOuter
            }
        });
        var error_codes_js_1 = require("./common/error-codes.js");
        Object.defineProperty(exports, "ErrorCodes", {
            enumerable: !0,
            get: function () {
                return error_codes_js_1.ERR
            }
        }), exports.foreignContent = require("./common/foreign-content.js"), exports.html = require("./common/html.js"), exports.Token = require("./common/token.js");
        var index_js_4 = require("./tokenizer/index.js");
  
        function parse(e, r) {
            return index_js_1.Parser.parse(e, r)
        }
  
        function parseFragment(e, r, t) {
            "string" == typeof e && (t = r, r = e, e = null);
            const n = index_js_1.Parser.getFragmentParser(e, t);
            return n.tokenizer.write(r, !0), n.getFragment()
        }
        Object.defineProperty(exports, "Tokenizer", {
            enumerable: !0,
            get: function () {
                return index_js_4.Tokenizer
            }
        }), Object.defineProperty(exports, "TokenizerMode", {
            enumerable: !0,
            get: function () {
                return index_js_4.TokenizerMode
            }
        }), exports.parse = parse, exports.parseFragment = parseFragment;
  
    }, {
        "./common/error-codes.js": 65,
        "./common/foreign-content.js": 66,
        "./common/html.js": 67,
        "./common/token.js": 68,
        "./parser/index.js": 72,
        "./serializer/index.js": 74,
        "./tokenizer/index.js": 75,
        "./tree-adapters/default.js": 77
    }],
    71: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.FormattingElementList = exports.EntryType = void 0;
        const NOAH_ARK_CAPACITY = 3;
        var EntryType;
        ! function (e) {
            e[e.Marker = 0] = "Marker", e[e.Element = 1] = "Element"
        }(EntryType = exports.EntryType || (exports.EntryType = {}));
        const MARKER = {
            type: EntryType.Marker
        };
        class FormattingElementList {
            constructor(e) {
                this.treeAdapter = e, this.entries = [], this.bookmark = null
            }
            _getNoahArkConditionCandidates(e, t) {
                const n = [],
                    r = t.length,
                    s = this.treeAdapter.getTagName(e),
                    i = this.treeAdapter.getNamespaceURI(e);
                for (let e = 0; e < this.entries.length; e++) {
                    const t = this.entries[e];
                    if (t.type === EntryType.Marker) break;
                    const {
                        element: a
                    } = t;
                    if (this.treeAdapter.getTagName(a) === s && this.treeAdapter.getNamespaceURI(a) === i) {
                        const t = this.treeAdapter.getAttrList(a);
                        t.length === r && n.push({
                            idx: e,
                            attrs: t
                        })
                    }
                }
                return n
            }
            _ensureNoahArkCondition(e) {
                if (this.entries.length < NOAH_ARK_CAPACITY) return;
                const t = this.treeAdapter.getAttrList(e),
                    n = this._getNoahArkConditionCandidates(e, t);
                if (n.length < NOAH_ARK_CAPACITY) return;
                const r = new Map(t.map(e => [e.name, e.value]));
                let s = 0;
                for (let e = 0; e < n.length; e++) {
                    const t = n[e];
                    t.attrs.every(e => r.get(e.name) === e.value) && (s += 1) >= NOAH_ARK_CAPACITY && this.entries.splice(t.idx, 1)
                }
            }
            insertMarker() {
                this.entries.unshift(MARKER)
            }
            pushElement(e, t) {
                this._ensureNoahArkCondition(e), this.entries.unshift({
                    type: EntryType.Element,
                    element: e,
                    token: t
                })
            }
            insertElementAfterBookmark(e, t) {
                const n = this.entries.indexOf(this.bookmark);
                this.entries.splice(n, 0, {
                    type: EntryType.Element,
                    element: e,
                    token: t
                })
            }
            removeEntry(e) {
                const t = this.entries.indexOf(e);
                t >= 0 && this.entries.splice(t, 1)
            }
            clearToLastMarker() {
                const e = this.entries.indexOf(MARKER);
                e >= 0 ? this.entries.splice(0, e + 1) : this.entries.length = 0
            }
            getElementEntryInScopeWithTagName(e) {
                const t = this.entries.find(t => t.type === EntryType.Marker || this.treeAdapter.getTagName(t.element) === e);
                return t && t.type === EntryType.Element ? t : null
            }
            getElementEntry(e) {
                return this.entries.find(t => t.type === EntryType.Element && t.element === e)
            }
        }
        exports.FormattingElementList = FormattingElementList;
  
    }, {}],
    72: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.Parser = void 0;
        const index_js_1 = require("../tokenizer/index.js"),
            open_element_stack_js_1 = require("./open-element-stack.js"),
            formatting_element_list_js_1 = require("./formatting-element-list.js"),
            default_js_1 = require("../tree-adapters/default.js"),
            doctype = require("../common/doctype.js"),
            foreignContent = require("../common/foreign-content.js"),
            error_codes_js_1 = require("../common/error-codes.js"),
            unicode = require("../common/unicode.js"),
            html_js_1 = require("../common/html.js"),
            token_js_1 = require("../common/token.js"),
            HIDDEN_INPUT_TYPE = "hidden",
            AA_OUTER_LOOP_ITER = 8,
            AA_INNER_LOOP_ITER = 3;
        var InsertionMode;
        ! function (e) {
            e[e.INITIAL = 0] = "INITIAL", e[e.BEFORE_HTML = 1] = "BEFORE_HTML", e[e.BEFORE_HEAD = 2] = "BEFORE_HEAD", e[e.IN_HEAD = 3] = "IN_HEAD", e[e.IN_HEAD_NO_SCRIPT = 4] = "IN_HEAD_NO_SCRIPT", e[e.AFTER_HEAD = 5] = "AFTER_HEAD", e[e.IN_BODY = 6] = "IN_BODY", e[e.TEXT = 7] = "TEXT", e[e.IN_TABLE = 8] = "IN_TABLE", e[e.IN_TABLE_TEXT = 9] = "IN_TABLE_TEXT", e[e.IN_CAPTION = 10] = "IN_CAPTION", e[e.IN_COLUMN_GROUP = 11] = "IN_COLUMN_GROUP", e[e.IN_TABLE_BODY = 12] = "IN_TABLE_BODY", e[e.IN_ROW = 13] = "IN_ROW", e[e.IN_CELL = 14] = "IN_CELL", e[e.IN_SELECT = 15] = "IN_SELECT", e[e.IN_SELECT_IN_TABLE = 16] = "IN_SELECT_IN_TABLE", e[e.IN_TEMPLATE = 17] = "IN_TEMPLATE", e[e.AFTER_BODY = 18] = "AFTER_BODY", e[e.IN_FRAMESET = 19] = "IN_FRAMESET", e[e.AFTER_FRAMESET = 20] = "AFTER_FRAMESET", e[e.AFTER_AFTER_BODY = 21] = "AFTER_AFTER_BODY", e[e.AFTER_AFTER_FRAMESET = 22] = "AFTER_AFTER_FRAMESET"
        }(InsertionMode || (InsertionMode = {}));
        const BASE_LOC = {
            startLine: -1,
            startCol: -1,
            startOffset: -1,
            endLine: -1,
            endCol: -1,
            endOffset: -1
        },
            TABLE_STRUCTURE_TAGS = new Set([html_js_1.TAG_ID.TABLE, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]),
            defaultParserOptions = {
                scriptingEnabled: !0,
                sourceCodeLocationInfo: !1,
                treeAdapter: default_js_1.defaultTreeAdapter,
                onParseError: null
            };
        class Parser {
            constructor(e, t, n = null, s = null) {
                this.fragmentContext = n, this.scriptHandler = s, this.currentToken = null, this.stopped = !1, this.insertionMode = InsertionMode.INITIAL, this.originalInsertionMode = InsertionMode.INITIAL, this.headElement = null, this.formElement = null, this.currentNotInHTML = !1, this.tmplInsertionModeStack = [], this.pendingCharacterTokens = [], this.hasNonWhitespacePendingCharacterToken = !1, this.framesetOk = !0, this.skipNextNewLine = !1, this.fosterParentingEnabled = !1, this.options = Object.assign(Object.assign({}, defaultParserOptions), e), this.treeAdapter = this.options.treeAdapter, this.onParseError = this.options.onParseError, this.onParseError && (this.options.sourceCodeLocationInfo = !0), this.document = null != t ? t : this.treeAdapter.createDocument(), this.tokenizer = new index_js_1.Tokenizer(this.options, this), this.activeFormattingElements = new formatting_element_list_js_1.FormattingElementList(this.treeAdapter), this.fragmentContextID = n ? (0, html_js_1.getTagID)(this.treeAdapter.getTagName(n)) : html_js_1.TAG_ID.UNKNOWN, this._setContextModes(null != n ? n : this.document, this.fragmentContextID), this.openElements = new open_element_stack_js_1.OpenElementStack(this.document, this.treeAdapter, this)
            }
            static parse(e, t) {
                const n = new this(t);
                return n.tokenizer.write(e, !0), n.document
            }
            static getFragmentParser(e, t) {
                const n = Object.assign(Object.assign({}, defaultParserOptions), t);
                null != e || (e = n.treeAdapter.createElement(html_js_1.TAG_NAMES.TEMPLATE, html_js_1.NS.HTML, []));
                const s = n.treeAdapter.createElement("documentmock", html_js_1.NS.HTML, []),
                    o = new this(n, s, e);
                return o.fragmentContextID === html_js_1.TAG_ID.TEMPLATE && o.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE), o._initTokenizerForFragmentParsing(), o._insertFakeRootElement(), o._resetInsertionMode(), o._findFormInFragmentContext(), o
            }
            getFragment() {
                const e = this.treeAdapter.getFirstChild(this.document),
                    t = this.treeAdapter.createDocumentFragment();
                return this._adoptNodes(e, t), t
            }
            _err(e, t, n) {
                var s;
                if (!this.onParseError) return;
                const o = null !== (s = e.location) && void 0 !== s ? s : BASE_LOC,
                    a = {
                        code: t,
                        startLine: o.startLine,
                        startCol: o.startCol,
                        startOffset: o.startOffset,
                        endLine: n ? o.startLine : o.endLine,
                        endCol: n ? o.startCol : o.endCol,
                        endOffset: n ? o.startOffset : o.endOffset
                    };
                this.onParseError(a)
            }
            onItemPush(e, t, n) {
                var s, o;
                null === (o = (s = this.treeAdapter).onItemPush) || void 0 === o || o.call(s, e), n && this.openElements.stackTop > 0 && this._setContextModes(e, t)
            }
            onItemPop(e, t) {
                var n, s;
                if (this.options.sourceCodeLocationInfo && this._setEndLocation(e, this.currentToken), null === (s = (n = this.treeAdapter).onItemPop) || void 0 === s || s.call(n, e, this.openElements.current), t) {
                    let e, t;
                    0 === this.openElements.stackTop && this.fragmentContext ? (e = this.fragmentContext, t = this.fragmentContextID) : ({
                        current: e,
                        currentTagId: t
                    } = this.openElements), this._setContextModes(e, t)
                }
            }
            _setContextModes(e, t) {
                const n = e === this.document || this.treeAdapter.getNamespaceURI(e) === html_js_1.NS.HTML;
                this.currentNotInHTML = !n, this.tokenizer.inForeignNode = !n && !this._isIntegrationPoint(t, e)
            }
            _switchToTextParsing(e, t) {
                this._insertElement(e, html_js_1.NS.HTML), this.tokenizer.state = t, this.originalInsertionMode = this.insertionMode, this.insertionMode = InsertionMode.TEXT
            }
            switchToPlaintextParsing() {
                this.insertionMode = InsertionMode.TEXT, this.originalInsertionMode = InsertionMode.IN_BODY, this.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT
            }
            _getAdjustedCurrentElement() {
                return 0 === this.openElements.stackTop && this.fragmentContext ? this.fragmentContext : this.openElements.current
            }
            _findFormInFragmentContext() {
                let e = this.fragmentContext;
                for (; e;) {
                    if (this.treeAdapter.getTagName(e) === html_js_1.TAG_NAMES.FORM) {
                        this.formElement = e;
                        break
                    }
                    e = this.treeAdapter.getParentNode(e)
                }
            }
            _initTokenizerForFragmentParsing() {
                if (this.fragmentContext && this.treeAdapter.getNamespaceURI(this.fragmentContext) === html_js_1.NS.HTML) switch (this.fragmentContextID) {
                    case html_js_1.TAG_ID.TITLE:
                    case html_js_1.TAG_ID.TEXTAREA:
                        this.tokenizer.state = index_js_1.TokenizerMode.RCDATA;
                        break;
                    case html_js_1.TAG_ID.STYLE:
                    case html_js_1.TAG_ID.XMP:
                    case html_js_1.TAG_ID.IFRAME:
                    case html_js_1.TAG_ID.NOEMBED:
                    case html_js_1.TAG_ID.NOFRAMES:
                    case html_js_1.TAG_ID.NOSCRIPT:
                        this.tokenizer.state = index_js_1.TokenizerMode.RAWTEXT;
                        break;
                    case html_js_1.TAG_ID.SCRIPT:
                        this.tokenizer.state = index_js_1.TokenizerMode.SCRIPT_DATA;
                        break;
                    case html_js_1.TAG_ID.PLAINTEXT:
                        this.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT
                }
            }
            _setDocumentType(e) {
                const t = e.name || "",
                    n = e.publicId || "",
                    s = e.systemId || "";
                if (this.treeAdapter.setDocumentType(this.document, t, n, s), e.location) {
                    const t = this.treeAdapter.getChildNodes(this.document).find(e => this.treeAdapter.isDocumentTypeNode(e));
                    t && this.treeAdapter.setNodeSourceCodeLocation(t, e.location)
                }
            }
            _attachElementToTree(e, t) {
                if (this.options.sourceCodeLocationInfo) {
                    const n = t && Object.assign(Object.assign({}, t), {
                        startTag: t
                    });
                    this.treeAdapter.setNodeSourceCodeLocation(e, n)
                }
                if (this._shouldFosterParentOnInsertion()) this._fosterParentElement(e);
                else {
                    const t = this.openElements.currentTmplContentOrNode;
                    this.treeAdapter.appendChild(t, e)
                }
            }
            _appendElement(e, t) {
                const n = this.treeAdapter.createElement(e.tagName, t, e.attrs);
                this._attachElementToTree(n, e.location)
            }
            _insertElement(e, t) {
                const n = this.treeAdapter.createElement(e.tagName, t, e.attrs);
                this._attachElementToTree(n, e.location), this.openElements.push(n, e.tagID)
            }
            _insertFakeElement(e, t) {
                const n = this.treeAdapter.createElement(e, html_js_1.NS.HTML, []);
                this._attachElementToTree(n, null), this.openElements.push(n, t)
            }
            _insertTemplate(e) {
                const t = this.treeAdapter.createElement(e.tagName, html_js_1.NS.HTML, e.attrs),
                    n = this.treeAdapter.createDocumentFragment();
                this.treeAdapter.setTemplateContent(t, n), this._attachElementToTree(t, e.location), this.openElements.push(t, e.tagID), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(n, null)
            }
            _insertFakeRootElement() {
                const e = this.treeAdapter.createElement(html_js_1.TAG_NAMES.HTML, html_js_1.NS.HTML, []);
                this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(e, null), this.treeAdapter.appendChild(this.openElements.current, e), this.openElements.push(e, html_js_1.TAG_ID.HTML)
            }
            _appendCommentNode(e, t) {
                const n = this.treeAdapter.createCommentNode(e.data);
                this.treeAdapter.appendChild(t, n), this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(n, e.location)
            }
            _insertCharacters(e) {
                let t, n;
                if (this._shouldFosterParentOnInsertion() ? (({
                    parent: t,
                    beforeElement: n
                } = this._findFosterParentingLocation()), n ? this.treeAdapter.insertTextBefore(t, e.chars, n) : this.treeAdapter.insertText(t, e.chars)) : (t = this.openElements.currentTmplContentOrNode, this.treeAdapter.insertText(t, e.chars)), !e.location) return;
                const s = this.treeAdapter.getChildNodes(t),
                    o = n ? s.lastIndexOf(n) : s.length,
                    a = s[o - 1];
                if (this.treeAdapter.getNodeSourceCodeLocation(a)) {
                    const {
                        endLine: t,
                        endCol: n,
                        endOffset: s
                    } = e.location;
                    this.treeAdapter.updateNodeSourceCodeLocation(a, {
                        endLine: t,
                        endCol: n,
                        endOffset: s
                    })
                } else this.options.sourceCodeLocationInfo && this.treeAdapter.setNodeSourceCodeLocation(a, e.location)
            }
            _adoptNodes(e, t) {
                for (let n = this.treeAdapter.getFirstChild(e); n; n = this.treeAdapter.getFirstChild(e)) this.treeAdapter.detachNode(n), this.treeAdapter.appendChild(t, n)
            }
            _setEndLocation(e, t) {
                if (this.treeAdapter.getNodeSourceCodeLocation(e) && t.location) {
                    const n = t.location,
                        s = this.treeAdapter.getTagName(e),
                        o = t.type === token_js_1.TokenType.END_TAG && s === t.tagName ? {
                            endTag: Object.assign({}, n),
                            endLine: n.endLine,
                            endCol: n.endCol,
                            endOffset: n.endOffset
                        } : {
                            endLine: n.startLine,
                            endCol: n.startCol,
                            endOffset: n.startOffset
                        };
                    this.treeAdapter.updateNodeSourceCodeLocation(e, o)
                }
            }
            shouldProcessStartTagTokenInForeignContent(e) {
                if (!this.currentNotInHTML) return !1;
                let t, n;
                return 0 === this.openElements.stackTop && this.fragmentContext ? (t = this.fragmentContext, n = this.fragmentContextID) : ({
                    current: t,
                    currentTagId: n
                } = this.openElements), (e.tagID !== html_js_1.TAG_ID.SVG || this.treeAdapter.getTagName(t) !== html_js_1.TAG_NAMES.ANNOTATION_XML || this.treeAdapter.getNamespaceURI(t) !== html_js_1.NS.MATHML) && (this.tokenizer.inForeignNode || (e.tagID === html_js_1.TAG_ID.MGLYPH || e.tagID === html_js_1.TAG_ID.MALIGNMARK) && !this._isIntegrationPoint(n, t, html_js_1.NS.HTML))
            }
            _processToken(e) {
                switch (e.type) {
                    case token_js_1.TokenType.CHARACTER:
                        this.onCharacter(e);
                        break;
                    case token_js_1.TokenType.NULL_CHARACTER:
                        this.onNullCharacter(e);
                        break;
                    case token_js_1.TokenType.COMMENT:
                        this.onComment(e);
                        break;
                    case token_js_1.TokenType.DOCTYPE:
                        this.onDoctype(e);
                        break;
                    case token_js_1.TokenType.START_TAG:
                        this._processStartTag(e);
                        break;
                    case token_js_1.TokenType.END_TAG:
                        this.onEndTag(e);
                        break;
                    case token_js_1.TokenType.EOF:
                        this.onEof(e);
                        break;
                    case token_js_1.TokenType.WHITESPACE_CHARACTER:
                        this.onWhitespaceCharacter(e)
                }
            }
            _isIntegrationPoint(e, t, n) {
                const s = this.treeAdapter.getNamespaceURI(t),
                    o = this.treeAdapter.getAttrList(t);
                return foreignContent.isIntegrationPoint(e, s, o, n)
            }
            _reconstructActiveFormattingElements() {
                const e = this.activeFormattingElements.entries.length;
                if (e) {
                    const t = this.activeFormattingElements.entries.findIndex(e => e.type === formatting_element_list_js_1.EntryType.Marker || this.openElements.contains(e.element));
                    for (let n = t < 0 ? e - 1 : t - 1; n >= 0; n--) {
                        const e = this.activeFormattingElements.entries[n];
                        this._insertElement(e.token, this.treeAdapter.getNamespaceURI(e.element)), e.element = this.openElements.current
                    }
                }
            }
            _closeTableCell() {
                this.openElements.generateImpliedEndTags(), this.openElements.popUntilTableCellPopped(), this.activeFormattingElements.clearToLastMarker(), this.insertionMode = InsertionMode.IN_ROW
            }
            _closePElement() {
                this.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.P), this.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.P)
            }
            _resetInsertionMode() {
                for (let e = this.openElements.stackTop; e >= 0; e--) switch (0 === e && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[e]) {
                    case html_js_1.TAG_ID.TR:
                        return void (this.insertionMode = InsertionMode.IN_ROW);
                    case html_js_1.TAG_ID.TBODY:
                    case html_js_1.TAG_ID.THEAD:
                    case html_js_1.TAG_ID.TFOOT:
                        return void (this.insertionMode = InsertionMode.IN_TABLE_BODY);
                    case html_js_1.TAG_ID.CAPTION:
                        return void (this.insertionMode = InsertionMode.IN_CAPTION);
                    case html_js_1.TAG_ID.COLGROUP:
                        return void (this.insertionMode = InsertionMode.IN_COLUMN_GROUP);
                    case html_js_1.TAG_ID.TABLE:
                        return void (this.insertionMode = InsertionMode.IN_TABLE);
                    case html_js_1.TAG_ID.BODY:
                        return void (this.insertionMode = InsertionMode.IN_BODY);
                    case html_js_1.TAG_ID.FRAMESET:
                        return void (this.insertionMode = InsertionMode.IN_FRAMESET);
                    case html_js_1.TAG_ID.SELECT:
                        return void this._resetInsertionModeForSelect(e);
                    case html_js_1.TAG_ID.TEMPLATE:
                        return void (this.insertionMode = this.tmplInsertionModeStack[0]);
                    case html_js_1.TAG_ID.HTML:
                        return void (this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD);
                    case html_js_1.TAG_ID.TD:
                    case html_js_1.TAG_ID.TH:
                        if (e > 0) return void (this.insertionMode = InsertionMode.IN_CELL);
                        break;
                    case html_js_1.TAG_ID.HEAD:
                        if (e > 0) return void (this.insertionMode = InsertionMode.IN_HEAD)
                }
                this.insertionMode = InsertionMode.IN_BODY
            }
            _resetInsertionModeForSelect(e) {
                if (e > 0)
                    for (let t = e - 1; t > 0; t--) {
                        const e = this.openElements.tagIDs[t];
                        if (e === html_js_1.TAG_ID.TEMPLATE) break;
                        if (e === html_js_1.TAG_ID.TABLE) return void (this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE)
                    }
                this.insertionMode = InsertionMode.IN_SELECT
            }
            _isElementCausesFosterParenting(e) {
                return TABLE_STRUCTURE_TAGS.has(e)
            }
            _shouldFosterParentOnInsertion() {
                return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId)
            }
            _findFosterParentingLocation() {
                for (let e = this.openElements.stackTop; e >= 0; e--) {
                    const t = this.openElements.items[e];
                    switch (this.openElements.tagIDs[e]) {
                        case html_js_1.TAG_ID.TEMPLATE:
                            if (this.treeAdapter.getNamespaceURI(t) === html_js_1.NS.HTML) return {
                                parent: this.treeAdapter.getTemplateContent(t),
                                beforeElement: null
                            };
                            break;
                        case html_js_1.TAG_ID.TABLE: {
                            const n = this.treeAdapter.getParentNode(t);
                            return n ? {
                                parent: n,
                                beforeElement: t
                            } : {
                                parent: this.openElements.items[e - 1],
                                beforeElement: null
                            }
                        }
                    }
                }
                return {
                    parent: this.openElements.items[0],
                    beforeElement: null
                }
            }
            _fosterParentElement(e) {
                const t = this._findFosterParentingLocation();
                t.beforeElement ? this.treeAdapter.insertBefore(t.parent, e, t.beforeElement) : this.treeAdapter.appendChild(t.parent, e)
            }
            _isSpecialElement(e, t) {
                const n = this.treeAdapter.getNamespaceURI(e);
                return html_js_1.SPECIAL_ELEMENTS[n].has(t)
            }
            onCharacter(e) {
                if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) characterInForeignContent(this, e);
                else switch (this.insertionMode) {
                    case InsertionMode.INITIAL:
                        tokenInInitialMode(this, e);
                        break;
                    case InsertionMode.BEFORE_HTML:
                        tokenBeforeHtml(this, e);
                        break;
                    case InsertionMode.BEFORE_HEAD:
                        tokenBeforeHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD:
                        tokenInHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                        tokenInHeadNoScript(this, e);
                        break;
                    case InsertionMode.AFTER_HEAD:
                        tokenAfterHead(this, e);
                        break;
                    case InsertionMode.IN_BODY:
                    case InsertionMode.IN_CAPTION:
                    case InsertionMode.IN_CELL:
                    case InsertionMode.IN_TEMPLATE:
                        characterInBody(this, e);
                        break;
                    case InsertionMode.TEXT:
                    case InsertionMode.IN_SELECT:
                    case InsertionMode.IN_SELECT_IN_TABLE:
                        this._insertCharacters(e);
                        break;
                    case InsertionMode.IN_TABLE:
                    case InsertionMode.IN_TABLE_BODY:
                    case InsertionMode.IN_ROW:
                        characterInTable(this, e);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        characterInTableText(this, e);
                        break;
                    case InsertionMode.IN_COLUMN_GROUP:
                        tokenInColumnGroup(this, e);
                        break;
                    case InsertionMode.AFTER_BODY:
                        tokenAfterBody(this, e);
                        break;
                    case InsertionMode.AFTER_AFTER_BODY:
                        tokenAfterAfterBody(this, e)
                }
            }
            onNullCharacter(e) {
                if (this.skipNextNewLine = !1, this.tokenizer.inForeignNode) nullCharacterInForeignContent(this, e);
                else switch (this.insertionMode) {
                    case InsertionMode.INITIAL:
                        tokenInInitialMode(this, e);
                        break;
                    case InsertionMode.BEFORE_HTML:
                        tokenBeforeHtml(this, e);
                        break;
                    case InsertionMode.BEFORE_HEAD:
                        tokenBeforeHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD:
                        tokenInHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                        tokenInHeadNoScript(this, e);
                        break;
                    case InsertionMode.AFTER_HEAD:
                        tokenAfterHead(this, e);
                        break;
                    case InsertionMode.TEXT:
                        this._insertCharacters(e);
                        break;
                    case InsertionMode.IN_TABLE:
                    case InsertionMode.IN_TABLE_BODY:
                    case InsertionMode.IN_ROW:
                        characterInTable(this, e);
                        break;
                    case InsertionMode.IN_COLUMN_GROUP:
                        tokenInColumnGroup(this, e);
                        break;
                    case InsertionMode.AFTER_BODY:
                        tokenAfterBody(this, e);
                        break;
                    case InsertionMode.AFTER_AFTER_BODY:
                        tokenAfterAfterBody(this, e)
                }
            }
            onComment(e) {
                if (this.skipNextNewLine = !1, this.currentNotInHTML) appendComment(this, e);
                else switch (this.insertionMode) {
                    case InsertionMode.INITIAL:
                    case InsertionMode.BEFORE_HTML:
                    case InsertionMode.BEFORE_HEAD:
                    case InsertionMode.IN_HEAD:
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                    case InsertionMode.AFTER_HEAD:
                    case InsertionMode.IN_BODY:
                    case InsertionMode.IN_TABLE:
                    case InsertionMode.IN_CAPTION:
                    case InsertionMode.IN_COLUMN_GROUP:
                    case InsertionMode.IN_TABLE_BODY:
                    case InsertionMode.IN_ROW:
                    case InsertionMode.IN_CELL:
                    case InsertionMode.IN_SELECT:
                    case InsertionMode.IN_SELECT_IN_TABLE:
                    case InsertionMode.IN_TEMPLATE:
                    case InsertionMode.IN_FRAMESET:
                    case InsertionMode.AFTER_FRAMESET:
                        appendComment(this, e);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        tokenInTableText(this, e);
                        break;
                    case InsertionMode.AFTER_BODY:
                        appendCommentToRootHtmlElement(this, e);
                        break;
                    case InsertionMode.AFTER_AFTER_BODY:
                    case InsertionMode.AFTER_AFTER_FRAMESET:
                        appendCommentToDocument(this, e)
                }
            }
            onDoctype(e) {
                switch (this.skipNextNewLine = !1, this.insertionMode) {
                    case InsertionMode.INITIAL:
                        doctypeInInitialMode(this, e);
                        break;
                    case InsertionMode.BEFORE_HEAD:
                    case InsertionMode.IN_HEAD:
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                    case InsertionMode.AFTER_HEAD:
                        this._err(e, error_codes_js_1.ERR.misplacedDoctype);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        tokenInTableText(this, e)
                }
            }
            onStartTag(e) {
                this.skipNextNewLine = !1, this.currentToken = e, this._processStartTag(e), e.selfClosing && !e.ackSelfClosing && this._err(e, error_codes_js_1.ERR.nonVoidHtmlElementStartTagWithTrailingSolidus)
            }
            _processStartTag(e) {
                this.shouldProcessStartTagTokenInForeignContent(e) ? startTagInForeignContent(this, e) : this._startTagOutsideForeignContent(e)
            }
            _startTagOutsideForeignContent(e) {
                switch (this.insertionMode) {
                    case InsertionMode.INITIAL:
                        tokenInInitialMode(this, e);
                        break;
                    case InsertionMode.BEFORE_HTML:
                        startTagBeforeHtml(this, e);
                        break;
                    case InsertionMode.BEFORE_HEAD:
                        startTagBeforeHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD:
                        startTagInHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                        startTagInHeadNoScript(this, e);
                        break;
                    case InsertionMode.AFTER_HEAD:
                        startTagAfterHead(this, e);
                        break;
                    case InsertionMode.IN_BODY:
                        startTagInBody(this, e);
                        break;
                    case InsertionMode.IN_TABLE:
                        startTagInTable(this, e);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        tokenInTableText(this, e);
                        break;
                    case InsertionMode.IN_CAPTION:
                        startTagInCaption(this, e);
                        break;
                    case InsertionMode.IN_COLUMN_GROUP:
                        startTagInColumnGroup(this, e);
                        break;
                    case InsertionMode.IN_TABLE_BODY:
                        startTagInTableBody(this, e);
                        break;
                    case InsertionMode.IN_ROW:
                        startTagInRow(this, e);
                        break;
                    case InsertionMode.IN_CELL:
                        startTagInCell(this, e);
                        break;
                    case InsertionMode.IN_SELECT:
                        startTagInSelect(this, e);
                        break;
                    case InsertionMode.IN_SELECT_IN_TABLE:
                        startTagInSelectInTable(this, e);
                        break;
                    case InsertionMode.IN_TEMPLATE:
                        startTagInTemplate(this, e);
                        break;
                    case InsertionMode.AFTER_BODY:
                        startTagAfterBody(this, e);
                        break;
                    case InsertionMode.IN_FRAMESET:
                        startTagInFrameset(this, e);
                        break;
                    case InsertionMode.AFTER_FRAMESET:
                        startTagAfterFrameset(this, e);
                        break;
                    case InsertionMode.AFTER_AFTER_BODY:
                        startTagAfterAfterBody(this, e);
                        break;
                    case InsertionMode.AFTER_AFTER_FRAMESET:
                        startTagAfterAfterFrameset(this, e)
                }
            }
            onEndTag(e) {
                this.skipNextNewLine = !1, this.currentToken = e, this.currentNotInHTML ? endTagInForeignContent(this, e) : this._endTagOutsideForeignContent(e)
            }
            _endTagOutsideForeignContent(e) {
                switch (this.insertionMode) {
                    case InsertionMode.INITIAL:
                        tokenInInitialMode(this, e);
                        break;
                    case InsertionMode.BEFORE_HTML:
                        endTagBeforeHtml(this, e);
                        break;
                    case InsertionMode.BEFORE_HEAD:
                        endTagBeforeHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD:
                        endTagInHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                        endTagInHeadNoScript(this, e);
                        break;
                    case InsertionMode.AFTER_HEAD:
                        endTagAfterHead(this, e);
                        break;
                    case InsertionMode.IN_BODY:
                        endTagInBody(this, e);
                        break;
                    case InsertionMode.TEXT:
                        endTagInText(this, e);
                        break;
                    case InsertionMode.IN_TABLE:
                        endTagInTable(this, e);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        tokenInTableText(this, e);
                        break;
                    case InsertionMode.IN_CAPTION:
                        endTagInCaption(this, e);
                        break;
                    case InsertionMode.IN_COLUMN_GROUP:
                        endTagInColumnGroup(this, e);
                        break;
                    case InsertionMode.IN_TABLE_BODY:
                        endTagInTableBody(this, e);
                        break;
                    case InsertionMode.IN_ROW:
                        endTagInRow(this, e);
                        break;
                    case InsertionMode.IN_CELL:
                        endTagInCell(this, e);
                        break;
                    case InsertionMode.IN_SELECT:
                        endTagInSelect(this, e);
                        break;
                    case InsertionMode.IN_SELECT_IN_TABLE:
                        endTagInSelectInTable(this, e);
                        break;
                    case InsertionMode.IN_TEMPLATE:
                        endTagInTemplate(this, e);
                        break;
                    case InsertionMode.AFTER_BODY:
                        endTagAfterBody(this, e);
                        break;
                    case InsertionMode.IN_FRAMESET:
                        endTagInFrameset(this, e);
                        break;
                    case InsertionMode.AFTER_FRAMESET:
                        endTagAfterFrameset(this, e);
                        break;
                    case InsertionMode.AFTER_AFTER_BODY:
                        tokenAfterAfterBody(this, e)
                }
            }
            onEof(e) {
                switch (this.insertionMode) {
                    case InsertionMode.INITIAL:
                        tokenInInitialMode(this, e);
                        break;
                    case InsertionMode.BEFORE_HTML:
                        tokenBeforeHtml(this, e);
                        break;
                    case InsertionMode.BEFORE_HEAD:
                        tokenBeforeHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD:
                        tokenInHead(this, e);
                        break;
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                        tokenInHeadNoScript(this, e);
                        break;
                    case InsertionMode.AFTER_HEAD:
                        tokenAfterHead(this, e);
                        break;
                    case InsertionMode.IN_BODY:
                    case InsertionMode.IN_TABLE:
                    case InsertionMode.IN_CAPTION:
                    case InsertionMode.IN_COLUMN_GROUP:
                    case InsertionMode.IN_TABLE_BODY:
                    case InsertionMode.IN_ROW:
                    case InsertionMode.IN_CELL:
                    case InsertionMode.IN_SELECT:
                    case InsertionMode.IN_SELECT_IN_TABLE:
                        eofInBody(this, e);
                        break;
                    case InsertionMode.TEXT:
                        eofInText(this, e);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        tokenInTableText(this, e);
                        break;
                    case InsertionMode.IN_TEMPLATE:
                        eofInTemplate(this, e);
                        break;
                    case InsertionMode.AFTER_BODY:
                    case InsertionMode.IN_FRAMESET:
                    case InsertionMode.AFTER_FRAMESET:
                    case InsertionMode.AFTER_AFTER_BODY:
                    case InsertionMode.AFTER_AFTER_FRAMESET:
                        stopParsing(this, e)
                }
            }
            onWhitespaceCharacter(e) {
                if (this.skipNextNewLine && (this.skipNextNewLine = !1, e.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED)) {
                    if (1 === e.chars.length) return;
                    e.chars = e.chars.substr(1)
                }
                if (this.tokenizer.inForeignNode) this._insertCharacters(e);
                else switch (this.insertionMode) {
                    case InsertionMode.IN_HEAD:
                    case InsertionMode.IN_HEAD_NO_SCRIPT:
                    case InsertionMode.AFTER_HEAD:
                    case InsertionMode.TEXT:
                    case InsertionMode.IN_COLUMN_GROUP:
                    case InsertionMode.IN_SELECT:
                    case InsertionMode.IN_SELECT_IN_TABLE:
                    case InsertionMode.IN_FRAMESET:
                    case InsertionMode.AFTER_FRAMESET:
                        this._insertCharacters(e);
                        break;
                    case InsertionMode.IN_BODY:
                    case InsertionMode.IN_CAPTION:
                    case InsertionMode.IN_CELL:
                    case InsertionMode.IN_TEMPLATE:
                    case InsertionMode.AFTER_BODY:
                    case InsertionMode.AFTER_AFTER_BODY:
                    case InsertionMode.AFTER_AFTER_FRAMESET:
                        whitespaceCharacterInBody(this, e);
                        break;
                    case InsertionMode.IN_TABLE:
                    case InsertionMode.IN_TABLE_BODY:
                    case InsertionMode.IN_ROW:
                        characterInTable(this, e);
                        break;
                    case InsertionMode.IN_TABLE_TEXT:
                        whitespaceCharacterInTableText(this, e)
                }
            }
        }
  
        function aaObtainFormattingElementEntry(e, t) {
            let n = e.activeFormattingElements.getElementEntryInScopeWithTagName(t.tagName);
            return n ? e.openElements.contains(n.element) ? e.openElements.hasInScope(t.tagID) || (n = null) : (e.activeFormattingElements.removeEntry(n), n = null) : genericEndTagInBody(e, t), n
        }
  
        function aaObtainFurthestBlock(e, t) {
            let n = null,
                s = e.openElements.stackTop;
            for (; s >= 0; s--) {
                const o = e.openElements.items[s];
                if (o === t.element) break;
                e._isSpecialElement(o, e.openElements.tagIDs[s]) && (n = o)
            }
            return n || (e.openElements.shortenToLength(s < 0 ? 0 : s), e.activeFormattingElements.removeEntry(t)), n
        }
  
        function aaInnerLoop(e, t, n) {
            let s = t,
                o = e.openElements.getCommonAncestor(t);
            for (let a = 0, _ = o; _ !== n; a++, _ = o) {
                o = e.openElements.getCommonAncestor(_);
                const n = e.activeFormattingElements.getElementEntry(_),
                    r = n && a >= AA_INNER_LOOP_ITER;
                !n || r ? (r && e.activeFormattingElements.removeEntry(n), e.openElements.remove(_)) : (_ = aaRecreateElementFromEntry(e, n), s === t && (e.activeFormattingElements.bookmark = n), e.treeAdapter.detachNode(s), e.treeAdapter.appendChild(_, s), s = _)
            }
            return s
        }
  
        function aaRecreateElementFromEntry(e, t) {
            const n = e.treeAdapter.getNamespaceURI(t.element),
                s = e.treeAdapter.createElement(t.token.tagName, n, t.token.attrs);
            return e.openElements.replace(t.element, s), t.element = s, s
        }
  
        function aaInsertLastNodeInCommonAncestor(e, t, n) {
            const s = e.treeAdapter.getTagName(t),
                o = (0, html_js_1.getTagID)(s);
            if (e._isElementCausesFosterParenting(o)) e._fosterParentElement(n);
            else {
                const s = e.treeAdapter.getNamespaceURI(t);
                o === html_js_1.TAG_ID.TEMPLATE && s === html_js_1.NS.HTML && (t = e.treeAdapter.getTemplateContent(t)), e.treeAdapter.appendChild(t, n)
            }
        }
  
        function aaReplaceFormattingElement(e, t, n) {
            const s = e.treeAdapter.getNamespaceURI(n.element),
                {
                    token: o
                } = n,
                a = e.treeAdapter.createElement(o.tagName, s, o.attrs);
            e._adoptNodes(t, a), e.treeAdapter.appendChild(t, a), e.activeFormattingElements.insertElementAfterBookmark(a, o), e.activeFormattingElements.removeEntry(n), e.openElements.remove(n.element), e.openElements.insertAfter(t, a, o.tagID)
        }
  
        function callAdoptionAgency(e, t) {
            for (let n = 0; n < AA_OUTER_LOOP_ITER; n++) {
                const n = aaObtainFormattingElementEntry(e, t);
                if (!n) break;
                const s = aaObtainFurthestBlock(e, n);
                if (!s) break;
                e.activeFormattingElements.bookmark = n;
                const o = aaInnerLoop(e, s, n.element),
                    a = e.openElements.getCommonAncestor(n.element);
                e.treeAdapter.detachNode(o), a && aaInsertLastNodeInCommonAncestor(e, a, o), aaReplaceFormattingElement(e, s, n)
            }
        }
  
        function appendComment(e, t) {
            e._appendCommentNode(t, e.openElements.currentTmplContentOrNode)
        }
  
        function appendCommentToRootHtmlElement(e, t) {
            e._appendCommentNode(t, e.openElements.items[0])
        }
  
        function appendCommentToDocument(e, t) {
            e._appendCommentNode(t, e.document)
        }
  
        function stopParsing(e, t) {
            if (e.stopped = !0, t.location) {
                const n = e.fragmentContext ? 0 : 2;
                for (let s = e.openElements.stackTop; s >= n; s--) e._setEndLocation(e.openElements.items[s], t);
                if (!e.fragmentContext && e.openElements.stackTop >= 0) {
                    const n = e.openElements.items[0],
                        s = e.treeAdapter.getNodeSourceCodeLocation(n);
                    if (s && !s.endTag && (e._setEndLocation(n, t), e.openElements.stackTop >= 1)) {
                        const n = e.openElements.items[1],
                            s = e.treeAdapter.getNodeSourceCodeLocation(n);
                        s && !s.endTag && e._setEndLocation(n, t)
                    }
                }
            }
        }
  
        function doctypeInInitialMode(e, t) {
            e._setDocumentType(t);
            const n = t.forceQuirks ? html_js_1.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(t);
            doctype.isConforming(t) || e._err(t, error_codes_js_1.ERR.nonConformingDoctype), e.treeAdapter.setDocumentMode(e.document, n), e.insertionMode = InsertionMode.BEFORE_HTML
        }
  
        function tokenInInitialMode(e, t) {
            e._err(t, error_codes_js_1.ERR.missingDoctype, !0), e.treeAdapter.setDocumentMode(e.document, html_js_1.DOCUMENT_MODE.QUIRKS), e.insertionMode = InsertionMode.BEFORE_HTML, e._processToken(t)
        }
  
        function startTagBeforeHtml(e, t) {
            t.tagID === html_js_1.TAG_ID.HTML ? (e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.BEFORE_HEAD) : tokenBeforeHtml(e, t)
        }
  
        function endTagBeforeHtml(e, t) {
            const n = t.tagID;
            n !== html_js_1.TAG_ID.HTML && n !== html_js_1.TAG_ID.HEAD && n !== html_js_1.TAG_ID.BODY && n !== html_js_1.TAG_ID.BR || tokenBeforeHtml(e, t)
        }
  
        function tokenBeforeHtml(e, t) {
            e._insertFakeRootElement(), e.insertionMode = InsertionMode.BEFORE_HEAD, e._processToken(t)
        }
  
        function startTagBeforeHead(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.HEAD:
                    e._insertElement(t, html_js_1.NS.HTML), e.headElement = e.openElements.current, e.insertionMode = InsertionMode.IN_HEAD;
                    break;
                default:
                    tokenBeforeHead(e, t)
            }
        }
  
        function endTagBeforeHead(e, t) {
            const n = t.tagID;
            n === html_js_1.TAG_ID.HEAD || n === html_js_1.TAG_ID.BODY || n === html_js_1.TAG_ID.HTML || n === html_js_1.TAG_ID.BR ? tokenBeforeHead(e, t) : e._err(t, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement)
        }
  
        function tokenBeforeHead(e, t) {
            e._insertFakeElement(html_js_1.TAG_NAMES.HEAD, html_js_1.TAG_ID.HEAD), e.headElement = e.openElements.current, e.insertionMode = InsertionMode.IN_HEAD, e._processToken(t)
        }
  
        function startTagInHead(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.BASE:
                case html_js_1.TAG_ID.BASEFONT:
                case html_js_1.TAG_ID.BGSOUND:
                case html_js_1.TAG_ID.LINK:
                case html_js_1.TAG_ID.META:
                    e._appendElement(t, html_js_1.NS.HTML), t.ackSelfClosing = !0;
                    break;
                case html_js_1.TAG_ID.TITLE:
                    e._switchToTextParsing(t, index_js_1.TokenizerMode.RCDATA);
                    break;
                case html_js_1.TAG_ID.NOSCRIPT:
                    e.options.scriptingEnabled ? e._switchToTextParsing(t, index_js_1.TokenizerMode.RAWTEXT) : (e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT);
                    break;
                case html_js_1.TAG_ID.NOFRAMES:
                case html_js_1.TAG_ID.STYLE:
                    e._switchToTextParsing(t, index_js_1.TokenizerMode.RAWTEXT);
                    break;
                case html_js_1.TAG_ID.SCRIPT:
                    e._switchToTextParsing(t, index_js_1.TokenizerMode.SCRIPT_DATA);
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    e._insertTemplate(t), e.activeFormattingElements.insertMarker(), e.framesetOk = !1, e.insertionMode = InsertionMode.IN_TEMPLATE, e.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);
                    break;
                case html_js_1.TAG_ID.HEAD:
                    e._err(t, error_codes_js_1.ERR.misplacedStartTagForHeadElement);
                    break;
                default:
                    tokenInHead(e, t)
            }
        }
  
        function endTagInHead(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HEAD:
                    e.openElements.pop(), e.insertionMode = InsertionMode.AFTER_HEAD;
                    break;
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.BR:
                case html_js_1.TAG_ID.HTML:
                    tokenInHead(e, t);
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    templateEndTagInHead(e, t);
                    break;
                default:
                    e._err(t, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement)
            }
        }
  
        function templateEndTagInHead(e, t) {
            e.openElements.tmplCount > 0 ? (e.openElements.generateImpliedEndTagsThoroughly(), e.openElements.currentTagId !== html_js_1.TAG_ID.TEMPLATE && e._err(t, error_codes_js_1.ERR.closingOfElementWithOpenChildElements), e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TEMPLATE), e.activeFormattingElements.clearToLastMarker(), e.tmplInsertionModeStack.shift(), e._resetInsertionMode()) : e._err(t, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement)
        }
  
        function tokenInHead(e, t) {
            e.openElements.pop(), e.insertionMode = InsertionMode.AFTER_HEAD, e._processToken(t)
        }
  
        function startTagInHeadNoScript(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.BASEFONT:
                case html_js_1.TAG_ID.BGSOUND:
                case html_js_1.TAG_ID.HEAD:
                case html_js_1.TAG_ID.LINK:
                case html_js_1.TAG_ID.META:
                case html_js_1.TAG_ID.NOFRAMES:
                case html_js_1.TAG_ID.STYLE:
                    startTagInHead(e, t);
                    break;
                case html_js_1.TAG_ID.NOSCRIPT:
                    e._err(t, error_codes_js_1.ERR.nestedNoscriptInHead);
                    break;
                default:
                    tokenInHeadNoScript(e, t)
            }
        }
  
        function endTagInHeadNoScript(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.NOSCRIPT:
                    e.openElements.pop(), e.insertionMode = InsertionMode.IN_HEAD;
                    break;
                case html_js_1.TAG_ID.BR:
                    tokenInHeadNoScript(e, t);
                    break;
                default:
                    e._err(t, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement)
            }
        }
  
        function tokenInHeadNoScript(e, t) {
            const n = t.type === token_js_1.TokenType.EOF ? error_codes_js_1.ERR.openElementsLeftAfterEof : error_codes_js_1.ERR.disallowedContentInNoscriptInHead;
            e._err(t, n), e.openElements.pop(), e.insertionMode = InsertionMode.IN_HEAD, e._processToken(t)
        }
  
        function startTagAfterHead(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.BODY:
                    e._insertElement(t, html_js_1.NS.HTML), e.framesetOk = !1, e.insertionMode = InsertionMode.IN_BODY;
                    break;
                case html_js_1.TAG_ID.FRAMESET:
                    e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_FRAMESET;
                    break;
                case html_js_1.TAG_ID.BASE:
                case html_js_1.TAG_ID.BASEFONT:
                case html_js_1.TAG_ID.BGSOUND:
                case html_js_1.TAG_ID.LINK:
                case html_js_1.TAG_ID.META:
                case html_js_1.TAG_ID.NOFRAMES:
                case html_js_1.TAG_ID.SCRIPT:
                case html_js_1.TAG_ID.STYLE:
                case html_js_1.TAG_ID.TEMPLATE:
                case html_js_1.TAG_ID.TITLE:
                    e._err(t, error_codes_js_1.ERR.abandonedHeadElementChild), e.openElements.push(e.headElement, html_js_1.TAG_ID.HEAD), startTagInHead(e, t), e.openElements.remove(e.headElement);
                    break;
                case html_js_1.TAG_ID.HEAD:
                    e._err(t, error_codes_js_1.ERR.misplacedStartTagForHeadElement);
                    break;
                default:
                    tokenAfterHead(e, t)
            }
        }
  
        function endTagAfterHead(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.HTML:
                case html_js_1.TAG_ID.BR:
                    tokenAfterHead(e, t);
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    templateEndTagInHead(e, t);
                    break;
                default:
                    e._err(t, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement)
            }
        }
  
        function tokenAfterHead(e, t) {
            e._insertFakeElement(html_js_1.TAG_NAMES.BODY, html_js_1.TAG_ID.BODY), e.insertionMode = InsertionMode.IN_BODY, modeInBody(e, t)
        }
  
        function modeInBody(e, t) {
            switch (t.type) {
                case token_js_1.TokenType.CHARACTER:
                    characterInBody(e, t);
                    break;
                case token_js_1.TokenType.WHITESPACE_CHARACTER:
                    whitespaceCharacterInBody(e, t);
                    break;
                case token_js_1.TokenType.COMMENT:
                    appendComment(e, t);
                    break;
                case token_js_1.TokenType.START_TAG:
                    startTagInBody(e, t);
                    break;
                case token_js_1.TokenType.END_TAG:
                    endTagInBody(e, t);
                    break;
                case token_js_1.TokenType.EOF:
                    eofInBody(e, t)
            }
        }
  
        function whitespaceCharacterInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._insertCharacters(t)
        }
  
        function characterInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._insertCharacters(t), e.framesetOk = !1
        }
  
        function htmlStartTagInBody(e, t) {
            0 === e.openElements.tmplCount && e.treeAdapter.adoptAttributes(e.openElements.items[0], t.attrs)
        }
  
        function bodyStartTagInBody(e, t) {
            const n = e.openElements.tryPeekProperlyNestedBodyElement();
            n && 0 === e.openElements.tmplCount && (e.framesetOk = !1, e.treeAdapter.adoptAttributes(n, t.attrs))
        }
  
        function framesetStartTagInBody(e, t) {
            const n = e.openElements.tryPeekProperlyNestedBodyElement();
            e.framesetOk && n && (e.treeAdapter.detachNode(n), e.openElements.popAllUpToHtmlElement(), e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_FRAMESET)
        }
  
        function addressStartTagInBody(e, t) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function numberedHeaderStartTagInBody(e, t) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), (0, html_js_1.isNumberedHeader)(e.openElements.currentTagId) && e.openElements.pop(), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function preStartTagInBody(e, t) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._insertElement(t, html_js_1.NS.HTML), e.skipNextNewLine = !0, e.framesetOk = !1
        }
  
        function formStartTagInBody(e, t) {
            const n = e.openElements.tmplCount > 0;
            e.formElement && !n || (e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._insertElement(t, html_js_1.NS.HTML), n || (e.formElement = e.openElements.current))
        }
  
        function listItemStartTagInBody(e, t) {
            e.framesetOk = !1;
            const n = t.tagID;
            for (let t = e.openElements.stackTop; t >= 0; t--) {
                const s = e.openElements.tagIDs[t];
                if (n === html_js_1.TAG_ID.LI && s === html_js_1.TAG_ID.LI || (n === html_js_1.TAG_ID.DD || n === html_js_1.TAG_ID.DT) && (s === html_js_1.TAG_ID.DD || s === html_js_1.TAG_ID.DT)) {
                    e.openElements.generateImpliedEndTagsWithExclusion(s), e.openElements.popUntilTagNamePopped(s);
                    break
                }
                if (s !== html_js_1.TAG_ID.ADDRESS && s !== html_js_1.TAG_ID.DIV && s !== html_js_1.TAG_ID.P && e._isSpecialElement(e.openElements.items[t], s)) break
            }
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function plaintextStartTagInBody(e, t) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._insertElement(t, html_js_1.NS.HTML), e.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT
        }
  
        function buttonStartTagInBody(e, t) {
            e.openElements.hasInScope(html_js_1.TAG_ID.BUTTON) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.BUTTON)), e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML), e.framesetOk = !1
        }
  
        function aStartTagInBody(e, t) {
            const n = e.activeFormattingElements.getElementEntryInScopeWithTagName(html_js_1.TAG_NAMES.A);
            n && (callAdoptionAgency(e, t), e.openElements.remove(n.element), e.activeFormattingElements.removeEntry(n)), e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t)
        }
  
        function bStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t)
        }
  
        function nobrStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e.openElements.hasInScope(html_js_1.TAG_ID.NOBR) && (callAdoptionAgency(e, t), e._reconstructActiveFormattingElements()), e._insertElement(t, html_js_1.NS.HTML), e.activeFormattingElements.pushElement(e.openElements.current, t)
        }
  
        function appletStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML), e.activeFormattingElements.insertMarker(), e.framesetOk = !1
        }
  
        function tableStartTagInBody(e, t) {
            e.treeAdapter.getDocumentMode(e.document) !== html_js_1.DOCUMENT_MODE.QUIRKS && e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._insertElement(t, html_js_1.NS.HTML), e.framesetOk = !1, e.insertionMode = InsertionMode.IN_TABLE
        }
  
        function areaStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._appendElement(t, html_js_1.NS.HTML), e.framesetOk = !1, t.ackSelfClosing = !0
        }
  
        function isHiddenInput(e) {
            const t = (0, token_js_1.getTokenAttr)(e, html_js_1.ATTRS.TYPE);
            return null != t && t.toLowerCase() === HIDDEN_INPUT_TYPE
        }
  
        function inputStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._appendElement(t, html_js_1.NS.HTML), isHiddenInput(t) || (e.framesetOk = !1), t.ackSelfClosing = !0
        }
  
        function paramStartTagInBody(e, t) {
            e._appendElement(t, html_js_1.NS.HTML), t.ackSelfClosing = !0
        }
  
        function hrStartTagInBody(e, t) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._appendElement(t, html_js_1.NS.HTML), e.framesetOk = !1, t.ackSelfClosing = !0
        }
  
        function imageStartTagInBody(e, t) {
            t.tagName = html_js_1.TAG_NAMES.IMG, t.tagID = html_js_1.TAG_ID.IMG, areaStartTagInBody(e, t)
        }
  
        function textareaStartTagInBody(e, t) {
            e._insertElement(t, html_js_1.NS.HTML), e.skipNextNewLine = !0, e.tokenizer.state = index_js_1.TokenizerMode.RCDATA, e.originalInsertionMode = e.insertionMode, e.framesetOk = !1, e.insertionMode = InsertionMode.TEXT
        }
  
        function xmpStartTagInBody(e, t) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) && e._closePElement(), e._reconstructActiveFormattingElements(), e.framesetOk = !1, e._switchToTextParsing(t, index_js_1.TokenizerMode.RAWTEXT)
        }
  
        function iframeStartTagInBody(e, t) {
            e.framesetOk = !1, e._switchToTextParsing(t, index_js_1.TokenizerMode.RAWTEXT)
        }
  
        function noembedStartTagInBody(e, t) {
            e._switchToTextParsing(t, index_js_1.TokenizerMode.RAWTEXT)
        }
  
        function selectStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML), e.framesetOk = !1, e.insertionMode = e.insertionMode === InsertionMode.IN_TABLE || e.insertionMode === InsertionMode.IN_CAPTION || e.insertionMode === InsertionMode.IN_TABLE_BODY || e.insertionMode === InsertionMode.IN_ROW || e.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT
        }
  
        function optgroupStartTagInBody(e, t) {
            e.openElements.currentTagId === html_js_1.TAG_ID.OPTION && e.openElements.pop(), e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function rbStartTagInBody(e, t) {
            e.openElements.hasInScope(html_js_1.TAG_ID.RUBY) && e.openElements.generateImpliedEndTags(), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function rtStartTagInBody(e, t) {
            e.openElements.hasInScope(html_js_1.TAG_ID.RUBY) && e.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.RTC), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function mathStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), foreignContent.adjustTokenMathMLAttrs(t), foreignContent.adjustTokenXMLAttrs(t), t.selfClosing ? e._appendElement(t, html_js_1.NS.MATHML) : e._insertElement(t, html_js_1.NS.MATHML), t.ackSelfClosing = !0
        }
  
        function svgStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), foreignContent.adjustTokenSVGAttrs(t), foreignContent.adjustTokenXMLAttrs(t), t.selfClosing ? e._appendElement(t, html_js_1.NS.SVG) : e._insertElement(t, html_js_1.NS.SVG), t.ackSelfClosing = !0
        }
  
        function genericStartTagInBody(e, t) {
            e._reconstructActiveFormattingElements(), e._insertElement(t, html_js_1.NS.HTML)
        }
  
        function startTagInBody(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.I:
                case html_js_1.TAG_ID.S:
                case html_js_1.TAG_ID.B:
                case html_js_1.TAG_ID.U:
                case html_js_1.TAG_ID.EM:
                case html_js_1.TAG_ID.TT:
                case html_js_1.TAG_ID.BIG:
                case html_js_1.TAG_ID.CODE:
                case html_js_1.TAG_ID.FONT:
                case html_js_1.TAG_ID.SMALL:
                case html_js_1.TAG_ID.STRIKE:
                case html_js_1.TAG_ID.STRONG:
                    bStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.A:
                    aStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.H1:
                case html_js_1.TAG_ID.H2:
                case html_js_1.TAG_ID.H3:
                case html_js_1.TAG_ID.H4:
                case html_js_1.TAG_ID.H5:
                case html_js_1.TAG_ID.H6:
                    numberedHeaderStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.P:
                case html_js_1.TAG_ID.DL:
                case html_js_1.TAG_ID.OL:
                case html_js_1.TAG_ID.UL:
                case html_js_1.TAG_ID.DIV:
                case html_js_1.TAG_ID.DIR:
                case html_js_1.TAG_ID.NAV:
                case html_js_1.TAG_ID.MAIN:
                case html_js_1.TAG_ID.MENU:
                case html_js_1.TAG_ID.ASIDE:
                case html_js_1.TAG_ID.CENTER:
                case html_js_1.TAG_ID.FIGURE:
                case html_js_1.TAG_ID.FOOTER:
                case html_js_1.TAG_ID.HEADER:
                case html_js_1.TAG_ID.HGROUP:
                case html_js_1.TAG_ID.DIALOG:
                case html_js_1.TAG_ID.DETAILS:
                case html_js_1.TAG_ID.ADDRESS:
                case html_js_1.TAG_ID.ARTICLE:
                case html_js_1.TAG_ID.SECTION:
                case html_js_1.TAG_ID.SUMMARY:
                case html_js_1.TAG_ID.FIELDSET:
                case html_js_1.TAG_ID.BLOCKQUOTE:
                case html_js_1.TAG_ID.FIGCAPTION:
                    addressStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.LI:
                case html_js_1.TAG_ID.DD:
                case html_js_1.TAG_ID.DT:
                    listItemStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.BR:
                case html_js_1.TAG_ID.IMG:
                case html_js_1.TAG_ID.WBR:
                case html_js_1.TAG_ID.AREA:
                case html_js_1.TAG_ID.EMBED:
                case html_js_1.TAG_ID.KEYGEN:
                    areaStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.HR:
                    hrStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.RB:
                case html_js_1.TAG_ID.RTC:
                    rbStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.RT:
                case html_js_1.TAG_ID.RP:
                    rtStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.PRE:
                case html_js_1.TAG_ID.LISTING:
                    preStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.XMP:
                    xmpStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.SVG:
                    svgStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.HTML:
                    htmlStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.BASE:
                case html_js_1.TAG_ID.LINK:
                case html_js_1.TAG_ID.META:
                case html_js_1.TAG_ID.STYLE:
                case html_js_1.TAG_ID.TITLE:
                case html_js_1.TAG_ID.SCRIPT:
                case html_js_1.TAG_ID.BGSOUND:
                case html_js_1.TAG_ID.BASEFONT:
                case html_js_1.TAG_ID.TEMPLATE:
                    startTagInHead(e, t);
                    break;
                case html_js_1.TAG_ID.BODY:
                    bodyStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.FORM:
                    formStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.NOBR:
                    nobrStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.MATH:
                    mathStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.TABLE:
                    tableStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.INPUT:
                    inputStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.PARAM:
                case html_js_1.TAG_ID.TRACK:
                case html_js_1.TAG_ID.SOURCE:
                    paramStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.IMAGE:
                    imageStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.BUTTON:
                    buttonStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.APPLET:
                case html_js_1.TAG_ID.OBJECT:
                case html_js_1.TAG_ID.MARQUEE:
                    appletStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.IFRAME:
                    iframeStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.SELECT:
                    selectStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.OPTION:
                case html_js_1.TAG_ID.OPTGROUP:
                    optgroupStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.NOEMBED:
                    noembedStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.FRAMESET:
                    framesetStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.TEXTAREA:
                    textareaStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.NOSCRIPT:
                    e.options.scriptingEnabled ? noembedStartTagInBody(e, t) : genericStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.PLAINTEXT:
                    plaintextStartTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TR:
                case html_js_1.TAG_ID.HEAD:
                case html_js_1.TAG_ID.FRAME:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COLGROUP:
                    break;
                default:
                    genericStartTagInBody(e, t)
            }
        }
  
        function bodyEndTagInBody(e, t) {
            if (e.openElements.hasInScope(html_js_1.TAG_ID.BODY) && (e.insertionMode = InsertionMode.AFTER_BODY, e.options.sourceCodeLocationInfo)) {
                const n = e.openElements.tryPeekProperlyNestedBodyElement();
                n && e._setEndLocation(n, t)
            }
        }
  
        function htmlEndTagInBody(e, t) {
            e.openElements.hasInScope(html_js_1.TAG_ID.BODY) && (e.insertionMode = InsertionMode.AFTER_BODY, endTagAfterBody(e, t))
        }
  
        function addressEndTagInBody(e, t) {
            const n = t.tagID;
            e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n))
        }
  
        function formEndTagInBody(e) {
            const t = e.openElements.tmplCount > 0,
                {
                    formElement: n
                } = e;
            t || (e.formElement = null), (n || t) && e.openElements.hasInScope(html_js_1.TAG_ID.FORM) && (e.openElements.generateImpliedEndTags(), t ? e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.FORM) : n && e.openElements.remove(n))
        }
  
        function pEndTagInBody(e) {
            e.openElements.hasInButtonScope(html_js_1.TAG_ID.P) || e._insertFakeElement(html_js_1.TAG_NAMES.P, html_js_1.TAG_ID.P), e._closePElement()
        }
  
        function liEndTagInBody(e) {
            e.openElements.hasInListItemScope(html_js_1.TAG_ID.LI) && (e.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.LI), e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.LI))
        }
  
        function ddEndTagInBody(e, t) {
            const n = t.tagID;
            e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTagsWithExclusion(n), e.openElements.popUntilTagNamePopped(n))
        }
  
        function numberedHeaderEndTagInBody(e) {
            e.openElements.hasNumberedHeaderInScope() && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilNumberedHeaderPopped())
        }
  
        function appletEndTagInBody(e, t) {
            const n = t.tagID;
            e.openElements.hasInScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n), e.activeFormattingElements.clearToLastMarker())
        }
  
        function brEndTagInBody(e) {
            e._reconstructActiveFormattingElements(), e._insertFakeElement(html_js_1.TAG_NAMES.BR, html_js_1.TAG_ID.BR), e.openElements.pop(), e.framesetOk = !1
        }
  
        function genericEndTagInBody(e, t) {
            const n = t.tagName,
                s = t.tagID;
            for (let t = e.openElements.stackTop; t > 0; t--) {
                const o = e.openElements.items[t],
                    a = e.openElements.tagIDs[t];
                if (s === a && (s !== html_js_1.TAG_ID.UNKNOWN || e.treeAdapter.getTagName(o) === n)) {
                    e.openElements.generateImpliedEndTagsWithExclusion(s), e.openElements.stackTop >= t && e.openElements.shortenToLength(t);
                    break
                }
                if (e._isSpecialElement(o, a)) break
            }
        }
  
        function endTagInBody(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.A:
                case html_js_1.TAG_ID.B:
                case html_js_1.TAG_ID.I:
                case html_js_1.TAG_ID.S:
                case html_js_1.TAG_ID.U:
                case html_js_1.TAG_ID.EM:
                case html_js_1.TAG_ID.TT:
                case html_js_1.TAG_ID.BIG:
                case html_js_1.TAG_ID.CODE:
                case html_js_1.TAG_ID.FONT:
                case html_js_1.TAG_ID.NOBR:
                case html_js_1.TAG_ID.SMALL:
                case html_js_1.TAG_ID.STRIKE:
                case html_js_1.TAG_ID.STRONG:
                    callAdoptionAgency(e, t);
                    break;
                case html_js_1.TAG_ID.P:
                    pEndTagInBody(e);
                    break;
                case html_js_1.TAG_ID.DL:
                case html_js_1.TAG_ID.UL:
                case html_js_1.TAG_ID.OL:
                case html_js_1.TAG_ID.DIR:
                case html_js_1.TAG_ID.DIV:
                case html_js_1.TAG_ID.NAV:
                case html_js_1.TAG_ID.PRE:
                case html_js_1.TAG_ID.MAIN:
                case html_js_1.TAG_ID.MENU:
                case html_js_1.TAG_ID.ASIDE:
                case html_js_1.TAG_ID.BUTTON:
                case html_js_1.TAG_ID.CENTER:
                case html_js_1.TAG_ID.FIGURE:
                case html_js_1.TAG_ID.FOOTER:
                case html_js_1.TAG_ID.HEADER:
                case html_js_1.TAG_ID.HGROUP:
                case html_js_1.TAG_ID.DIALOG:
                case html_js_1.TAG_ID.ADDRESS:
                case html_js_1.TAG_ID.ARTICLE:
                case html_js_1.TAG_ID.DETAILS:
                case html_js_1.TAG_ID.SECTION:
                case html_js_1.TAG_ID.SUMMARY:
                case html_js_1.TAG_ID.LISTING:
                case html_js_1.TAG_ID.FIELDSET:
                case html_js_1.TAG_ID.BLOCKQUOTE:
                case html_js_1.TAG_ID.FIGCAPTION:
                    addressEndTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.LI:
                    liEndTagInBody(e);
                    break;
                case html_js_1.TAG_ID.DD:
                case html_js_1.TAG_ID.DT:
                    ddEndTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.H1:
                case html_js_1.TAG_ID.H2:
                case html_js_1.TAG_ID.H3:
                case html_js_1.TAG_ID.H4:
                case html_js_1.TAG_ID.H5:
                case html_js_1.TAG_ID.H6:
                    numberedHeaderEndTagInBody(e);
                    break;
                case html_js_1.TAG_ID.BR:
                    brEndTagInBody(e);
                    break;
                case html_js_1.TAG_ID.BODY:
                    bodyEndTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.HTML:
                    htmlEndTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.FORM:
                    formEndTagInBody(e);
                    break;
                case html_js_1.TAG_ID.APPLET:
                case html_js_1.TAG_ID.OBJECT:
                case html_js_1.TAG_ID.MARQUEE:
                    appletEndTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    templateEndTagInHead(e, t);
                    break;
                default:
                    genericEndTagInBody(e, t)
            }
        }
  
        function eofInBody(e, t) {
            e.tmplInsertionModeStack.length > 0 ? eofInTemplate(e, t) : stopParsing(e, t)
        }
  
        function endTagInText(e, t) {
            var n;
            t.tagID === html_js_1.TAG_ID.SCRIPT && (null === (n = e.scriptHandler) || void 0 === n || n.call(e, e.openElements.current)), e.openElements.pop(), e.insertionMode = e.originalInsertionMode
        }
  
        function eofInText(e, t) {
            e._err(t, error_codes_js_1.ERR.eofInElementThatCanContainOnlyText), e.openElements.pop(), e.insertionMode = e.originalInsertionMode, e.onEof(t)
        }
  
        function characterInTable(e, t) {
            if (TABLE_STRUCTURE_TAGS.has(e.openElements.currentTagId)) switch (e.pendingCharacterTokens.length = 0, e.hasNonWhitespacePendingCharacterToken = !1, e.originalInsertionMode = e.insertionMode, e.insertionMode = InsertionMode.IN_TABLE_TEXT, t.type) {
                case token_js_1.TokenType.CHARACTER:
                    characterInTableText(e, t);
                    break;
                case token_js_1.TokenType.WHITESPACE_CHARACTER:
                    whitespaceCharacterInTableText(e, t)
            } else tokenInTable(e, t)
        }
  
        function captionStartTagInTable(e, t) {
            e.openElements.clearBackToTableContext(), e.activeFormattingElements.insertMarker(), e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_CAPTION
        }
  
        function colgroupStartTagInTable(e, t) {
            e.openElements.clearBackToTableContext(), e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_COLUMN_GROUP
        }
  
        function colStartTagInTable(e, t) {
            e.openElements.clearBackToTableContext(), e._insertFakeElement(html_js_1.TAG_NAMES.COLGROUP, html_js_1.TAG_ID.COLGROUP), e.insertionMode = InsertionMode.IN_COLUMN_GROUP, startTagInColumnGroup(e, t)
        }
  
        function tbodyStartTagInTable(e, t) {
            e.openElements.clearBackToTableContext(), e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_TABLE_BODY
        }
  
        function tdStartTagInTable(e, t) {
            e.openElements.clearBackToTableContext(), e._insertFakeElement(html_js_1.TAG_NAMES.TBODY, html_js_1.TAG_ID.TBODY), e.insertionMode = InsertionMode.IN_TABLE_BODY, startTagInTableBody(e, t)
        }
  
        function tableStartTagInTable(e, t) {
            e.openElements.hasInTableScope(html_js_1.TAG_ID.TABLE) && (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TABLE), e._resetInsertionMode(), e._processStartTag(t))
        }
  
        function inputStartTagInTable(e, t) {
            isHiddenInput(t) ? e._appendElement(t, html_js_1.NS.HTML) : tokenInTable(e, t), t.ackSelfClosing = !0
        }
  
        function formStartTagInTable(e, t) {
            e.formElement || 0 !== e.openElements.tmplCount || (e._insertElement(t, html_js_1.NS.HTML), e.formElement = e.openElements.current, e.openElements.pop())
        }
  
        function startTagInTable(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.TR:
                    tdStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.STYLE:
                case html_js_1.TAG_ID.SCRIPT:
                case html_js_1.TAG_ID.TEMPLATE:
                    startTagInHead(e, t);
                    break;
                case html_js_1.TAG_ID.COL:
                    colStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.FORM:
                    formStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.TABLE:
                    tableStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                    tbodyStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.INPUT:
                    inputStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.CAPTION:
                    captionStartTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.COLGROUP:
                    colgroupStartTagInTable(e, t);
                    break;
                default:
                    tokenInTable(e, t)
            }
        }
  
        function endTagInTable(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.TABLE:
                    e.openElements.hasInTableScope(html_js_1.TAG_ID.TABLE) && (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TABLE), e._resetInsertionMode());
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    templateEndTagInHead(e, t);
                    break;
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.HTML:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.THEAD:
                case html_js_1.TAG_ID.TR:
                    break;
                default:
                    tokenInTable(e, t)
            }
        }
  
        function tokenInTable(e, t) {
            const n = e.fosterParentingEnabled;
            e.fosterParentingEnabled = !0, modeInBody(e, t), e.fosterParentingEnabled = n
        }
  
        function whitespaceCharacterInTableText(e, t) {
            e.pendingCharacterTokens.push(t)
        }
  
        function characterInTableText(e, t) {
            e.pendingCharacterTokens.push(t), e.hasNonWhitespacePendingCharacterToken = !0
        }
  
        function tokenInTableText(e, t) {
            let n = 0;
            if (e.hasNonWhitespacePendingCharacterToken)
                for (; n < e.pendingCharacterTokens.length; n++) tokenInTable(e, e.pendingCharacterTokens[n]);
            else
                for (; n < e.pendingCharacterTokens.length; n++) e._insertCharacters(e.pendingCharacterTokens[n]);
            e.insertionMode = e.originalInsertionMode, e._processToken(t)
        }
        exports.Parser = Parser;
        const TABLE_VOID_ELEMENTS = new Set([html_js_1.TAG_ID.CAPTION, html_js_1.TAG_ID.COL, html_js_1.TAG_ID.COLGROUP, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TD, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.TH, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]);
  
        function startTagInCaption(e, t) {
            const n = t.tagID;
            TABLE_VOID_ELEMENTS.has(n) ? e.openElements.hasInTableScope(html_js_1.TAG_ID.CAPTION) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.CAPTION), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = InsertionMode.IN_TABLE, startTagInTable(e, t)) : startTagInBody(e, t)
        }
  
        function endTagInCaption(e, t) {
            const n = t.tagID;
            switch (n) {
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.TABLE:
                    e.openElements.hasInTableScope(html_js_1.TAG_ID.CAPTION) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.CAPTION), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = InsertionMode.IN_TABLE, n === html_js_1.TAG_ID.TABLE && endTagInTable(e, t));
                    break;
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.HTML:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.THEAD:
                case html_js_1.TAG_ID.TR:
                    break;
                default:
                    endTagInBody(e, t)
            }
        }
  
        function startTagInColumnGroup(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.COL:
                    e._appendElement(t, html_js_1.NS.HTML), t.ackSelfClosing = !0;
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    startTagInHead(e, t);
                    break;
                default:
                    tokenInColumnGroup(e, t)
            }
        }
  
        function endTagInColumnGroup(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.COLGROUP:
                    e.openElements.currentTagId === html_js_1.TAG_ID.COLGROUP && (e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE);
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    templateEndTagInHead(e, t);
                    break;
                case html_js_1.TAG_ID.COL:
                    break;
                default:
                    tokenInColumnGroup(e, t)
            }
        }
  
        function tokenInColumnGroup(e, t) {
            e.openElements.currentTagId === html_js_1.TAG_ID.COLGROUP && (e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE, e._processToken(t))
        }
  
        function startTagInTableBody(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.TR:
                    e.openElements.clearBackToTableBodyContext(), e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_ROW;
                    break;
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.TD:
                    e.openElements.clearBackToTableBodyContext(), e._insertFakeElement(html_js_1.TAG_NAMES.TR, html_js_1.TAG_ID.TR), e.insertionMode = InsertionMode.IN_ROW, startTagInRow(e, t);
                    break;
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                    e.openElements.hasTableBodyContextInTableScope() && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE, startTagInTable(e, t));
                    break;
                default:
                    startTagInTable(e, t)
            }
        }
  
        function endTagInTableBody(e, t) {
            const n = t.tagID;
            switch (t.tagID) {
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                    e.openElements.hasInTableScope(n) && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE);
                    break;
                case html_js_1.TAG_ID.TABLE:
                    e.openElements.hasTableBodyContextInTableScope() && (e.openElements.clearBackToTableBodyContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE, endTagInTable(e, t));
                    break;
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.HTML:
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.TR:
                    break;
                default:
                    endTagInTable(e, t)
            }
        }
  
        function startTagInRow(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.TH:
                case html_js_1.TAG_ID.TD:
                    e.openElements.clearBackToTableRowContext(), e._insertElement(t, html_js_1.NS.HTML), e.insertionMode = InsertionMode.IN_CELL, e.activeFormattingElements.insertMarker();
                    break;
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                case html_js_1.TAG_ID.TR:
                    e.openElements.hasInTableScope(html_js_1.TAG_ID.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE_BODY, startTagInTableBody(e, t));
                    break;
                default:
                    startTagInTable(e, t)
            }
        }
  
        function endTagInRow(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.TR:
                    e.openElements.hasInTableScope(html_js_1.TAG_ID.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE_BODY);
                    break;
                case html_js_1.TAG_ID.TABLE:
                    e.openElements.hasInTableScope(html_js_1.TAG_ID.TR) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE_BODY, endTagInTableBody(e, t));
                    break;
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                    (e.openElements.hasInTableScope(t.tagID) || e.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) && (e.openElements.clearBackToTableRowContext(), e.openElements.pop(), e.insertionMode = InsertionMode.IN_TABLE_BODY, endTagInTableBody(e, t));
                    break;
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.HTML:
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TH:
                    break;
                default:
                    endTagInTable(e, t)
            }
        }
  
        function startTagInCell(e, t) {
            const n = t.tagID;
            TABLE_VOID_ELEMENTS.has(n) ? (e.openElements.hasInTableScope(html_js_1.TAG_ID.TD) || e.openElements.hasInTableScope(html_js_1.TAG_ID.TH)) && (e._closeTableCell(), startTagInRow(e, t)) : startTagInBody(e, t)
        }
  
        function endTagInCell(e, t) {
            const n = t.tagID;
            switch (n) {
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TH:
                    e.openElements.hasInTableScope(n) && (e.openElements.generateImpliedEndTags(), e.openElements.popUntilTagNamePopped(n), e.activeFormattingElements.clearToLastMarker(), e.insertionMode = InsertionMode.IN_ROW);
                    break;
                case html_js_1.TAG_ID.TABLE:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                case html_js_1.TAG_ID.TR:
                    e.openElements.hasInTableScope(n) && (e._closeTableCell(), endTagInRow(e, t));
                    break;
                case html_js_1.TAG_ID.BODY:
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COL:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.HTML:
                    break;
                default:
                    endTagInBody(e, t)
            }
        }
  
        function startTagInSelect(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.OPTION:
                    e.openElements.currentTagId === html_js_1.TAG_ID.OPTION && e.openElements.pop(), e._insertElement(t, html_js_1.NS.HTML);
                    break;
                case html_js_1.TAG_ID.OPTGROUP:
                    e.openElements.currentTagId === html_js_1.TAG_ID.OPTION && e.openElements.pop(), e.openElements.currentTagId === html_js_1.TAG_ID.OPTGROUP && e.openElements.pop(), e._insertElement(t, html_js_1.NS.HTML);
                    break;
                case html_js_1.TAG_ID.INPUT:
                case html_js_1.TAG_ID.KEYGEN:
                case html_js_1.TAG_ID.TEXTAREA:
                case html_js_1.TAG_ID.SELECT:
                    e.openElements.hasInSelectScope(html_js_1.TAG_ID.SELECT) && (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT), e._resetInsertionMode(), t.tagID !== html_js_1.TAG_ID.SELECT && e._processStartTag(t));
                    break;
                case html_js_1.TAG_ID.SCRIPT:
                case html_js_1.TAG_ID.TEMPLATE:
                    startTagInHead(e, t)
            }
        }
  
        function endTagInSelect(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.OPTGROUP:
                    e.openElements.stackTop > 0 && e.openElements.currentTagId === html_js_1.TAG_ID.OPTION && e.openElements.tagIDs[e.openElements.stackTop - 1] === html_js_1.TAG_ID.OPTGROUP && e.openElements.pop(), e.openElements.currentTagId === html_js_1.TAG_ID.OPTGROUP && e.openElements.pop();
                    break;
                case html_js_1.TAG_ID.OPTION:
                    e.openElements.currentTagId === html_js_1.TAG_ID.OPTION && e.openElements.pop();
                    break;
                case html_js_1.TAG_ID.SELECT:
                    e.openElements.hasInSelectScope(html_js_1.TAG_ID.SELECT) && (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT), e._resetInsertionMode());
                    break;
                case html_js_1.TAG_ID.TEMPLATE:
                    templateEndTagInHead(e, t)
            }
        }
  
        function startTagInSelectInTable(e, t) {
            const n = t.tagID;
            n === html_js_1.TAG_ID.CAPTION || n === html_js_1.TAG_ID.TABLE || n === html_js_1.TAG_ID.TBODY || n === html_js_1.TAG_ID.TFOOT || n === html_js_1.TAG_ID.THEAD || n === html_js_1.TAG_ID.TR || n === html_js_1.TAG_ID.TD || n === html_js_1.TAG_ID.TH ? (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT), e._resetInsertionMode(), e._processStartTag(t)) : startTagInSelect(e, t)
        }
  
        function endTagInSelectInTable(e, t) {
            const n = t.tagID;
            n === html_js_1.TAG_ID.CAPTION || n === html_js_1.TAG_ID.TABLE || n === html_js_1.TAG_ID.TBODY || n === html_js_1.TAG_ID.TFOOT || n === html_js_1.TAG_ID.THEAD || n === html_js_1.TAG_ID.TR || n === html_js_1.TAG_ID.TD || n === html_js_1.TAG_ID.TH ? e.openElements.hasInTableScope(n) && (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT), e._resetInsertionMode(), e.onEndTag(t)) : endTagInSelect(e, t)
        }
  
        function startTagInTemplate(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.BASE:
                case html_js_1.TAG_ID.BASEFONT:
                case html_js_1.TAG_ID.BGSOUND:
                case html_js_1.TAG_ID.LINK:
                case html_js_1.TAG_ID.META:
                case html_js_1.TAG_ID.NOFRAMES:
                case html_js_1.TAG_ID.SCRIPT:
                case html_js_1.TAG_ID.STYLE:
                case html_js_1.TAG_ID.TEMPLATE:
                case html_js_1.TAG_ID.TITLE:
                    startTagInHead(e, t);
                    break;
                case html_js_1.TAG_ID.CAPTION:
                case html_js_1.TAG_ID.COLGROUP:
                case html_js_1.TAG_ID.TBODY:
                case html_js_1.TAG_ID.TFOOT:
                case html_js_1.TAG_ID.THEAD:
                    e.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE, e.insertionMode = InsertionMode.IN_TABLE, startTagInTable(e, t);
                    break;
                case html_js_1.TAG_ID.COL:
                    e.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP, e.insertionMode = InsertionMode.IN_COLUMN_GROUP, startTagInColumnGroup(e, t);
                    break;
                case html_js_1.TAG_ID.TR:
                    e.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY, e.insertionMode = InsertionMode.IN_TABLE_BODY, startTagInTableBody(e, t);
                    break;
                case html_js_1.TAG_ID.TD:
                case html_js_1.TAG_ID.TH:
                    e.tmplInsertionModeStack[0] = InsertionMode.IN_ROW, e.insertionMode = InsertionMode.IN_ROW, startTagInRow(e, t);
                    break;
                default:
                    e.tmplInsertionModeStack[0] = InsertionMode.IN_BODY, e.insertionMode = InsertionMode.IN_BODY, startTagInBody(e, t)
            }
        }
  
        function endTagInTemplate(e, t) {
            t.tagID === html_js_1.TAG_ID.TEMPLATE && templateEndTagInHead(e, t)
        }
  
        function eofInTemplate(e, t) {
            e.openElements.tmplCount > 0 ? (e.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TEMPLATE), e.activeFormattingElements.clearToLastMarker(), e.tmplInsertionModeStack.shift(), e._resetInsertionMode(), e.onEof(t)) : stopParsing(e, t)
        }
  
        function startTagAfterBody(e, t) {
            t.tagID === html_js_1.TAG_ID.HTML ? startTagInBody(e, t) : tokenAfterBody(e, t)
        }
  
        function endTagAfterBody(e, t) {
            var n;
            if (t.tagID === html_js_1.TAG_ID.HTML) {
                if (e.fragmentContext || (e.insertionMode = InsertionMode.AFTER_AFTER_BODY), e.options.sourceCodeLocationInfo && e.openElements.tagIDs[0] === html_js_1.TAG_ID.HTML) {
                    e._setEndLocation(e.openElements.items[0], t);
                    const s = e.openElements.items[1];
                    s && !(null === (n = e.treeAdapter.getNodeSourceCodeLocation(s)) || void 0 === n ? void 0 : n.endTag) && e._setEndLocation(s, t)
                }
            } else tokenAfterBody(e, t)
        }
  
        function tokenAfterBody(e, t) {
            e.insertionMode = InsertionMode.IN_BODY, modeInBody(e, t)
        }
  
        function startTagInFrameset(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.FRAMESET:
                    e._insertElement(t, html_js_1.NS.HTML);
                    break;
                case html_js_1.TAG_ID.FRAME:
                    e._appendElement(t, html_js_1.NS.HTML), t.ackSelfClosing = !0;
                    break;
                case html_js_1.TAG_ID.NOFRAMES:
                    startTagInHead(e, t)
            }
        }
  
        function endTagInFrameset(e, t) {
            t.tagID !== html_js_1.TAG_ID.FRAMESET || e.openElements.isRootHtmlElementCurrent() || (e.openElements.pop(), e.fragmentContext || e.openElements.currentTagId === html_js_1.TAG_ID.FRAMESET || (e.insertionMode = InsertionMode.AFTER_FRAMESET))
        }
  
        function startTagAfterFrameset(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.NOFRAMES:
                    startTagInHead(e, t)
            }
        }
  
        function endTagAfterFrameset(e, t) {
            t.tagID === html_js_1.TAG_ID.HTML && (e.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET)
        }
  
        function startTagAfterAfterBody(e, t) {
            t.tagID === html_js_1.TAG_ID.HTML ? startTagInBody(e, t) : tokenAfterAfterBody(e, t)
        }
  
        function tokenAfterAfterBody(e, t) {
            e.insertionMode = InsertionMode.IN_BODY, modeInBody(e, t)
        }
  
        function startTagAfterAfterFrameset(e, t) {
            switch (t.tagID) {
                case html_js_1.TAG_ID.HTML:
                    startTagInBody(e, t);
                    break;
                case html_js_1.TAG_ID.NOFRAMES:
                    startTagInHead(e, t)
            }
        }
  
        function nullCharacterInForeignContent(e, t) {
            t.chars = unicode.REPLACEMENT_CHARACTER, e._insertCharacters(t)
        }
  
        function characterInForeignContent(e, t) {
            e._insertCharacters(t), e.framesetOk = !1
        }
  
        function popUntilHtmlOrIntegrationPoint(e) {
            for (; e.treeAdapter.getNamespaceURI(e.openElements.current) !== html_js_1.NS.HTML && !e._isIntegrationPoint(e.openElements.currentTagId, e.openElements.current);) e.openElements.pop()
        }
  
        function startTagInForeignContent(e, t) {
            if (foreignContent.causesExit(t)) popUntilHtmlOrIntegrationPoint(e), e._startTagOutsideForeignContent(t);
            else {
                const n = e._getAdjustedCurrentElement(),
                    s = e.treeAdapter.getNamespaceURI(n);
                s === html_js_1.NS.MATHML ? foreignContent.adjustTokenMathMLAttrs(t) : s === html_js_1.NS.SVG && (foreignContent.adjustTokenSVGTagName(t), foreignContent.adjustTokenSVGAttrs(t)), foreignContent.adjustTokenXMLAttrs(t), t.selfClosing ? e._appendElement(t, s) : e._insertElement(t, s), t.ackSelfClosing = !0
            }
        }
  
        function endTagInForeignContent(e, t) {
            if (t.tagID === html_js_1.TAG_ID.P || t.tagID === html_js_1.TAG_ID.BR) return popUntilHtmlOrIntegrationPoint(e), void e._endTagOutsideForeignContent(t);
            for (let n = e.openElements.stackTop; n > 0; n--) {
                const s = e.openElements.items[n];
                if (e.treeAdapter.getNamespaceURI(s) === html_js_1.NS.HTML) {
                    e._endTagOutsideForeignContent(t);
                    break
                }
                const o = e.treeAdapter.getTagName(s);
                if (o.toLowerCase() === t.tagName) {
                    t.tagName = o, e.openElements.shortenToLength(n);
                    break
                }
            }
        }
  
    }, {
        "../common/doctype.js": 64,
        "../common/error-codes.js": 65,
        "../common/foreign-content.js": 66,
        "../common/html.js": 67,
        "../common/token.js": 68,
        "../common/unicode.js": 69,
        "../tokenizer/index.js": 75,
        "../tree-adapters/default.js": 77,
        "./formatting-element-list.js": 71,
        "./open-element-stack.js": 73
    }],
    73: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.OpenElementStack = void 0;
        const html_js_1 = require("../common/html.js"),
            IMPLICIT_END_TAG_REQUIRED = new Set([html_js_1.TAG_ID.DD, html_js_1.TAG_ID.DT, html_js_1.TAG_ID.LI, html_js_1.TAG_ID.OPTGROUP, html_js_1.TAG_ID.OPTION, html_js_1.TAG_ID.P, html_js_1.TAG_ID.RB, html_js_1.TAG_ID.RP, html_js_1.TAG_ID.RT, html_js_1.TAG_ID.RTC]),
            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([...IMPLICIT_END_TAG_REQUIRED, html_js_1.TAG_ID.CAPTION, html_js_1.TAG_ID.COLGROUP, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TD, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.TH, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]),
            SCOPING_ELEMENT_NS = new Map([
                [html_js_1.TAG_ID.APPLET, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.CAPTION, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.HTML, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.MARQUEE, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.OBJECT, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.TABLE, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.TD, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.TEMPLATE, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.TH, html_js_1.NS.HTML],
                [html_js_1.TAG_ID.ANNOTATION_XML, html_js_1.NS.MATHML],
                [html_js_1.TAG_ID.MI, html_js_1.NS.MATHML],
                [html_js_1.TAG_ID.MN, html_js_1.NS.MATHML],
                [html_js_1.TAG_ID.MO, html_js_1.NS.MATHML],
                [html_js_1.TAG_ID.MS, html_js_1.NS.MATHML],
                [html_js_1.TAG_ID.MTEXT, html_js_1.NS.MATHML],
                [html_js_1.TAG_ID.DESC, html_js_1.NS.SVG],
                [html_js_1.TAG_ID.FOREIGN_OBJECT, html_js_1.NS.SVG],
                [html_js_1.TAG_ID.TITLE, html_js_1.NS.SVG]
            ]),
            NAMED_HEADERS = [html_js_1.TAG_ID.H1, html_js_1.TAG_ID.H2, html_js_1.TAG_ID.H3, html_js_1.TAG_ID.H4, html_js_1.TAG_ID.H5, html_js_1.TAG_ID.H6],
            TABLE_ROW_CONTEXT = [html_js_1.TAG_ID.TR, html_js_1.TAG_ID.TEMPLATE, html_js_1.TAG_ID.HTML],
            TABLE_BODY_CONTEXT = [html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TEMPLATE, html_js_1.TAG_ID.HTML],
            TABLE_CONTEXT = [html_js_1.TAG_ID.TABLE, html_js_1.TAG_ID.TEMPLATE, html_js_1.TAG_ID.HTML],
            TABLE_CELLS = [html_js_1.TAG_ID.TD, html_js_1.TAG_ID.TH];
        class OpenElementStack {
            get currentTmplContentOrNode() {
                return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current
            }
            constructor(t, s, _) {
                this.treeAdapter = s, this.handler = _, this.items = [], this.tagIDs = [], this.stackTop = -1, this.tmplCount = 0, this.currentTagId = html_js_1.TAG_ID.UNKNOWN, this.current = t
            }
            _indexOf(t) {
                return this.items.lastIndexOf(t, this.stackTop)
            }
            _isInTemplate() {
                return this.currentTagId === html_js_1.TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === html_js_1.NS.HTML
            }
            _updateCurrentElement() {
                this.current = this.items[this.stackTop], this.currentTagId = this.tagIDs[this.stackTop]
            }
            push(t, s) {
                this.stackTop++, this.items[this.stackTop] = t, this.current = t, this.tagIDs[this.stackTop] = s, this.currentTagId = s, this._isInTemplate() && this.tmplCount++, this.handler.onItemPush(t, s, !0)
            }
            pop() {
                const t = this.current;
                this.tmplCount > 0 && this._isInTemplate() && this.tmplCount--, this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t, !0)
            }
            replace(t, s) {
                const _ = this._indexOf(t);
                this.items[_] = s, _ === this.stackTop && (this.current = s)
            }
            insertAfter(t, s, _) {
                const e = this._indexOf(t) + 1;
                this.items.splice(e, 0, s), this.tagIDs.splice(e, 0, _), this.stackTop++, e === this.stackTop && this._updateCurrentElement(), this.handler.onItemPush(this.current, this.currentTagId, e === this.stackTop)
            }
            popUntilTagNamePopped(t) {
                let s = this.stackTop + 1;
                do {
                    s = this.tagIDs.lastIndexOf(t, s - 1)
                } while (s > 0 && this.treeAdapter.getNamespaceURI(this.items[s]) !== html_js_1.NS.HTML);
                this.shortenToLength(s < 0 ? 0 : s)
            }
            shortenToLength(t) {
                for (; this.stackTop >= t;) {
                    const s = this.current;
                    this.tmplCount > 0 && this._isInTemplate() && (this.tmplCount -= 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(s, this.stackTop < t)
                }
            }
            popUntilElementPopped(t) {
                const s = this._indexOf(t);
                this.shortenToLength(s < 0 ? 0 : s)
            }
            popUntilPopped(t, s) {
                const _ = this._indexOfTagNames(t, s);
                this.shortenToLength(_ < 0 ? 0 : _)
            }
            popUntilNumberedHeaderPopped() {
                this.popUntilPopped(NAMED_HEADERS, html_js_1.NS.HTML)
            }
            popUntilTableCellPopped() {
                this.popUntilPopped(TABLE_CELLS, html_js_1.NS.HTML)
            }
            popAllUpToHtmlElement() {
                this.tmplCount = 0, this.shortenToLength(1)
            }
            _indexOfTagNames(t, s) {
                for (let _ = this.stackTop; _ >= 0; _--)
                    if (t.includes(this.tagIDs[_]) && this.treeAdapter.getNamespaceURI(this.items[_]) === s) return _;
                return -1
            }
            clearBackTo(t, s) {
                const _ = this._indexOfTagNames(t, s);
                this.shortenToLength(_ + 1)
            }
            clearBackToTableContext() {
                this.clearBackTo(TABLE_CONTEXT, html_js_1.NS.HTML)
            }
            clearBackToTableBodyContext() {
                this.clearBackTo(TABLE_BODY_CONTEXT, html_js_1.NS.HTML)
            }
            clearBackToTableRowContext() {
                this.clearBackTo(TABLE_ROW_CONTEXT, html_js_1.NS.HTML)
            }
            remove(t) {
                const s = this._indexOf(t);
                s >= 0 && (s === this.stackTop ? this.pop() : (this.items.splice(s, 1), this.tagIDs.splice(s, 1), this.stackTop--, this._updateCurrentElement(), this.handler.onItemPop(t, !1)))
            }
            tryPeekProperlyNestedBodyElement() {
                return this.stackTop >= 1 && this.tagIDs[1] === html_js_1.TAG_ID.BODY ? this.items[1] : null
            }
            contains(t) {
                return this._indexOf(t) > -1
            }
            getCommonAncestor(t) {
                const s = this._indexOf(t) - 1;
                return s >= 0 ? this.items[s] : null
            }
            isRootHtmlElementCurrent() {
                return 0 === this.stackTop && this.tagIDs[0] === html_js_1.TAG_ID.HTML
            }
            hasInScope(t) {
                for (let s = this.stackTop; s >= 0; s--) {
                    const _ = this.tagIDs[s],
                        e = this.treeAdapter.getNamespaceURI(this.items[s]);
                    if (_ === t && e === html_js_1.NS.HTML) return !0;
                    if (SCOPING_ELEMENT_NS.get(_) === e) return !1
                }
                return !0
            }
            hasNumberedHeaderInScope() {
                for (let t = this.stackTop; t >= 0; t--) {
                    const s = this.tagIDs[t],
                        _ = this.treeAdapter.getNamespaceURI(this.items[t]);
                    if ((0, html_js_1.isNumberedHeader)(s) && _ === html_js_1.NS.HTML) return !0;
                    if (SCOPING_ELEMENT_NS.get(s) === _) return !1
                }
                return !0
            }
            hasInListItemScope(t) {
                for (let s = this.stackTop; s >= 0; s--) {
                    const _ = this.tagIDs[s],
                        e = this.treeAdapter.getNamespaceURI(this.items[s]);
                    if (_ === t && e === html_js_1.NS.HTML) return !0;
                    if ((_ === html_js_1.TAG_ID.UL || _ === html_js_1.TAG_ID.OL) && e === html_js_1.NS.HTML || SCOPING_ELEMENT_NS.get(_) === e) return !1
                }
                return !0
            }
            hasInButtonScope(t) {
                for (let s = this.stackTop; s >= 0; s--) {
                    const _ = this.tagIDs[s],
                        e = this.treeAdapter.getNamespaceURI(this.items[s]);
                    if (_ === t && e === html_js_1.NS.HTML) return !0;
                    if (_ === html_js_1.TAG_ID.BUTTON && e === html_js_1.NS.HTML || SCOPING_ELEMENT_NS.get(_) === e) return !1
                }
                return !0
            }
            hasInTableScope(t) {
                for (let s = this.stackTop; s >= 0; s--) {
                    const _ = this.tagIDs[s];
                    if (this.treeAdapter.getNamespaceURI(this.items[s]) === html_js_1.NS.HTML) {
                        if (_ === t) return !0;
                        if (_ === html_js_1.TAG_ID.TABLE || _ === html_js_1.TAG_ID.TEMPLATE || _ === html_js_1.TAG_ID.HTML) return !1
                    }
                }
                return !0
            }
            hasTableBodyContextInTableScope() {
                for (let t = this.stackTop; t >= 0; t--) {
                    const s = this.tagIDs[t];
                    if (this.treeAdapter.getNamespaceURI(this.items[t]) === html_js_1.NS.HTML) {
                        if (s === html_js_1.TAG_ID.TBODY || s === html_js_1.TAG_ID.THEAD || s === html_js_1.TAG_ID.TFOOT) return !0;
                        if (s === html_js_1.TAG_ID.TABLE || s === html_js_1.TAG_ID.HTML) return !1
                    }
                }
                return !0
            }
            hasInSelectScope(t) {
                for (let s = this.stackTop; s >= 0; s--) {
                    const _ = this.tagIDs[s];
                    if (this.treeAdapter.getNamespaceURI(this.items[s]) === html_js_1.NS.HTML) {
                        if (_ === t) return !0;
                        if (_ !== html_js_1.TAG_ID.OPTION && _ !== html_js_1.TAG_ID.OPTGROUP) return !1
                    }
                }
                return !0
            }
            generateImpliedEndTags() {
                for (; IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId);) this.pop()
            }
            generateImpliedEndTagsThoroughly() {
                for (; IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId);) this.pop()
            }
            generateImpliedEndTagsWithExclusion(t) {
                for (; this.currentTagId !== t && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId);) this.pop()
            }
        }
        exports.OpenElementStack = OpenElementStack;
  
    }, {
        "../common/html.js": 67
    }],
    74: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.serializeOuter = exports.serialize = void 0;
        const html_js_1 = require("../common/html.js"),
            escape_js_1 = require("entities/lib/escape.js"),
            default_js_1 = require("../tree-adapters/default.js"),
            VOID_ELEMENTS = new Set([html_js_1.TAG_NAMES.AREA, html_js_1.TAG_NAMES.BASE, html_js_1.TAG_NAMES.BASEFONT, html_js_1.TAG_NAMES.BGSOUND, html_js_1.TAG_NAMES.BR, html_js_1.TAG_NAMES.COL, html_js_1.TAG_NAMES.EMBED, html_js_1.TAG_NAMES.FRAME, html_js_1.TAG_NAMES.HR, html_js_1.TAG_NAMES.IMG, html_js_1.TAG_NAMES.INPUT, html_js_1.TAG_NAMES.KEYGEN, html_js_1.TAG_NAMES.LINK, html_js_1.TAG_NAMES.META, html_js_1.TAG_NAMES.PARAM, html_js_1.TAG_NAMES.SOURCE, html_js_1.TAG_NAMES.TRACK, html_js_1.TAG_NAMES.WBR]);
  
        function isVoidElement(e, t) {
            return t.treeAdapter.isElementNode(e) && t.treeAdapter.getNamespaceURI(e) === html_js_1.NS.HTML && VOID_ELEMENTS.has(t.treeAdapter.getTagName(e))
        }
        const defaultOpts = {
            treeAdapter: default_js_1.defaultTreeAdapter,
            scriptingEnabled: !0
        };
  
        function serialize(e, t) {
            const s = Object.assign(Object.assign({}, defaultOpts), t);
            return isVoidElement(e, s) ? "" : serializeChildNodes(e, s)
        }
  
        function serializeOuter(e, t) {
            return serializeNode(e, Object.assign(Object.assign({}, defaultOpts), t))
        }
  
        function serializeChildNodes(e, t) {
            let s = "";
            const r = t.treeAdapter.isElementNode(e) && t.treeAdapter.getTagName(e) === html_js_1.TAG_NAMES.TEMPLATE && t.treeAdapter.getNamespaceURI(e) === html_js_1.NS.HTML ? t.treeAdapter.getTemplateContent(e) : e,
                a = t.treeAdapter.getChildNodes(r);
            if (a)
                for (const e of a) s += serializeNode(e, t);
            return s
        }
  
        function serializeNode(e, t) {
            return t.treeAdapter.isElementNode(e) ? serializeElement(e, t) : t.treeAdapter.isTextNode(e) ? serializeTextNode(e, t) : t.treeAdapter.isCommentNode(e) ? serializeCommentNode(e, t) : t.treeAdapter.isDocumentTypeNode(e) ? serializeDocumentTypeNode(e, t) : ""
        }
  
        function serializeElement(e, t) {
            const s = t.treeAdapter.getTagName(e);
            return `<${s}${serializeAttributes(e, t)}>${isVoidElement(e, t) ? "" : `${serializeChildNodes(e, t)}</${s}>`}`
        }
  
        function serializeAttributes(e, {
            treeAdapter: t
        }) {
            let s = "";
            for (const r of t.getAttrList(e)) {
                if (s += " ", r.namespace) switch (r.namespace) {
                    case html_js_1.NS.XML:
                        s += `xml:${r.name}`;
                        break;
                    case html_js_1.NS.XMLNS:
                        "xmlns" !== r.name && (s += "xmlns:"), s += r.name;
                        break;
                    case html_js_1.NS.XLINK:
                        s += `xlink:${r.name}`;
                        break;
                    default:
                        s += `${r.prefix}:${r.name}`
                } else s += r.name;
                s += `="${(0, escape_js_1.escapeAttribute)(r.value)}"`
            }
            return s
        }
  
        function serializeTextNode(e, t) {
            const {
                treeAdapter: s
            } = t, r = s.getTextNodeContent(e), a = s.getParentNode(e), i = a && s.isElementNode(a) && s.getTagName(a);
            return i && s.getNamespaceURI(a) === html_js_1.NS.HTML && (0, html_js_1.hasUnescapedText)(i, t.scriptingEnabled) ? r : (0, escape_js_1.escapeText)(r)
        }
  
        function serializeCommentNode(e, {
            treeAdapter: t
        }) {
            return `\x3c!--${t.getCommentNodeContent(e)}--\x3e`
        }
  
        function serializeDocumentTypeNode(e, {
            treeAdapter: t
        }) {
            return `<!DOCTYPE ${t.getDocumentTypeNodeName(e)}>`
        }
        exports.serialize = serialize, exports.serializeOuter = serializeOuter;
  
    }, {
        "../common/html.js": 67,
        "../tree-adapters/default.js": 77,
        "entities/lib/escape.js": 50
    }],
    75: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.Tokenizer = exports.TokenizerMode = void 0;
        const preprocessor_js_1 = require("./preprocessor.js"),
            unicode_js_1 = require("../common/unicode.js"),
            token_js_1 = require("../common/token.js"),
            decode_js_1 = require("entities/lib/decode.js"),
            error_codes_js_1 = require("../common/error-codes.js"),
            html_js_1 = require("../common/html.js"),
            C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([
                [128, 8364],
                [130, 8218],
                [131, 402],
                [132, 8222],
                [133, 8230],
                [134, 8224],
                [135, 8225],
                [136, 710],
                [137, 8240],
                [138, 352],
                [139, 8249],
                [140, 338],
                [142, 381],
                [145, 8216],
                [146, 8217],
                [147, 8220],
                [148, 8221],
                [149, 8226],
                [150, 8211],
                [151, 8212],
                [152, 732],
                [153, 8482],
                [154, 353],
                [155, 8250],
                [156, 339],
                [158, 382],
                [159, 376]
            ]);
        var State;
  
        function isAsciiDigit(e) {
            return e >= unicode_js_1.CODE_POINTS.DIGIT_0 && e <= unicode_js_1.CODE_POINTS.DIGIT_9
        }
  
        function isAsciiUpper(e) {
            return e >= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_A && e <= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_Z
        }
  
        function isAsciiLower(e) {
            return e >= unicode_js_1.CODE_POINTS.LATIN_SMALL_A && e <= unicode_js_1.CODE_POINTS.LATIN_SMALL_Z
        }
  
        function isAsciiLetter(e) {
            return isAsciiLower(e) || isAsciiUpper(e)
        }
  
        function isAsciiAlphaNumeric(e) {
            return isAsciiLetter(e) || isAsciiDigit(e)
        }
  
        function isAsciiUpperHexDigit(e) {
            return e >= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_A && e <= unicode_js_1.CODE_POINTS.LATIN_CAPITAL_F
        }
  
        function isAsciiLowerHexDigit(e) {
            return e >= unicode_js_1.CODE_POINTS.LATIN_SMALL_A && e <= unicode_js_1.CODE_POINTS.LATIN_SMALL_F
        }
  
        function isAsciiHexDigit(e) {
            return isAsciiDigit(e) || isAsciiUpperHexDigit(e) || isAsciiLowerHexDigit(e)
        }
  
        function toAsciiLower(e) {
            return e + 32
        }
  
        function isWhitespace(e) {
            return e === unicode_js_1.CODE_POINTS.SPACE || e === unicode_js_1.CODE_POINTS.LINE_FEED || e === unicode_js_1.CODE_POINTS.TABULATION || e === unicode_js_1.CODE_POINTS.FORM_FEED
        }
  
        function isEntityInAttributeInvalidEnd(e) {
            return e === unicode_js_1.CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric(e)
        }
  
        function isScriptDataDoubleEscapeSequenceEnd(e) {
            return isWhitespace(e) || e === unicode_js_1.CODE_POINTS.SOLIDUS || e === unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN
        } ! function (e) {
            e[e.DATA = 0] = "DATA", e[e.RCDATA = 1] = "RCDATA", e[e.RAWTEXT = 2] = "RAWTEXT", e[e.SCRIPT_DATA = 3] = "SCRIPT_DATA", e[e.PLAINTEXT = 4] = "PLAINTEXT", e[e.TAG_OPEN = 5] = "TAG_OPEN", e[e.END_TAG_OPEN = 6] = "END_TAG_OPEN", e[e.TAG_NAME = 7] = "TAG_NAME", e[e.RCDATA_LESS_THAN_SIGN = 8] = "RCDATA_LESS_THAN_SIGN", e[e.RCDATA_END_TAG_OPEN = 9] = "RCDATA_END_TAG_OPEN", e[e.RCDATA_END_TAG_NAME = 10] = "RCDATA_END_TAG_NAME", e[e.RAWTEXT_LESS_THAN_SIGN = 11] = "RAWTEXT_LESS_THAN_SIGN", e[e.RAWTEXT_END_TAG_OPEN = 12] = "RAWTEXT_END_TAG_OPEN", e[e.RAWTEXT_END_TAG_NAME = 13] = "RAWTEXT_END_TAG_NAME", e[e.SCRIPT_DATA_LESS_THAN_SIGN = 14] = "SCRIPT_DATA_LESS_THAN_SIGN", e[e.SCRIPT_DATA_END_TAG_OPEN = 15] = "SCRIPT_DATA_END_TAG_OPEN", e[e.SCRIPT_DATA_END_TAG_NAME = 16] = "SCRIPT_DATA_END_TAG_NAME", e[e.SCRIPT_DATA_ESCAPE_START = 17] = "SCRIPT_DATA_ESCAPE_START", e[e.SCRIPT_DATA_ESCAPE_START_DASH = 18] = "SCRIPT_DATA_ESCAPE_START_DASH", e[e.SCRIPT_DATA_ESCAPED = 19] = "SCRIPT_DATA_ESCAPED", e[e.SCRIPT_DATA_ESCAPED_DASH = 20] = "SCRIPT_DATA_ESCAPED_DASH", e[e.SCRIPT_DATA_ESCAPED_DASH_DASH = 21] = "SCRIPT_DATA_ESCAPED_DASH_DASH", e[e.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN = 22] = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN", e[e.SCRIPT_DATA_ESCAPED_END_TAG_OPEN = 23] = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN", e[e.SCRIPT_DATA_ESCAPED_END_TAG_NAME = 24] = "SCRIPT_DATA_ESCAPED_END_TAG_NAME", e[e.SCRIPT_DATA_DOUBLE_ESCAPE_START = 25] = "SCRIPT_DATA_DOUBLE_ESCAPE_START", e[e.SCRIPT_DATA_DOUBLE_ESCAPED = 26] = "SCRIPT_DATA_DOUBLE_ESCAPED", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH = 27] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH = 28] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH", e[e.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN = 29] = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN", e[e.SCRIPT_DATA_DOUBLE_ESCAPE_END = 30] = "SCRIPT_DATA_DOUBLE_ESCAPE_END", e[e.BEFORE_ATTRIBUTE_NAME = 31] = "BEFORE_ATTRIBUTE_NAME", e[e.ATTRIBUTE_NAME = 32] = "ATTRIBUTE_NAME", e[e.AFTER_ATTRIBUTE_NAME = 33] = "AFTER_ATTRIBUTE_NAME", e[e.BEFORE_ATTRIBUTE_VALUE = 34] = "BEFORE_ATTRIBUTE_VALUE", e[e.ATTRIBUTE_VALUE_DOUBLE_QUOTED = 35] = "ATTRIBUTE_VALUE_DOUBLE_QUOTED", e[e.ATTRIBUTE_VALUE_SINGLE_QUOTED = 36] = "ATTRIBUTE_VALUE_SINGLE_QUOTED", e[e.ATTRIBUTE_VALUE_UNQUOTED = 37] = "ATTRIBUTE_VALUE_UNQUOTED", e[e.AFTER_ATTRIBUTE_VALUE_QUOTED = 38] = "AFTER_ATTRIBUTE_VALUE_QUOTED", e[e.SELF_CLOSING_START_TAG = 39] = "SELF_CLOSING_START_TAG", e[e.BOGUS_COMMENT = 40] = "BOGUS_COMMENT", e[e.MARKUP_DECLARATION_OPEN = 41] = "MARKUP_DECLARATION_OPEN", e[e.COMMENT_START = 42] = "COMMENT_START", e[e.COMMENT_START_DASH = 43] = "COMMENT_START_DASH", e[e.COMMENT = 44] = "COMMENT", e[e.COMMENT_LESS_THAN_SIGN = 45] = "COMMENT_LESS_THAN_SIGN", e[e.COMMENT_LESS_THAN_SIGN_BANG = 46] = "COMMENT_LESS_THAN_SIGN_BANG", e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH = 47] = "COMMENT_LESS_THAN_SIGN_BANG_DASH", e[e.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH = 48] = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH", e[e.COMMENT_END_DASH = 49] = "COMMENT_END_DASH", e[e.COMMENT_END = 50] = "COMMENT_END", e[e.COMMENT_END_BANG = 51] = "COMMENT_END_BANG", e[e.DOCTYPE = 52] = "DOCTYPE", e[e.BEFORE_DOCTYPE_NAME = 53] = "BEFORE_DOCTYPE_NAME", e[e.DOCTYPE_NAME = 54] = "DOCTYPE_NAME", e[e.AFTER_DOCTYPE_NAME = 55] = "AFTER_DOCTYPE_NAME", e[e.AFTER_DOCTYPE_PUBLIC_KEYWORD = 56] = "AFTER_DOCTYPE_PUBLIC_KEYWORD", e[e.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER = 57] = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER", e[e.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED = 58] = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED", e[e.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED = 59] = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED", e[e.AFTER_DOCTYPE_PUBLIC_IDENTIFIER = 60] = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER", e[e.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS = 61] = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS", e[e.AFTER_DOCTYPE_SYSTEM_KEYWORD = 62] = "AFTER_DOCTYPE_SYSTEM_KEYWORD", e[e.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER = 63] = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER", e[e.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED = 64] = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED", e[e.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED = 65] = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED", e[e.AFTER_DOCTYPE_SYSTEM_IDENTIFIER = 66] = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER", e[e.BOGUS_DOCTYPE = 67] = "BOGUS_DOCTYPE", e[e.CDATA_SECTION = 68] = "CDATA_SECTION", e[e.CDATA_SECTION_BRACKET = 69] = "CDATA_SECTION_BRACKET", e[e.CDATA_SECTION_END = 70] = "CDATA_SECTION_END", e[e.CHARACTER_REFERENCE = 71] = "CHARACTER_REFERENCE", e[e.NAMED_CHARACTER_REFERENCE = 72] = "NAMED_CHARACTER_REFERENCE", e[e.AMBIGUOUS_AMPERSAND = 73] = "AMBIGUOUS_AMPERSAND", e[e.NUMERIC_CHARACTER_REFERENCE = 74] = "NUMERIC_CHARACTER_REFERENCE", e[e.HEXADEMICAL_CHARACTER_REFERENCE_START = 75] = "HEXADEMICAL_CHARACTER_REFERENCE_START", e[e.HEXADEMICAL_CHARACTER_REFERENCE = 76] = "HEXADEMICAL_CHARACTER_REFERENCE", e[e.DECIMAL_CHARACTER_REFERENCE = 77] = "DECIMAL_CHARACTER_REFERENCE", e[e.NUMERIC_CHARACTER_REFERENCE_END = 78] = "NUMERIC_CHARACTER_REFERENCE_END"
        }(State || (State = {})), exports.TokenizerMode = {
            DATA: State.DATA,
            RCDATA: State.RCDATA,
            RAWTEXT: State.RAWTEXT,
            SCRIPT_DATA: State.SCRIPT_DATA,
            PLAINTEXT: State.PLAINTEXT,
            CDATA_SECTION: State.CDATA_SECTION
        };
        class Tokenizer {
            constructor(e, t) {
                this.options = e, this.handler = t, this.paused = !1, this.inLoop = !1, this.inForeignNode = !1, this.lastStartTagName = "", this.active = !1, this.state = State.DATA, this.returnState = State.DATA, this.charRefCode = -1, this.consumedAfterSnapshot = -1, this.currentCharacterToken = null, this.currentToken = null, this.currentAttr = {
                    name: "",
                    value: ""
                }, this.preprocessor = new preprocessor_js_1.Preprocessor(t), this.currentLocation = this.getCurrentLocation(-1)
            }
            _err(e) {
                var t, _;
                null === (_ = (t = this.handler).onParseError) || void 0 === _ || _.call(t, this.preprocessor.getError(e))
            }
            getCurrentLocation(e) {
                return this.options.sourceCodeLocationInfo ? {
                    startLine: this.preprocessor.line,
                    startCol: this.preprocessor.col - e,
                    startOffset: this.preprocessor.offset - e,
                    endLine: -1,
                    endCol: -1,
                    endOffset: -1
                } : null
            }
            _runParsingLoop() {
                if (!this.inLoop) {
                    for (this.inLoop = !0; this.active && !this.paused;) {
                        this.consumedAfterSnapshot = 0;
                        const e = this._consume();
                        this._ensureHibernation() || this._callState(e)
                    }
                    this.inLoop = !1
                }
            }
            pause() {
                this.paused = !0
            }
            resume(e) {
                if (!this.paused) throw new Error("Parser was already resumed");
                this.paused = !1, this.inLoop || (this._runParsingLoop(), this.paused || null == e || e())
            }
            write(e, t, _) {
                this.active = !0, this.preprocessor.write(e, t), this._runParsingLoop(), this.paused || null == _ || _()
            }
            insertHtmlAtCurrentPos(e) {
                this.active = !0, this.preprocessor.insertHtmlAtCurrentPos(e), this._runParsingLoop()
            }
            _ensureHibernation() {
                return !!this.preprocessor.endOfChunkHit && (this._unconsume(this.consumedAfterSnapshot), this.active = !1, !0)
            }
            _consume() {
                return this.consumedAfterSnapshot++, this.preprocessor.advance()
            }
            _unconsume(e) {
                this.consumedAfterSnapshot -= e, this.preprocessor.retreat(e)
            }
            _reconsumeInState(e, t) {
                this.state = e, this._callState(t)
            }
            _advanceBy(e) {
                this.consumedAfterSnapshot += e;
                for (let t = 0; t < e; t++) this.preprocessor.advance()
            }
            _consumeSequenceIfMatch(e, t) {
                return !!this.preprocessor.startsWith(e, t) && (this._advanceBy(e.length - 1), !0)
            }
            _createStartTagToken() {
                this.currentToken = {
                    type: token_js_1.TokenType.START_TAG,
                    tagName: "",
                    tagID: html_js_1.TAG_ID.UNKNOWN,
                    selfClosing: !1,
                    ackSelfClosing: !1,
                    attrs: [],
                    location: this.getCurrentLocation(1)
                }
            }
            _createEndTagToken() {
                this.currentToken = {
                    type: token_js_1.TokenType.END_TAG,
                    tagName: "",
                    tagID: html_js_1.TAG_ID.UNKNOWN,
                    selfClosing: !1,
                    ackSelfClosing: !1,
                    attrs: [],
                    location: this.getCurrentLocation(2)
                }
            }
            _createCommentToken(e) {
                this.currentToken = {
                    type: token_js_1.TokenType.COMMENT,
                    data: "",
                    location: this.getCurrentLocation(e)
                }
            }
            _createDoctypeToken(e) {
                this.currentToken = {
                    type: token_js_1.TokenType.DOCTYPE,
                    name: e,
                    forceQuirks: !1,
                    publicId: null,
                    systemId: null,
                    location: this.currentLocation
                }
            }
            _createCharacterToken(e, t) {
                this.currentCharacterToken = {
                    type: e,
                    chars: t,
                    location: this.currentLocation
                }
            }
            _createAttr(e) {
                this.currentAttr = {
                    name: e,
                    value: ""
                }, this.currentLocation = this.getCurrentLocation(0)
            }
            _leaveAttrName() {
                var e, t;
                const _ = this.currentToken;
                if (null === (0, token_js_1.getTokenAttr)(_, this.currentAttr.name)) {
                    if (_.attrs.push(this.currentAttr), _.location && this.currentLocation) {
                        (null !== (e = (t = _.location).attrs) && void 0 !== e ? e : t.attrs = Object.create(null))[this.currentAttr.name] = this.currentLocation, this._leaveAttrValue()
                    }
                } else this._err(error_codes_js_1.ERR.duplicateAttribute)
            }
            _leaveAttrValue() {
                this.currentLocation && (this.currentLocation.endLine = this.preprocessor.line, this.currentLocation.endCol = this.preprocessor.col, this.currentLocation.endOffset = this.preprocessor.offset)
            }
            prepareToken(e) {
                this._emitCurrentCharacterToken(e.location), this.currentToken = null, e.location && (e.location.endLine = this.preprocessor.line, e.location.endCol = this.preprocessor.col + 1, e.location.endOffset = this.preprocessor.offset + 1), this.currentLocation = this.getCurrentLocation(-1)
            }
            emitCurrentTagToken() {
                const e = this.currentToken;
                this.prepareToken(e), e.tagID = (0, html_js_1.getTagID)(e.tagName), e.type === token_js_1.TokenType.START_TAG ? (this.lastStartTagName = e.tagName, this.handler.onStartTag(e)) : (e.attrs.length > 0 && this._err(error_codes_js_1.ERR.endTagWithAttributes), e.selfClosing && this._err(error_codes_js_1.ERR.endTagWithTrailingSolidus), this.handler.onEndTag(e)), this.preprocessor.dropParsedChunk()
            }
            emitCurrentComment(e) {
                this.prepareToken(e), this.handler.onComment(e), this.preprocessor.dropParsedChunk()
            }
            emitCurrentDoctype(e) {
                this.prepareToken(e), this.handler.onDoctype(e), this.preprocessor.dropParsedChunk()
            }
            _emitCurrentCharacterToken(e) {
                if (this.currentCharacterToken) {
                    switch (e && this.currentCharacterToken.location && (this.currentCharacterToken.location.endLine = e.startLine, this.currentCharacterToken.location.endCol = e.startCol, this.currentCharacterToken.location.endOffset = e.startOffset), this.currentCharacterToken.type) {
                        case token_js_1.TokenType.CHARACTER:
                            this.handler.onCharacter(this.currentCharacterToken);
                            break;
                        case token_js_1.TokenType.NULL_CHARACTER:
                            this.handler.onNullCharacter(this.currentCharacterToken);
                            break;
                        case token_js_1.TokenType.WHITESPACE_CHARACTER:
                            this.handler.onWhitespaceCharacter(this.currentCharacterToken)
                    }
                    this.currentCharacterToken = null
                }
            }
            _emitEOFToken() {
                const e = this.getCurrentLocation(0);
                e && (e.endLine = e.startLine, e.endCol = e.startCol, e.endOffset = e.startOffset), this._emitCurrentCharacterToken(e), this.handler.onEof({
                    type: token_js_1.TokenType.EOF,
                    location: e
                }), this.active = !1
            }
            _appendCharToCurrentCharacterToken(e, t) {
                if (this.currentCharacterToken) {
                    if (this.currentCharacterToken.type === e) return void (this.currentCharacterToken.chars += t);
                    this.currentLocation = this.getCurrentLocation(0), this._emitCurrentCharacterToken(this.currentLocation), this.preprocessor.dropParsedChunk()
                }
                this._createCharacterToken(e, t)
            }
            _emitCodePoint(e) {
                const t = isWhitespace(e) ? token_js_1.TokenType.WHITESPACE_CHARACTER : e === unicode_js_1.CODE_POINTS.NULL ? token_js_1.TokenType.NULL_CHARACTER : token_js_1.TokenType.CHARACTER;
                this._appendCharToCurrentCharacterToken(t, String.fromCodePoint(e))
            }
            _emitChars(e) {
                this._appendCharToCurrentCharacterToken(token_js_1.TokenType.CHARACTER, e)
            }
            _matchNamedCharacterReference(e) {
                let t = null,
                    _ = 0,
                    s = !1;
                for (let a = 0, r = decode_js_1.htmlDecodeTree[0]; a >= 0 && !((a = (0, decode_js_1.determineBranch)(decode_js_1.htmlDecodeTree, r, a + 1, e)) < 0); e = this._consume()) {
                    _ += 1;
                    const i = (r = decode_js_1.htmlDecodeTree[a]) & decode_js_1.BinTrieFlags.VALUE_LENGTH;
                    if (i) {
                        const r = (i >> 14) - 1;
                        if (e !== unicode_js_1.CODE_POINTS.SEMICOLON && this._isCharacterReferenceInAttribute() && isEntityInAttributeInvalidEnd(this.preprocessor.peek(1)) ? (t = [unicode_js_1.CODE_POINTS.AMPERSAND], a += r) : (t = 0 === r ? [decode_js_1.htmlDecodeTree[a] & ~decode_js_1.BinTrieFlags.VALUE_LENGTH] : 1 === r ? [decode_js_1.htmlDecodeTree[++a]] : [decode_js_1.htmlDecodeTree[++a], decode_js_1.htmlDecodeTree[++a]], _ = 0, s = e !== unicode_js_1.CODE_POINTS.SEMICOLON), 0 === r) {
                            this._consume();
                            break
                        }
                    }
                }
                return this._unconsume(_), s && !this.preprocessor.endOfChunkHit && this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference), this._unconsume(1), t
            }
            _isCharacterReferenceInAttribute() {
                return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED
            }
            _flushCodePointConsumedAsCharacterReference(e) {
                this._isCharacterReferenceInAttribute() ? this.currentAttr.value += String.fromCodePoint(e) : this._emitCodePoint(e)
            }
            _callState(e) {
                switch (this.state) {
                    case State.DATA:
                        this._stateData(e);
                        break;
                    case State.RCDATA:
                        this._stateRcdata(e);
                        break;
                    case State.RAWTEXT:
                        this._stateRawtext(e);
                        break;
                    case State.SCRIPT_DATA:
                        this._stateScriptData(e);
                        break;
                    case State.PLAINTEXT:
                        this._statePlaintext(e);
                        break;
                    case State.TAG_OPEN:
                        this._stateTagOpen(e);
                        break;
                    case State.END_TAG_OPEN:
                        this._stateEndTagOpen(e);
                        break;
                    case State.TAG_NAME:
                        this._stateTagName(e);
                        break;
                    case State.RCDATA_LESS_THAN_SIGN:
                        this._stateRcdataLessThanSign(e);
                        break;
                    case State.RCDATA_END_TAG_OPEN:
                        this._stateRcdataEndTagOpen(e);
                        break;
                    case State.RCDATA_END_TAG_NAME:
                        this._stateRcdataEndTagName(e);
                        break;
                    case State.RAWTEXT_LESS_THAN_SIGN:
                        this._stateRawtextLessThanSign(e);
                        break;
                    case State.RAWTEXT_END_TAG_OPEN:
                        this._stateRawtextEndTagOpen(e);
                        break;
                    case State.RAWTEXT_END_TAG_NAME:
                        this._stateRawtextEndTagName(e);
                        break;
                    case State.SCRIPT_DATA_LESS_THAN_SIGN:
                        this._stateScriptDataLessThanSign(e);
                        break;
                    case State.SCRIPT_DATA_END_TAG_OPEN:
                        this._stateScriptDataEndTagOpen(e);
                        break;
                    case State.SCRIPT_DATA_END_TAG_NAME:
                        this._stateScriptDataEndTagName(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPE_START:
                        this._stateScriptDataEscapeStart(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPE_START_DASH:
                        this._stateScriptDataEscapeStartDash(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPED:
                        this._stateScriptDataEscaped(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPED_DASH:
                        this._stateScriptDataEscapedDash(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPED_DASH_DASH:
                        this._stateScriptDataEscapedDashDash(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:
                        this._stateScriptDataEscapedLessThanSign(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:
                        this._stateScriptDataEscapedEndTagOpen(e);
                        break;
                    case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:
                        this._stateScriptDataEscapedEndTagName(e);
                        break;
                    case State.SCRIPT_DATA_DOUBLE_ESCAPE_START:
                        this._stateScriptDataDoubleEscapeStart(e);
                        break;
                    case State.SCRIPT_DATA_DOUBLE_ESCAPED:
                        this._stateScriptDataDoubleEscaped(e);
                        break;
                    case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:
                        this._stateScriptDataDoubleEscapedDash(e);
                        break;
                    case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:
                        this._stateScriptDataDoubleEscapedDashDash(e);
                        break;
                    case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:
                        this._stateScriptDataDoubleEscapedLessThanSign(e);
                        break;
                    case State.SCRIPT_DATA_DOUBLE_ESCAPE_END:
                        this._stateScriptDataDoubleEscapeEnd(e);
                        break;
                    case State.BEFORE_ATTRIBUTE_NAME:
                        this._stateBeforeAttributeName(e);
                        break;
                    case State.ATTRIBUTE_NAME:
                        this._stateAttributeName(e);
                        break;
                    case State.AFTER_ATTRIBUTE_NAME:
                        this._stateAfterAttributeName(e);
                        break;
                    case State.BEFORE_ATTRIBUTE_VALUE:
                        this._stateBeforeAttributeValue(e);
                        break;
                    case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:
                        this._stateAttributeValueDoubleQuoted(e);
                        break;
                    case State.ATTRIBUTE_VALUE_SINGLE_QUOTED:
                        this._stateAttributeValueSingleQuoted(e);
                        break;
                    case State.ATTRIBUTE_VALUE_UNQUOTED:
                        this._stateAttributeValueUnquoted(e);
                        break;
                    case State.AFTER_ATTRIBUTE_VALUE_QUOTED:
                        this._stateAfterAttributeValueQuoted(e);
                        break;
                    case State.SELF_CLOSING_START_TAG:
                        this._stateSelfClosingStartTag(e);
                        break;
                    case State.BOGUS_COMMENT:
                        this._stateBogusComment(e);
                        break;
                    case State.MARKUP_DECLARATION_OPEN:
                        this._stateMarkupDeclarationOpen(e);
                        break;
                    case State.COMMENT_START:
                        this._stateCommentStart(e);
                        break;
                    case State.COMMENT_START_DASH:
                        this._stateCommentStartDash(e);
                        break;
                    case State.COMMENT:
                        this._stateComment(e);
                        break;
                    case State.COMMENT_LESS_THAN_SIGN:
                        this._stateCommentLessThanSign(e);
                        break;
                    case State.COMMENT_LESS_THAN_SIGN_BANG:
                        this._stateCommentLessThanSignBang(e);
                        break;
                    case State.COMMENT_LESS_THAN_SIGN_BANG_DASH:
                        this._stateCommentLessThanSignBangDash(e);
                        break;
                    case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:
                        this._stateCommentLessThanSignBangDashDash(e);
                        break;
                    case State.COMMENT_END_DASH:
                        this._stateCommentEndDash(e);
                        break;
                    case State.COMMENT_END:
                        this._stateCommentEnd(e);
                        break;
                    case State.COMMENT_END_BANG:
                        this._stateCommentEndBang(e);
                        break;
                    case State.DOCTYPE:
                        this._stateDoctype(e);
                        break;
                    case State.BEFORE_DOCTYPE_NAME:
                        this._stateBeforeDoctypeName(e);
                        break;
                    case State.DOCTYPE_NAME:
                        this._stateDoctypeName(e);
                        break;
                    case State.AFTER_DOCTYPE_NAME:
                        this._stateAfterDoctypeName(e);
                        break;
                    case State.AFTER_DOCTYPE_PUBLIC_KEYWORD:
                        this._stateAfterDoctypePublicKeyword(e);
                        break;
                    case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:
                        this._stateBeforeDoctypePublicIdentifier(e);
                        break;
                    case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:
                        this._stateDoctypePublicIdentifierDoubleQuoted(e);
                        break;
                    case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:
                        this._stateDoctypePublicIdentifierSingleQuoted(e);
                        break;
                    case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:
                        this._stateAfterDoctypePublicIdentifier(e);
                        break;
                    case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:
                        this._stateBetweenDoctypePublicAndSystemIdentifiers(e);
                        break;
                    case State.AFTER_DOCTYPE_SYSTEM_KEYWORD:
                        this._stateAfterDoctypeSystemKeyword(e);
                        break;
                    case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:
                        this._stateBeforeDoctypeSystemIdentifier(e);
                        break;
                    case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:
                        this._stateDoctypeSystemIdentifierDoubleQuoted(e);
                        break;
                    case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:
                        this._stateDoctypeSystemIdentifierSingleQuoted(e);
                        break;
                    case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:
                        this._stateAfterDoctypeSystemIdentifier(e);
                        break;
                    case State.BOGUS_DOCTYPE:
                        this._stateBogusDoctype(e);
                        break;
                    case State.CDATA_SECTION:
                        this._stateCdataSection(e);
                        break;
                    case State.CDATA_SECTION_BRACKET:
                        this._stateCdataSectionBracket(e);
                        break;
                    case State.CDATA_SECTION_END:
                        this._stateCdataSectionEnd(e);
                        break;
                    case State.CHARACTER_REFERENCE:
                        this._stateCharacterReference(e);
                        break;
                    case State.NAMED_CHARACTER_REFERENCE:
                        this._stateNamedCharacterReference(e);
                        break;
                    case State.AMBIGUOUS_AMPERSAND:
                        this._stateAmbiguousAmpersand(e);
                        break;
                    case State.NUMERIC_CHARACTER_REFERENCE:
                        this._stateNumericCharacterReference(e);
                        break;
                    case State.HEXADEMICAL_CHARACTER_REFERENCE_START:
                        this._stateHexademicalCharacterReferenceStart(e);
                        break;
                    case State.HEXADEMICAL_CHARACTER_REFERENCE:
                        this._stateHexademicalCharacterReference(e);
                        break;
                    case State.DECIMAL_CHARACTER_REFERENCE:
                        this._stateDecimalCharacterReference(e);
                        break;
                    case State.NUMERIC_CHARACTER_REFERENCE_END:
                        this._stateNumericCharacterReferenceEnd(e);
                        break;
                    default:
                        throw new Error("Unknown state")
                }
            }
            _stateData(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.TAG_OPEN;
                        break;
                    case unicode_js_1.CODE_POINTS.AMPERSAND:
                        this.returnState = State.DATA, this.state = State.CHARACTER_REFERENCE;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitCodePoint(e);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateRcdata(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.AMPERSAND:
                        this.returnState = State.RCDATA, this.state = State.CHARACTER_REFERENCE;
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.RCDATA_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateRawtext(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.RAWTEXT_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateScriptData(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _statePlaintext(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateTagOpen(e) {
                if (isAsciiLetter(e)) this._createStartTagToken(), this.state = State.TAG_NAME, this._stateTagName(e);
                else switch (e) {
                    case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:
                        this.state = State.MARKUP_DECLARATION_OPEN;
                        break;
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                        this.state = State.END_TAG_OPEN;
                        break;
                    case unicode_js_1.CODE_POINTS.QUESTION_MARK:
                        this._err(error_codes_js_1.ERR.unexpectedQuestionMarkInsteadOfTagName), this._createCommentToken(1), this.state = State.BOGUS_COMMENT, this._stateBogusComment(e);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofBeforeTagName), this._emitChars("<"), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.invalidFirstCharacterOfTagName), this._emitChars("<"), this.state = State.DATA, this._stateData(e)
                }
            }
            _stateEndTagOpen(e) {
                if (isAsciiLetter(e)) this._createEndTagToken(), this.state = State.TAG_NAME, this._stateTagName(e);
                else switch (e) {
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.missingEndTagName), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofBeforeTagName), this._emitChars("</"), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.invalidFirstCharacterOfTagName), this._createCommentToken(2), this.state = State.BOGUS_COMMENT, this._stateBogusComment(e)
                }
            }
            _stateTagName(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this.state = State.BEFORE_ATTRIBUTE_NAME;
                        break;
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                        this.state = State.SELF_CLOSING_START_TAG;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentTagToken();
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.tagName += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        t.tagName += String.fromCodePoint(isAsciiUpper(e) ? toAsciiLower(e) : e)
                }
            }
            _stateRcdataLessThanSign(e) {
                e === unicode_js_1.CODE_POINTS.SOLIDUS ? this.state = State.RCDATA_END_TAG_OPEN : (this._emitChars("<"), this.state = State.RCDATA, this._stateRcdata(e))
            }
            _stateRcdataEndTagOpen(e) {
                isAsciiLetter(e) ? (this.state = State.RCDATA_END_TAG_NAME, this._stateRcdataEndTagName(e)) : (this._emitChars("</"), this.state = State.RCDATA, this._stateRcdata(e))
            }
            handleSpecialEndTag(e) {
                if (!this.preprocessor.startsWith(this.lastStartTagName, !1)) return !this._ensureHibernation();
                switch (this._createEndTagToken(), this.currentToken.tagName = this.lastStartTagName, this.preprocessor.peek(this.lastStartTagName.length)) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        return this._advanceBy(this.lastStartTagName.length), this.state = State.BEFORE_ATTRIBUTE_NAME, !1;
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                        return this._advanceBy(this.lastStartTagName.length), this.state = State.SELF_CLOSING_START_TAG, !1;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        return this._advanceBy(this.lastStartTagName.length), this.emitCurrentTagToken(), this.state = State.DATA, !1;
                    default:
                        return !this._ensureHibernation()
                }
            }
            _stateRcdataEndTagName(e) {
                this.handleSpecialEndTag(e) && (this._emitChars("</"), this.state = State.RCDATA, this._stateRcdata(e))
            }
            _stateRawtextLessThanSign(e) {
                e === unicode_js_1.CODE_POINTS.SOLIDUS ? this.state = State.RAWTEXT_END_TAG_OPEN : (this._emitChars("<"), this.state = State.RAWTEXT, this._stateRawtext(e))
            }
            _stateRawtextEndTagOpen(e) {
                isAsciiLetter(e) ? (this.state = State.RAWTEXT_END_TAG_NAME, this._stateRawtextEndTagName(e)) : (this._emitChars("</"), this.state = State.RAWTEXT, this._stateRawtext(e))
            }
            _stateRawtextEndTagName(e) {
                this.handleSpecialEndTag(e) && (this._emitChars("</"), this.state = State.RAWTEXT, this._stateRawtext(e))
            }
            _stateScriptDataLessThanSign(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                        this.state = State.SCRIPT_DATA_END_TAG_OPEN;
                        break;
                    case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:
                        this.state = State.SCRIPT_DATA_ESCAPE_START, this._emitChars("<!");
                        break;
                    default:
                        this._emitChars("<"), this.state = State.SCRIPT_DATA, this._stateScriptData(e)
                }
            }
            _stateScriptDataEndTagOpen(e) {
                isAsciiLetter(e) ? (this.state = State.SCRIPT_DATA_END_TAG_NAME, this._stateScriptDataEndTagName(e)) : (this._emitChars("</"), this.state = State.SCRIPT_DATA, this._stateScriptData(e))
            }
            _stateScriptDataEndTagName(e) {
                this.handleSpecialEndTag(e) && (this._emitChars("</"), this.state = State.SCRIPT_DATA, this._stateScriptData(e))
            }
            _stateScriptDataEscapeStart(e) {
                e === unicode_js_1.CODE_POINTS.HYPHEN_MINUS ? (this.state = State.SCRIPT_DATA_ESCAPE_START_DASH, this._emitChars("-")) : (this.state = State.SCRIPT_DATA, this._stateScriptData(e))
            }
            _stateScriptDataEscapeStartDash(e) {
                e === unicode_js_1.CODE_POINTS.HYPHEN_MINUS ? (this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-")) : (this.state = State.SCRIPT_DATA, this._stateScriptData(e))
            }
            _stateScriptDataEscaped(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.SCRIPT_DATA_ESCAPED_DASH, this._emitChars("-");
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateScriptDataEscapedDash(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH, this._emitChars("-");
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_ESCAPED, this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
                        break;
                    default:
                        this.state = State.SCRIPT_DATA_ESCAPED, this._emitCodePoint(e)
                }
            }
            _stateScriptDataEscapedDashDash(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this._emitChars("-");
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.SCRIPT_DATA, this._emitChars(">");
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_ESCAPED, this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
                        break;
                    default:
                        this.state = State.SCRIPT_DATA_ESCAPED, this._emitCodePoint(e)
                }
            }
            _stateScriptDataEscapedLessThanSign(e) {
                e === unicode_js_1.CODE_POINTS.SOLIDUS ? this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN : isAsciiLetter(e) ? (this._emitChars("<"), this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START, this._stateScriptDataDoubleEscapeStart(e)) : (this._emitChars("<"), this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e))
            }
            _stateScriptDataEscapedEndTagOpen(e) {
                isAsciiLetter(e) ? (this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME, this._stateScriptDataEscapedEndTagName(e)) : (this._emitChars("</"), this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e))
            }
            _stateScriptDataEscapedEndTagName(e) {
                this.handleSpecialEndTag(e) && (this._emitChars("</"), this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e))
            }
            _stateScriptDataDoubleEscapeStart(e) {
                if (this.preprocessor.startsWith(unicode_js_1.SEQUENCES.SCRIPT, !1) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(unicode_js_1.SEQUENCES.SCRIPT.length))) {
                    this._emitCodePoint(e);
                    for (let e = 0; e < unicode_js_1.SEQUENCES.SCRIPT.length; e++) this._emitCodePoint(this._consume());
                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED
                } else this._ensureHibernation() || (this.state = State.SCRIPT_DATA_ESCAPED, this._stateScriptDataEscaped(e))
            }
            _stateScriptDataDoubleEscaped(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH, this._emitChars("-");
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateScriptDataDoubleEscapedDash(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH, this._emitChars("-");
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
                        break;
                    default:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(e)
                }
            }
            _stateScriptDataDoubleEscapedDashDash(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this._emitChars("-");
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN, this._emitChars("<");
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.SCRIPT_DATA, this._emitChars(">");
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitChars(unicode_js_1.REPLACEMENT_CHARACTER);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInScriptHtmlCommentLikeText), this._emitEOFToken();
                        break;
                    default:
                        this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._emitCodePoint(e)
                }
            }
            _stateScriptDataDoubleEscapedLessThanSign(e) {
                e === unicode_js_1.CODE_POINTS.SOLIDUS ? (this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END, this._emitChars("/")) : (this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(e))
            }
            _stateScriptDataDoubleEscapeEnd(e) {
                if (this.preprocessor.startsWith(unicode_js_1.SEQUENCES.SCRIPT, !1) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(unicode_js_1.SEQUENCES.SCRIPT.length))) {
                    this._emitCodePoint(e);
                    for (let e = 0; e < unicode_js_1.SEQUENCES.SCRIPT.length; e++) this._emitCodePoint(this._consume());
                    this.state = State.SCRIPT_DATA_ESCAPED
                } else this._ensureHibernation() || (this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED, this._stateScriptDataDoubleEscaped(e))
            }
            _stateBeforeAttributeName(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                    case unicode_js_1.CODE_POINTS.EOF:
                        this.state = State.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(e);
                        break;
                    case unicode_js_1.CODE_POINTS.EQUALS_SIGN:
                        this._err(error_codes_js_1.ERR.unexpectedEqualsSignBeforeAttributeName), this._createAttr("="), this.state = State.ATTRIBUTE_NAME;
                        break;
                    default:
                        this._createAttr(""), this.state = State.ATTRIBUTE_NAME, this._stateAttributeName(e)
                }
            }
            _stateAttributeName(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._leaveAttrName(), this.state = State.AFTER_ATTRIBUTE_NAME, this._stateAfterAttributeName(e);
                        break;
                    case unicode_js_1.CODE_POINTS.EQUALS_SIGN:
                        this._leaveAttrName(), this.state = State.BEFORE_ATTRIBUTE_VALUE;
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.unexpectedCharacterInAttributeName), this.currentAttr.name += String.fromCodePoint(e);
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.currentAttr.name += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    default:
                        this.currentAttr.name += String.fromCodePoint(isAsciiUpper(e) ? toAsciiLower(e) : e)
                }
            }
            _stateAfterAttributeName(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                        this.state = State.SELF_CLOSING_START_TAG;
                        break;
                    case unicode_js_1.CODE_POINTS.EQUALS_SIGN:
                        this.state = State.BEFORE_ATTRIBUTE_VALUE;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentTagToken();
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        this._createAttr(""), this.state = State.ATTRIBUTE_NAME, this._stateAttributeName(e)
                }
            }
            _stateBeforeAttributeValue(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.missingAttributeValue), this.state = State.DATA, this.emitCurrentTagToken();
                        break;
                    default:
                        this.state = State.ATTRIBUTE_VALUE_UNQUOTED, this._stateAttributeValueUnquoted(e)
                }
            }
            _stateAttributeValueDoubleQuoted(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.AMPERSAND:
                        this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED, this.state = State.CHARACTER_REFERENCE;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.currentAttr.value += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        this.currentAttr.value += String.fromCodePoint(e)
                }
            }
            _stateAttributeValueSingleQuoted(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.AMPERSAND:
                        this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED, this.state = State.CHARACTER_REFERENCE;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.currentAttr.value += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        this.currentAttr.value += String.fromCodePoint(e)
                }
            }
            _stateAttributeValueUnquoted(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this._leaveAttrValue(), this.state = State.BEFORE_ATTRIBUTE_NAME;
                        break;
                    case unicode_js_1.CODE_POINTS.AMPERSAND:
                        this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED, this.state = State.CHARACTER_REFERENCE;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._leaveAttrValue(), this.state = State.DATA, this.emitCurrentTagToken();
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this.currentAttr.value += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                    case unicode_js_1.CODE_POINTS.EQUALS_SIGN:
                    case unicode_js_1.CODE_POINTS.GRAVE_ACCENT:
                        this._err(error_codes_js_1.ERR.unexpectedCharacterInUnquotedAttributeValue), this.currentAttr.value += String.fromCodePoint(e);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        this.currentAttr.value += String.fromCodePoint(e)
                }
            }
            _stateAfterAttributeValueQuoted(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this._leaveAttrValue(), this.state = State.BEFORE_ATTRIBUTE_NAME;
                        break;
                    case unicode_js_1.CODE_POINTS.SOLIDUS:
                        this._leaveAttrValue(), this.state = State.SELF_CLOSING_START_TAG;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._leaveAttrValue(), this.state = State.DATA, this.emitCurrentTagToken();
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingWhitespaceBetweenAttributes), this.state = State.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(e)
                }
            }
            _stateSelfClosingStartTag(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.currentToken.selfClosing = !0, this.state = State.DATA, this.emitCurrentTagToken();
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInTag), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.unexpectedSolidusInTag), this.state = State.BEFORE_ATTRIBUTE_NAME, this._stateBeforeAttributeName(e)
                }
            }
            _stateBogusComment(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentComment(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this.emitCurrentComment(t), this._emitEOFToken();
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.data += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    default:
                        t.data += String.fromCodePoint(e)
                }
            }
            _stateMarkupDeclarationOpen(e) {
                this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.DASH_DASH, !0) ? (this._createCommentToken(unicode_js_1.SEQUENCES.DASH_DASH.length + 1), this.state = State.COMMENT_START) : this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.DOCTYPE, !1) ? (this.currentLocation = this.getCurrentLocation(unicode_js_1.SEQUENCES.DOCTYPE.length + 1), this.state = State.DOCTYPE) : this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.CDATA_START, !0) ? this.inForeignNode ? this.state = State.CDATA_SECTION : (this._err(error_codes_js_1.ERR.cdataInHtmlContent), this._createCommentToken(unicode_js_1.SEQUENCES.CDATA_START.length + 1), this.currentToken.data = "[CDATA[", this.state = State.BOGUS_COMMENT) : this._ensureHibernation() || (this._err(error_codes_js_1.ERR.incorrectlyOpenedComment), this._createCommentToken(2), this.state = State.BOGUS_COMMENT, this._stateBogusComment(e))
            }
            _stateCommentStart(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.COMMENT_START_DASH;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {
                        this._err(error_codes_js_1.ERR.abruptClosingOfEmptyComment), this.state = State.DATA;
                        const e = this.currentToken;
                        this.emitCurrentComment(e);
                        break
                    }
                    default:
                        this.state = State.COMMENT, this._stateComment(e)
                }
            }
            _stateCommentStartDash(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.COMMENT_END;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.abruptClosingOfEmptyComment), this.state = State.DATA, this.emitCurrentComment(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInComment), this.emitCurrentComment(t), this._emitEOFToken();
                        break;
                    default:
                        t.data += "-", this.state = State.COMMENT, this._stateComment(e)
                }
            }
            _stateComment(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.COMMENT_END_DASH;
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        t.data += "<", this.state = State.COMMENT_LESS_THAN_SIGN;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.data += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInComment), this.emitCurrentComment(t), this._emitEOFToken();
                        break;
                    default:
                        t.data += String.fromCodePoint(e)
                }
            }
            _stateCommentLessThanSign(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:
                        t.data += "!", this.state = State.COMMENT_LESS_THAN_SIGN_BANG;
                        break;
                    case unicode_js_1.CODE_POINTS.LESS_THAN_SIGN:
                        t.data += "<";
                        break;
                    default:
                        this.state = State.COMMENT, this._stateComment(e)
                }
            }
            _stateCommentLessThanSignBang(e) {
                e === unicode_js_1.CODE_POINTS.HYPHEN_MINUS ? this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH : (this.state = State.COMMENT, this._stateComment(e))
            }
            _stateCommentLessThanSignBangDash(e) {
                e === unicode_js_1.CODE_POINTS.HYPHEN_MINUS ? this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH : (this.state = State.COMMENT_END_DASH, this._stateCommentEndDash(e))
            }
            _stateCommentLessThanSignBangDashDash(e) {
                e !== unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN && e !== unicode_js_1.CODE_POINTS.EOF && this._err(error_codes_js_1.ERR.nestedComment), this.state = State.COMMENT_END, this._stateCommentEnd(e)
            }
            _stateCommentEndDash(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        this.state = State.COMMENT_END;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInComment), this.emitCurrentComment(t), this._emitEOFToken();
                        break;
                    default:
                        t.data += "-", this.state = State.COMMENT, this._stateComment(e)
                }
            }
            _stateCommentEnd(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentComment(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EXCLAMATION_MARK:
                        this.state = State.COMMENT_END_BANG;
                        break;
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        t.data += "-";
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInComment), this.emitCurrentComment(t), this._emitEOFToken();
                        break;
                    default:
                        t.data += "--", this.state = State.COMMENT, this._stateComment(e)
                }
            }
            _stateCommentEndBang(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.HYPHEN_MINUS:
                        t.data += "--!", this.state = State.COMMENT_END_DASH;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.incorrectlyClosedComment), this.state = State.DATA, this.emitCurrentComment(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInComment), this.emitCurrentComment(t), this._emitEOFToken();
                        break;
                    default:
                        t.data += "--!", this.state = State.COMMENT, this._stateComment(e)
                }
            }
            _stateDoctype(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this.state = State.BEFORE_DOCTYPE_NAME;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(e);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF: {
                        this._err(error_codes_js_1.ERR.eofInDoctype), this._createDoctypeToken(null);
                        const e = this.currentToken;
                        e.forceQuirks = !0, this.emitCurrentDoctype(e), this._emitEOFToken();
                        break
                    }
                    default:
                        this._err(error_codes_js_1.ERR.missingWhitespaceBeforeDoctypeName), this.state = State.BEFORE_DOCTYPE_NAME, this._stateBeforeDoctypeName(e)
                }
            }
            _stateBeforeDoctypeName(e) {
                if (isAsciiUpper(e)) this._createDoctypeToken(String.fromCharCode(toAsciiLower(e))), this.state = State.DOCTYPE_NAME;
                else switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), this._createDoctypeToken(unicode_js_1.REPLACEMENT_CHARACTER), this.state = State.DOCTYPE_NAME;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN: {
                        this._err(error_codes_js_1.ERR.missingDoctypeName), this._createDoctypeToken(null);
                        const e = this.currentToken;
                        e.forceQuirks = !0, this.emitCurrentDoctype(e), this.state = State.DATA;
                        break
                    }
                    case unicode_js_1.CODE_POINTS.EOF: {
                        this._err(error_codes_js_1.ERR.eofInDoctype), this._createDoctypeToken(null);
                        const e = this.currentToken;
                        e.forceQuirks = !0, this.emitCurrentDoctype(e), this._emitEOFToken();
                        break
                    }
                    default:
                        this._createDoctypeToken(String.fromCodePoint(e)), this.state = State.DOCTYPE_NAME
                }
            }
            _stateDoctypeName(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this.state = State.AFTER_DOCTYPE_NAME;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.name += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        t.name += String.fromCodePoint(isAsciiUpper(e) ? toAsciiLower(e) : e)
                }
            }
            _stateAfterDoctypeName(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.PUBLIC, !1) ? this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD : this._consumeSequenceIfMatch(unicode_js_1.SEQUENCES.SYSTEM, !1) ? this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD : this._ensureHibernation() || (this._err(error_codes_js_1.ERR.invalidCharacterSequenceAfterDoctypeName), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e))
                }
            }
            _stateAfterDoctypePublicKeyword(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypePublicKeyword), t.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypePublicKeyword), t.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.missingDoctypePublicIdentifier), t.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypePublicIdentifier), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateBeforeDoctypePublicIdentifier(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        t.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        t.publicId = "", this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.missingDoctypePublicIdentifier), t.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypePublicIdentifier), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateDoctypePublicIdentifierDoubleQuoted(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.publicId += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.abruptDoctypePublicIdentifier), t.forceQuirks = !0, this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        t.publicId += String.fromCodePoint(e)
                }
            }
            _stateDoctypePublicIdentifierSingleQuoted(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.publicId += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.abruptDoctypePublicIdentifier), t.forceQuirks = !0, this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        t.publicId += String.fromCodePoint(e)
                }
            }
            _stateAfterDoctypePublicIdentifier(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this._err(error_codes_js_1.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this._err(error_codes_js_1.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers), t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateBetweenDoctypePublicAndSystemIdentifiers(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateAfterDoctypeSystemKeyword(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypeSystemKeyword), t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this._err(error_codes_js_1.ERR.missingWhitespaceAfterDoctypeSystemKeyword), t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.missingDoctypeSystemIdentifier), t.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateBeforeDoctypeSystemIdentifier(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        t.systemId = "", this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.missingDoctypeSystemIdentifier), t.forceQuirks = !0, this.state = State.DATA, this.emitCurrentDoctype(t);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.missingQuoteBeforeDoctypeSystemIdentifier), t.forceQuirks = !0, this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateDoctypeSystemIdentifierDoubleQuoted(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.QUOTATION_MARK:
                        this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.systemId += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.abruptDoctypeSystemIdentifier), t.forceQuirks = !0, this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        t.systemId += String.fromCodePoint(e)
                }
            }
            _stateDoctypeSystemIdentifierSingleQuoted(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.APOSTROPHE:
                        this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter), t.systemId += unicode_js_1.REPLACEMENT_CHARACTER;
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this._err(error_codes_js_1.ERR.abruptDoctypeSystemIdentifier), t.forceQuirks = !0, this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        t.systemId += String.fromCodePoint(e)
                }
            }
            _stateAfterDoctypeSystemIdentifier(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.SPACE:
                    case unicode_js_1.CODE_POINTS.LINE_FEED:
                    case unicode_js_1.CODE_POINTS.TABULATION:
                    case unicode_js_1.CODE_POINTS.FORM_FEED:
                        break;
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInDoctype), t.forceQuirks = !0, this.emitCurrentDoctype(t), this._emitEOFToken();
                        break;
                    default:
                        this._err(error_codes_js_1.ERR.unexpectedCharacterAfterDoctypeSystemIdentifier), this.state = State.BOGUS_DOCTYPE, this._stateBogusDoctype(e)
                }
            }
            _stateBogusDoctype(e) {
                const t = this.currentToken;
                switch (e) {
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.emitCurrentDoctype(t), this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.NULL:
                        this._err(error_codes_js_1.ERR.unexpectedNullCharacter);
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this.emitCurrentDoctype(t), this._emitEOFToken()
                }
            }
            _stateCdataSection(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET:
                        this.state = State.CDATA_SECTION_BRACKET;
                        break;
                    case unicode_js_1.CODE_POINTS.EOF:
                        this._err(error_codes_js_1.ERR.eofInCdata), this._emitEOFToken();
                        break;
                    default:
                        this._emitCodePoint(e)
                }
            }
            _stateCdataSectionBracket(e) {
                e === unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET ? this.state = State.CDATA_SECTION_END : (this._emitChars("]"), this.state = State.CDATA_SECTION, this._stateCdataSection(e))
            }
            _stateCdataSectionEnd(e) {
                switch (e) {
                    case unicode_js_1.CODE_POINTS.GREATER_THAN_SIGN:
                        this.state = State.DATA;
                        break;
                    case unicode_js_1.CODE_POINTS.RIGHT_SQUARE_BRACKET:
                        this._emitChars("]");
                        break;
                    default:
                        this._emitChars("]]"), this.state = State.CDATA_SECTION, this._stateCdataSection(e)
                }
            }
            _stateCharacterReference(e) {
                e === unicode_js_1.CODE_POINTS.NUMBER_SIGN ? this.state = State.NUMERIC_CHARACTER_REFERENCE : isAsciiAlphaNumeric(e) ? (this.state = State.NAMED_CHARACTER_REFERENCE, this._stateNamedCharacterReference(e)) : (this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND), this._reconsumeInState(this.returnState, e))
            }
            _stateNamedCharacterReference(e) {
                const t = this._matchNamedCharacterReference(e);
                if (this._ensureHibernation());
                else if (t) {
                    for (let e = 0; e < t.length; e++) this._flushCodePointConsumedAsCharacterReference(t[e]);
                    this.state = this.returnState
                } else this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND), this.state = State.AMBIGUOUS_AMPERSAND
            }
            _stateAmbiguousAmpersand(e) {
                isAsciiAlphaNumeric(e) ? this._flushCodePointConsumedAsCharacterReference(e) : (e === unicode_js_1.CODE_POINTS.SEMICOLON && this._err(error_codes_js_1.ERR.unknownNamedCharacterReference), this._reconsumeInState(this.returnState, e))
            }
            _stateNumericCharacterReference(e) {
                this.charRefCode = 0, e === unicode_js_1.CODE_POINTS.LATIN_SMALL_X || e === unicode_js_1.CODE_POINTS.LATIN_CAPITAL_X ? this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START : isAsciiDigit(e) ? (this.state = State.DECIMAL_CHARACTER_REFERENCE, this._stateDecimalCharacterReference(e)) : (this._err(error_codes_js_1.ERR.absenceOfDigitsInNumericCharacterReference), this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND), this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.NUMBER_SIGN), this._reconsumeInState(this.returnState, e))
            }
            _stateHexademicalCharacterReferenceStart(e) {
                isAsciiHexDigit(e) ? (this.state = State.HEXADEMICAL_CHARACTER_REFERENCE, this._stateHexademicalCharacterReference(e)) : (this._err(error_codes_js_1.ERR.absenceOfDigitsInNumericCharacterReference), this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.AMPERSAND), this._flushCodePointConsumedAsCharacterReference(unicode_js_1.CODE_POINTS.NUMBER_SIGN), this._unconsume(2), this.state = this.returnState)
            }
            _stateHexademicalCharacterReference(e) {
                isAsciiUpperHexDigit(e) ? this.charRefCode = 16 * this.charRefCode + e - 55 : isAsciiLowerHexDigit(e) ? this.charRefCode = 16 * this.charRefCode + e - 87 : isAsciiDigit(e) ? this.charRefCode = 16 * this.charRefCode + e - 48 : e === unicode_js_1.CODE_POINTS.SEMICOLON ? this.state = State.NUMERIC_CHARACTER_REFERENCE_END : (this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference), this.state = State.NUMERIC_CHARACTER_REFERENCE_END, this._stateNumericCharacterReferenceEnd(e))
            }
            _stateDecimalCharacterReference(e) {
                isAsciiDigit(e) ? this.charRefCode = 10 * this.charRefCode + e - 48 : e === unicode_js_1.CODE_POINTS.SEMICOLON ? this.state = State.NUMERIC_CHARACTER_REFERENCE_END : (this._err(error_codes_js_1.ERR.missingSemicolonAfterCharacterReference), this.state = State.NUMERIC_CHARACTER_REFERENCE_END, this._stateNumericCharacterReferenceEnd(e))
            }
            _stateNumericCharacterReferenceEnd(e) {
                if (this.charRefCode === unicode_js_1.CODE_POINTS.NULL) this._err(error_codes_js_1.ERR.nullCharacterReference), this.charRefCode = unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER;
                else if (this.charRefCode > 1114111) this._err(error_codes_js_1.ERR.characterReferenceOutsideUnicodeRange), this.charRefCode = unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER;
                else if ((0, unicode_js_1.isSurrogate)(this.charRefCode)) this._err(error_codes_js_1.ERR.surrogateCharacterReference), this.charRefCode = unicode_js_1.CODE_POINTS.REPLACEMENT_CHARACTER;
                else if ((0, unicode_js_1.isUndefinedCodePoint)(this.charRefCode)) this._err(error_codes_js_1.ERR.noncharacterCharacterReference);
                else if ((0, unicode_js_1.isControlCodePoint)(this.charRefCode) || this.charRefCode === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN) {
                    this._err(error_codes_js_1.ERR.controlCharacterReference);
                    const e = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);
                    void 0 !== e && (this.charRefCode = e)
                }
                this._flushCodePointConsumedAsCharacterReference(this.charRefCode), this._reconsumeInState(this.returnState, e)
            }
        }
        exports.Tokenizer = Tokenizer;
  
    }, {
        "../common/error-codes.js": 65,
        "../common/html.js": 67,
        "../common/token.js": 68,
        "../common/unicode.js": 69,
        "./preprocessor.js": 76,
        "entities/lib/decode.js": 47
    }],
    76: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.Preprocessor = void 0;
        const unicode_js_1 = require("../common/unicode.js"),
            error_codes_js_1 = require("../common/error-codes.js"),
            DEFAULT_BUFFER_WATERLINE = 65536;
        class Preprocessor {
            constructor(t) {
                this.handler = t, this.html = "", this.pos = -1, this.lastGapPos = -2, this.gapStack = [], this.skipNextNewLine = !1, this.lastChunkWritten = !1, this.endOfChunkHit = !1, this.bufferWaterline = DEFAULT_BUFFER_WATERLINE, this.isEol = !1, this.lineStartPos = 0, this.droppedBufferSize = 0, this.line = 1, this.lastErrOffset = -1
            }
            get col() {
                return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos)
            }
            get offset() {
                return this.droppedBufferSize + this.pos
            }
            getError(t) {
                const {
                    line: s,
                    col: i,
                    offset: e
                } = this;
                return {
                    code: t,
                    startLine: s,
                    endLine: s,
                    startCol: i,
                    endCol: i,
                    startOffset: e,
                    endOffset: e
                }
            }
            _err(t) {
                this.handler.onParseError && this.lastErrOffset !== this.offset && (this.lastErrOffset = this.offset, this.handler.onParseError(this.getError(t)))
            }
            _addGap() {
                this.gapStack.push(this.lastGapPos), this.lastGapPos = this.pos
            }
            _processSurrogate(t) {
                if (this.pos !== this.html.length - 1) {
                    const s = this.html.charCodeAt(this.pos + 1);
                    if ((0, unicode_js_1.isSurrogatePair)(s)) return this.pos++, this._addGap(), (0, unicode_js_1.getSurrogatePairCodePoint)(t, s)
                } else if (!this.lastChunkWritten) return this.endOfChunkHit = !0, unicode_js_1.CODE_POINTS.EOF;
                return this._err(error_codes_js_1.ERR.surrogateInInputStream), t
            }
            willDropParsedChunk() {
                return this.pos > this.bufferWaterline
            }
            dropParsedChunk() {
                this.willDropParsedChunk() && (this.html = this.html.substring(this.pos), this.lineStartPos -= this.pos, this.droppedBufferSize += this.pos, this.pos = 0, this.lastGapPos = -2, this.gapStack.length = 0)
            }
            write(t, s) {
                this.html.length > 0 ? this.html += t : this.html = t, this.endOfChunkHit = !1, this.lastChunkWritten = s
            }
            insertHtmlAtCurrentPos(t) {
                this.html = this.html.substring(0, this.pos + 1) + t + this.html.substring(this.pos + 1), this.endOfChunkHit = !1
            }
            startsWith(t, s) {
                if (this.pos + t.length > this.html.length) return this.endOfChunkHit = !this.lastChunkWritten, !1;
                if (s) return this.html.startsWith(t, this.pos);
                for (let s = 0; s < t.length; s++) {
                    if ((32 | this.html.charCodeAt(this.pos + s)) !== t.charCodeAt(s)) return !1
                }
                return !0
            }
            peek(t) {
                const s = this.pos + t;
                if (s >= this.html.length) return this.endOfChunkHit = !this.lastChunkWritten, unicode_js_1.CODE_POINTS.EOF;
                const i = this.html.charCodeAt(s);
                return i === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN ? unicode_js_1.CODE_POINTS.LINE_FEED : i
            }
            advance() {
                if (this.pos++, this.isEol && (this.isEol = !1, this.line++, this.lineStartPos = this.pos), this.pos >= this.html.length) return this.endOfChunkHit = !this.lastChunkWritten, unicode_js_1.CODE_POINTS.EOF;
                let t = this.html.charCodeAt(this.pos);
                if (t === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN) return this.isEol = !0, this.skipNextNewLine = !0, unicode_js_1.CODE_POINTS.LINE_FEED;
                if (t === unicode_js_1.CODE_POINTS.LINE_FEED && (this.isEol = !0, this.skipNextNewLine)) return this.line--, this.skipNextNewLine = !1, this._addGap(), this.advance();
                return this.skipNextNewLine = !1, (0, unicode_js_1.isSurrogate)(t) && (t = this._processSurrogate(t)), null === this.handler.onParseError || t > 31 && t < 127 || t === unicode_js_1.CODE_POINTS.LINE_FEED || t === unicode_js_1.CODE_POINTS.CARRIAGE_RETURN || t > 159 && t < 64976 || this._checkForProblematicCharacters(t), t
            }
            _checkForProblematicCharacters(t) {
                (0, unicode_js_1.isControlCodePoint)(t) ? this._err(error_codes_js_1.ERR.controlCharacterInInputStream) : (0, unicode_js_1.isUndefinedCodePoint)(t) && this._err(error_codes_js_1.ERR.noncharacterInInputStream)
            }
            retreat(t) {
                for (this.pos -= t; this.pos < this.lastGapPos;) this.lastGapPos = this.gapStack.pop(), this.pos--;
                this.isEol = !1
            }
        }
        exports.Preprocessor = Preprocessor;
  
    }, {
        "../common/error-codes.js": 65,
        "../common/unicode.js": 69
    }],
    77: [function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        }), exports.defaultTreeAdapter = void 0;
        const html_js_1 = require("../common/html.js");
  
        function createTextNode(e) {
            return {
                nodeName: "#text",
                value: e,
                parentNode: null
            }
        }
        exports.defaultTreeAdapter = {
            createDocument: () => ({
                nodeName: "#document",
                mode: html_js_1.DOCUMENT_MODE.NO_QUIRKS,
                childNodes: []
            }),
            createDocumentFragment: () => ({
                nodeName: "#document-fragment",
                childNodes: []
            }),
            createElement: (e, t, o) => ({
                nodeName: e,
                tagName: e,
                attrs: o,
                namespaceURI: t,
                childNodes: [],
                parentNode: null
            }),
            createCommentNode: e => ({
                nodeName: "#comment",
                data: e,
                parentNode: null
            }),
            appendChild(e, t) {
                e.childNodes.push(t), t.parentNode = e
            },
            insertBefore(e, t, o) {
                const d = e.childNodes.indexOf(o);
                e.childNodes.splice(d, 0, t), t.parentNode = e
            },
            setTemplateContent(e, t) {
                e.content = t
            },
            getTemplateContent: e => e.content,
            setDocumentType(e, t, o, d) {
                const n = e.childNodes.find(e => "#documentType" === e.nodeName);
                if (n) n.name = t, n.publicId = o, n.systemId = d;
                else {
                    const n = {
                        nodeName: "#documentType",
                        name: t,
                        publicId: o,
                        systemId: d,
                        parentNode: null
                    };
                    exports.defaultTreeAdapter.appendChild(e, n)
                }
            },
            setDocumentMode(e, t) {
                e.mode = t
            },
            getDocumentMode: e => e.mode,
            detachNode(e) {
                if (e.parentNode) {
                    const t = e.parentNode.childNodes.indexOf(e);
                    e.parentNode.childNodes.splice(t, 1), e.parentNode = null
                }
            },
            insertText(e, t) {
                if (e.childNodes.length > 0) {
                    const o = e.childNodes[e.childNodes.length - 1];
                    if (exports.defaultTreeAdapter.isTextNode(o)) return void (o.value += t)
                }
                exports.defaultTreeAdapter.appendChild(e, createTextNode(t))
            },
            insertTextBefore(e, t, o) {
                const d = e.childNodes[e.childNodes.indexOf(o) - 1];
                d && exports.defaultTreeAdapter.isTextNode(d) ? d.value += t : exports.defaultTreeAdapter.insertBefore(e, createTextNode(t), o)
            },
            adoptAttributes(e, t) {
                const o = new Set(e.attrs.map(e => e.name));
                for (let d = 0; d < t.length; d++) o.has(t[d].name) || e.attrs.push(t[d])
            },
            getFirstChild: e => e.childNodes[0],
            getChildNodes: e => e.childNodes,
            getParentNode: e => e.parentNode,
            getAttrList: e => e.attrs,
            getTagName: e => e.tagName,
            getNamespaceURI: e => e.namespaceURI,
            getTextNodeContent: e => e.value,
            getCommentNodeContent: e => e.data,
            getDocumentTypeNodeName: e => e.name,
            getDocumentTypeNodePublicId: e => e.publicId,
            getDocumentTypeNodeSystemId: e => e.systemId,
            isTextNode: e => "#text" === e.nodeName,
            isCommentNode: e => "#comment" === e.nodeName,
            isDocumentTypeNode: e => "#documentType" === e.nodeName,
            isElementNode: e => Object.prototype.hasOwnProperty.call(e, "tagName"),
            setNodeSourceCodeLocation(e, t) {
                e.sourceCodeLocation = t
            },
            getNodeSourceCodeLocation: e => e.sourceCodeLocation,
            updateNodeSourceCodeLocation(e, t) {
                e.sourceCodeLocation = Object.assign(Object.assign({}, e.sourceCodeLocation), t)
            }
        };
  
    }, {
        "../common/html.js": 67
    }],
    78: [function (require, module, exports) {
        "use strict";
        exports.byteLength = byteLength, exports.toByteArray = toByteArray, exports.fromByteArray = fromByteArray;
        for (var lookup = [], revLookup = [], Arr = "undefined" != typeof Uint8Array ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, len = code.length; i < len; ++i) lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
  
        function getLens(o) {
            var r = o.length;
            if (r % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var e = o.indexOf("=");
            return -1 === e && (e = r), [e, e === r ? 0 : 4 - e % 4]
        }
  
        function byteLength(o) {
            var r = getLens(o),
                e = r[0],
                t = r[1];
            return 3 * (e + t) / 4 - t
        }
  
        function _byteLength(o, r, e) {
            return 3 * (r + e) / 4 - e
        }
  
        function toByteArray(o) {
            var r, e, t = getLens(o),
                n = t[0],
                u = t[1],
                p = new Arr(_byteLength(o, n, u)),
                a = 0,
                h = u > 0 ? n - 4 : n;
            for (e = 0; e < h; e += 4) r = revLookup[o.charCodeAt(e)] << 18 | revLookup[o.charCodeAt(e + 1)] << 12 | revLookup[o.charCodeAt(e + 2)] << 6 | revLookup[o.charCodeAt(e + 3)], p[a++] = r >> 16 & 255, p[a++] = r >> 8 & 255, p[a++] = 255 & r;
            return 2 === u && (r = revLookup[o.charCodeAt(e)] << 2 | revLookup[o.charCodeAt(e + 1)] >> 4, p[a++] = 255 & r), 1 === u && (r = revLookup[o.charCodeAt(e)] << 10 | revLookup[o.charCodeAt(e + 1)] << 4 | revLookup[o.charCodeAt(e + 2)] >> 2, p[a++] = r >> 8 & 255, p[a++] = 255 & r), p
        }
  
        function tripletToBase64(o) {
            return lookup[o >> 18 & 63] + lookup[o >> 12 & 63] + lookup[o >> 6 & 63] + lookup[63 & o]
        }
  
        function encodeChunk(o, r, e) {
            for (var t, n = [], u = r; u < e; u += 3) t = (o[u] << 16 & 16711680) + (o[u + 1] << 8 & 65280) + (255 & o[u + 2]), n.push(tripletToBase64(t));
            return n.join("")
        }
  
        function fromByteArray(o) {
            for (var r, e = o.length, t = e % 3, n = [], u = 0, p = e - t; u < p; u += 16383) n.push(encodeChunk(o, u, u + 16383 > p ? p : u + 16383));
            return 1 === t ? (r = o[e - 1], n.push(lookup[r >> 2] + lookup[r << 4 & 63] + "==")) : 2 === t && (r = (o[e - 2] << 8) + o[e - 1], n.push(lookup[r >> 10] + lookup[r >> 4 & 63] + lookup[r << 2 & 63] + "=")), n.join("")
        }
        revLookup["-".charCodeAt(0)] = 62, revLookup["_".charCodeAt(0)] = 63;
  
    }, {}],
    79: [function (require, module, exports) {
        (function (Buffer) {
            (function () {
                "use strict";
                var base64 = require("base64-js"),
                    ieee754 = require("ieee754");
                exports.Buffer = Buffer, exports.SlowBuffer = SlowBuffer, exports.INSPECT_MAX_BYTES = 50;
                var K_MAX_LENGTH = 2147483647;
  
                function typedArraySupport() {
                    try {
                        var e = new Uint8Array(1);
                        return e.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function () {
                                return 42
                            }
                        }, 42 === e.foo()
                    } catch (e) {
                        return !1
                    }
                }
  
                function createBuffer(e) {
                    if (e > K_MAX_LENGTH) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                    var t = new Uint8Array(e);
                    return t.__proto__ = Buffer.prototype, t
                }
  
                function Buffer(e, t, r) {
                    if ("number" == typeof e) {
                        if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                        return allocUnsafe(e)
                    }
                    return from(e, t, r)
                }
  
                function from(e, t, r) {
                    if ("string" == typeof e) return fromString(e, t);
                    if (ArrayBuffer.isView(e)) return fromArrayLike(e);
                    if (null == e) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                    if (isInstance(e, ArrayBuffer) || e && isInstance(e.buffer, ArrayBuffer)) return fromArrayBuffer(e, t, r);
                    if ("number" == typeof e) throw new TypeError('The "value" argument must not be of type number. Received type number');
                    var n = e.valueOf && e.valueOf();
                    if (null != n && n !== e) return Buffer.from(n, t, r);
                    var f = fromObject(e);
                    if (f) return f;
                    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return Buffer.from(e[Symbol.toPrimitive]("string"), t, r);
                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
                }
  
                function assertSize(e) {
                    if ("number" != typeof e) throw new TypeError('"size" argument must be of type number');
                    if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"')
                }
  
                function alloc(e, t, r) {
                    return assertSize(e), e <= 0 ? createBuffer(e) : void 0 !== t ? "string" == typeof r ? createBuffer(e).fill(t, r) : createBuffer(e).fill(t) : createBuffer(e)
                }
  
                function allocUnsafe(e) {
                    return assertSize(e), createBuffer(e < 0 ? 0 : 0 | checked(e))
                }
  
                function fromString(e, t) {
                    if ("string" == typeof t && "" !== t || (t = "utf8"), !Buffer.isEncoding(t)) throw new TypeError("Unknown encoding: " + t);
                    var r = 0 | byteLength(e, t),
                        n = createBuffer(r),
                        f = n.write(e, t);
                    return f !== r && (n = n.slice(0, f)), n
                }
  
                function fromArrayLike(e) {
                    for (var t = e.length < 0 ? 0 : 0 | checked(e.length), r = createBuffer(t), n = 0; n < t; n += 1) r[n] = 255 & e[n];
                    return r
                }
  
                function fromArrayBuffer(e, t, r) {
                    if (t < 0 || e.byteLength < t) throw new RangeError('"offset" is outside of buffer bounds');
                    if (e.byteLength < t + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
                    var n;
                    return (n = void 0 === t && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, t) : new Uint8Array(e, t, r)).__proto__ = Buffer.prototype, n
                }
  
                function fromObject(e) {
                    if (Buffer.isBuffer(e)) {
                        var t = 0 | checked(e.length),
                            r = createBuffer(t);
                        return 0 === r.length ? r : (e.copy(r, 0, 0, t), r)
                    }
                    return void 0 !== e.length ? "number" != typeof e.length || numberIsNaN(e.length) ? createBuffer(0) : fromArrayLike(e) : "Buffer" === e.type && Array.isArray(e.data) ? fromArrayLike(e.data) : void 0
                }
  
                function checked(e) {
                    if (e >= K_MAX_LENGTH) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
                    return 0 | e
                }
  
                function SlowBuffer(e) {
                    return +e != e && (e = 0), Buffer.alloc(+e)
                }
  
                function byteLength(e, t) {
                    if (Buffer.isBuffer(e)) return e.length;
                    if (ArrayBuffer.isView(e) || isInstance(e, ArrayBuffer)) return e.byteLength;
                    if ("string" != typeof e) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                    var r = e.length,
                        n = arguments.length > 2 && !0 === arguments[2];
                    if (!n && 0 === r) return 0;
                    for (var f = !1; ;) switch (t) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return r;
                        case "utf8":
                        case "utf-8":
                            return utf8ToBytes(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * r;
                        case "hex":
                            return r >>> 1;
                        case "base64":
                            return base64ToBytes(e).length;
                        default:
                            if (f) return n ? -1 : utf8ToBytes(e).length;
                            t = ("" + t).toLowerCase(), f = !0
                    }
                }
  
                function slowToString(e, t, r) {
                    var n = !1;
                    if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
                    if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                    if ((r >>>= 0) <= (t >>>= 0)) return "";
                    for (e || (e = "utf8"); ;) switch (e) {
                        case "hex":
                            return hexSlice(this, t, r);
                        case "utf8":
                        case "utf-8":
                            return utf8Slice(this, t, r);
                        case "ascii":
                            return asciiSlice(this, t, r);
                        case "latin1":
                        case "binary":
                            return latin1Slice(this, t, r);
                        case "base64":
                            return base64Slice(this, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return utf16leSlice(this, t, r);
                        default:
                            if (n) throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(), n = !0
                    }
                }
  
                function swap(e, t, r) {
                    var n = e[t];
                    e[t] = e[r], e[r] = n
                }
  
                function bidirectionalIndexOf(e, t, r, n, f) {
                    if (0 === e.length) return -1;
                    if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), numberIsNaN(r = +r) && (r = f ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
                        if (f) return -1;
                        r = e.length - 1
                    } else if (r < 0) {
                        if (!f) return -1;
                        r = 0
                    }
                    if ("string" == typeof t && (t = Buffer.from(t, n)), Buffer.isBuffer(t)) return 0 === t.length ? -1 : arrayIndexOf(e, t, r, n, f);
                    if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? f ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : arrayIndexOf(e, [t], r, n, f);
                    throw new TypeError("val must be string, number or Buffer")
                }
  
                function arrayIndexOf(e, t, r, n, f) {
                    var i, o = 1,
                        u = e.length,
                        s = t.length;
                    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (e.length < 2 || t.length < 2) return -1;
                        o = 2, u /= 2, s /= 2, r /= 2
                    }
  
                    function a(e, t) {
                        return 1 === o ? e[t] : e.readUInt16BE(t * o)
                    }
                    if (f) {
                        var h = -1;
                        for (i = r; i < u; i++)
                            if (a(e, i) === a(t, -1 === h ? 0 : i - h)) {
                                if (-1 === h && (h = i), i - h + 1 === s) return h * o
                            } else - 1 !== h && (i -= i - h), h = -1
                    } else
                        for (r + s > u && (r = u - s), i = r; i >= 0; i--) {
                            for (var c = !0, l = 0; l < s; l++)
                                if (a(e, i + l) !== a(t, l)) {
                                    c = !1;
                                    break
                                } if (c) return i
                        }
                    return -1
                }
  
                function hexWrite(e, t, r, n) {
                    r = Number(r) || 0;
                    var f = e.length - r;
                    n ? (n = Number(n)) > f && (n = f) : n = f;
                    var i = t.length;
                    n > i / 2 && (n = i / 2);
                    for (var o = 0; o < n; ++o) {
                        var u = parseInt(t.substr(2 * o, 2), 16);
                        if (numberIsNaN(u)) return o;
                        e[r + o] = u
                    }
                    return o
                }
  
                function utf8Write(e, t, r, n) {
                    return blitBuffer(utf8ToBytes(t, e.length - r), e, r, n)
                }
  
                function asciiWrite(e, t, r, n) {
                    return blitBuffer(asciiToBytes(t), e, r, n)
                }
  
                function latin1Write(e, t, r, n) {
                    return asciiWrite(e, t, r, n)
                }
  
                function base64Write(e, t, r, n) {
                    return blitBuffer(base64ToBytes(t), e, r, n)
                }
  
                function ucs2Write(e, t, r, n) {
                    return blitBuffer(utf16leToBytes(t, e.length - r), e, r, n)
                }
  
                function base64Slice(e, t, r) {
                    return 0 === t && r === e.length ? base64.fromByteArray(e) : base64.fromByteArray(e.slice(t, r))
                }
  
                function utf8Slice(e, t, r) {
                    r = Math.min(e.length, r);
                    for (var n = [], f = t; f < r;) {
                        var i, o, u, s, a = e[f],
                            h = null,
                            c = a > 239 ? 4 : a > 223 ? 3 : a > 191 ? 2 : 1;
                        if (f + c <= r) switch (c) {
                            case 1:
                                a < 128 && (h = a);
                                break;
                            case 2:
                                128 == (192 & (i = e[f + 1])) && (s = (31 & a) << 6 | 63 & i) > 127 && (h = s);
                                break;
                            case 3:
                                i = e[f + 1], o = e[f + 2], 128 == (192 & i) && 128 == (192 & o) && (s = (15 & a) << 12 | (63 & i) << 6 | 63 & o) > 2047 && (s < 55296 || s > 57343) && (h = s);
                                break;
                            case 4:
                                i = e[f + 1], o = e[f + 2], u = e[f + 3], 128 == (192 & i) && 128 == (192 & o) && 128 == (192 & u) && (s = (15 & a) << 18 | (63 & i) << 12 | (63 & o) << 6 | 63 & u) > 65535 && s < 1114112 && (h = s)
                        }
                        null === h ? (h = 65533, c = 1) : h > 65535 && (h -= 65536, n.push(h >>> 10 & 1023 | 55296), h = 56320 | 1023 & h), n.push(h), f += c
                    }
                    return decodeCodePointsArray(n)
                }
                exports.kMaxLength = K_MAX_LENGTH, Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport(), Buffer.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(Buffer.prototype, "parent", {
                    enumerable: !0,
                    get: function () {
                        if (Buffer.isBuffer(this)) return this.buffer
                    }
                }), Object.defineProperty(Buffer.prototype, "offset", {
                    enumerable: !0,
                    get: function () {
                        if (Buffer.isBuffer(this)) return this.byteOffset
                    }
                }), "undefined" != typeof Symbol && null != Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, {
                    value: null,
                    configurable: !0,
                    enumerable: !1,
                    writable: !1
                }), Buffer.poolSize = 8192, Buffer.from = function (e, t, r) {
                    return from(e, t, r)
                }, Buffer.prototype.__proto__ = Uint8Array.prototype, Buffer.__proto__ = Uint8Array, Buffer.alloc = function (e, t, r) {
                    return alloc(e, t, r)
                }, Buffer.allocUnsafe = function (e) {
                    return allocUnsafe(e)
                }, Buffer.allocUnsafeSlow = function (e) {
                    return allocUnsafe(e)
                }, Buffer.isBuffer = function (e) {
                    return null != e && !0 === e._isBuffer && e !== Buffer.prototype
                }, Buffer.compare = function (e, t) {
                    if (isInstance(e, Uint8Array) && (e = Buffer.from(e, e.offset, e.byteLength)), isInstance(t, Uint8Array) && (t = Buffer.from(t, t.offset, t.byteLength)), !Buffer.isBuffer(e) || !Buffer.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                    if (e === t) return 0;
                    for (var r = e.length, n = t.length, f = 0, i = Math.min(r, n); f < i; ++f)
                        if (e[f] !== t[f]) {
                            r = e[f], n = t[f];
                            break
                        } return r < n ? -1 : n < r ? 1 : 0
                }, Buffer.isEncoding = function (e) {
                    switch (String(e).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1
                    }
                }, Buffer.concat = function (e, t) {
                    if (!Array.isArray(e)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === e.length) return Buffer.alloc(0);
                    var r;
                    if (void 0 === t)
                        for (t = 0, r = 0; r < e.length; ++r) t += e[r].length;
                    var n = Buffer.allocUnsafe(t),
                        f = 0;
                    for (r = 0; r < e.length; ++r) {
                        var i = e[r];
                        if (isInstance(i, Uint8Array) && (i = Buffer.from(i)), !Buffer.isBuffer(i)) throw new TypeError('"list" argument must be an Array of Buffers');
                        i.copy(n, f), f += i.length
                    }
                    return n
                }, Buffer.byteLength = byteLength, Buffer.prototype._isBuffer = !0, Buffer.prototype.swap16 = function () {
                    var e = this.length;
                    if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (var t = 0; t < e; t += 2) swap(this, t, t + 1);
                    return this
                }, Buffer.prototype.swap32 = function () {
                    var e = this.length;
                    if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (var t = 0; t < e; t += 4) swap(this, t, t + 3), swap(this, t + 1, t + 2);
                    return this
                }, Buffer.prototype.swap64 = function () {
                    var e = this.length;
                    if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (var t = 0; t < e; t += 8) swap(this, t, t + 7), swap(this, t + 1, t + 6), swap(this, t + 2, t + 5), swap(this, t + 3, t + 4);
                    return this
                }, Buffer.prototype.toString = function () {
                    var e = this.length;
                    return 0 === e ? "" : 0 === arguments.length ? utf8Slice(this, 0, e) : slowToString.apply(this, arguments)
                }, Buffer.prototype.toLocaleString = Buffer.prototype.toString, Buffer.prototype.equals = function (e) {
                    if (!Buffer.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                    return this === e || 0 === Buffer.compare(this, e)
                }, Buffer.prototype.inspect = function () {
                    var e = "",
                        t = exports.INSPECT_MAX_BYTES;
                    return e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (e += " ... "), "<Buffer " + e + ">"
                }, Buffer.prototype.compare = function (e, t, r, n, f) {
                    if (isInstance(e, Uint8Array) && (e = Buffer.from(e, e.offset, e.byteLength)), !Buffer.isBuffer(e)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                    if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === f && (f = this.length), t < 0 || r > e.length || n < 0 || f > this.length) throw new RangeError("out of range index");
                    if (n >= f && t >= r) return 0;
                    if (n >= f) return -1;
                    if (t >= r) return 1;
                    if (this === e) return 0;
                    for (var i = (f >>>= 0) - (n >>>= 0), o = (r >>>= 0) - (t >>>= 0), u = Math.min(i, o), s = this.slice(n, f), a = e.slice(t, r), h = 0; h < u; ++h)
                        if (s[h] !== a[h]) {
                            i = s[h], o = a[h];
                            break
                        } return i < o ? -1 : o < i ? 1 : 0
                }, Buffer.prototype.includes = function (e, t, r) {
                    return -1 !== this.indexOf(e, t, r)
                }, Buffer.prototype.indexOf = function (e, t, r) {
                    return bidirectionalIndexOf(this, e, t, r, !0)
                }, Buffer.prototype.lastIndexOf = function (e, t, r) {
                    return bidirectionalIndexOf(this, e, t, r, !1)
                }, Buffer.prototype.write = function (e, t, r, n) {
                    if (void 0 === t) n = "utf8", r = this.length, t = 0;
                    else if (void 0 === r && "string" == typeof t) n = t, r = this.length, t = 0;
                    else {
                        if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0)
                    }
                    var f = this.length - t;
                    if ((void 0 === r || r > f) && (r = f), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    n || (n = "utf8");
                    for (var i = !1; ;) switch (n) {
                        case "hex":
                            return hexWrite(this, e, t, r);
                        case "utf8":
                        case "utf-8":
                            return utf8Write(this, e, t, r);
                        case "ascii":
                            return asciiWrite(this, e, t, r);
                        case "latin1":
                        case "binary":
                            return latin1Write(this, e, t, r);
                        case "base64":
                            return base64Write(this, e, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return ucs2Write(this, e, t, r);
                        default:
                            if (i) throw new TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(), i = !0
                    }
                }, Buffer.prototype.toJSON = function () {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    }
                };
                var MAX_ARGUMENTS_LENGTH = 4096;
  
                function decodeCodePointsArray(e) {
                    var t = e.length;
                    if (t <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, e);
                    for (var r = "", n = 0; n < t;) r += String.fromCharCode.apply(String, e.slice(n, n += MAX_ARGUMENTS_LENGTH));
                    return r
                }
  
                function asciiSlice(e, t, r) {
                    var n = "";
                    r = Math.min(e.length, r);
                    for (var f = t; f < r; ++f) n += String.fromCharCode(127 & e[f]);
                    return n
                }
  
                function latin1Slice(e, t, r) {
                    var n = "";
                    r = Math.min(e.length, r);
                    for (var f = t; f < r; ++f) n += String.fromCharCode(e[f]);
                    return n
                }
  
                function hexSlice(e, t, r) {
                    var n = e.length;
                    (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
                    for (var f = "", i = t; i < r; ++i) f += toHex(e[i]);
                    return f
                }
  
                function utf16leSlice(e, t, r) {
                    for (var n = e.slice(t, r), f = "", i = 0; i < n.length; i += 2) f += String.fromCharCode(n[i] + 256 * n[i + 1]);
                    return f
                }
  
                function checkOffset(e, t, r) {
                    if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
                    if (e + t > r) throw new RangeError("Trying to access beyond buffer length")
                }
  
                function checkInt(e, t, r, n, f, i) {
                    if (!Buffer.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (t > f || t < i) throw new RangeError('"value" argument is out of bounds');
                    if (r + n > e.length) throw new RangeError("Index out of range")
                }
  
                function checkIEEE754(e, t, r, n, f, i) {
                    if (r + n > e.length) throw new RangeError("Index out of range");
                    if (r < 0) throw new RangeError("Index out of range")
                }
  
                function writeFloat(e, t, r, n, f) {
                    return t = +t, r >>>= 0, f || checkIEEE754(e, t, r, 4, 3.4028234663852886e38, -3.4028234663852886e38), ieee754.write(e, t, r, n, 23, 4), r + 4
                }
  
                function writeDouble(e, t, r, n, f) {
                    return t = +t, r >>>= 0, f || checkIEEE754(e, t, r, 8, 1.7976931348623157e308, -1.7976931348623157e308), ieee754.write(e, t, r, n, 52, 8), r + 8
                }
                Buffer.prototype.slice = function (e, t) {
                    var r = this.length;
                    (e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e && (t = e);
                    var n = this.subarray(e, t);
                    return n.__proto__ = Buffer.prototype, n
                }, Buffer.prototype.readUIntLE = function (e, t, r) {
                    e >>>= 0, t >>>= 0, r || checkOffset(e, t, this.length);
                    for (var n = this[e], f = 1, i = 0; ++i < t && (f *= 256);) n += this[e + i] * f;
                    return n
                }, Buffer.prototype.readUIntBE = function (e, t, r) {
                    e >>>= 0, t >>>= 0, r || checkOffset(e, t, this.length);
                    for (var n = this[e + --t], f = 1; t > 0 && (f *= 256);) n += this[e + --t] * f;
                    return n
                }, Buffer.prototype.readUInt8 = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 1, this.length), this[e]
                }, Buffer.prototype.readUInt16LE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 2, this.length), this[e] | this[e + 1] << 8
                }, Buffer.prototype.readUInt16BE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 2, this.length), this[e] << 8 | this[e + 1]
                }, Buffer.prototype.readUInt32LE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
                }, Buffer.prototype.readUInt32BE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
                }, Buffer.prototype.readIntLE = function (e, t, r) {
                    e >>>= 0, t >>>= 0, r || checkOffset(e, t, this.length);
                    for (var n = this[e], f = 1, i = 0; ++i < t && (f *= 256);) n += this[e + i] * f;
                    return n >= (f *= 128) && (n -= Math.pow(2, 8 * t)), n
                }, Buffer.prototype.readIntBE = function (e, t, r) {
                    e >>>= 0, t >>>= 0, r || checkOffset(e, t, this.length);
                    for (var n = t, f = 1, i = this[e + --n]; n > 0 && (f *= 256);) i += this[e + --n] * f;
                    return i >= (f *= 128) && (i -= Math.pow(2, 8 * t)), i
                }, Buffer.prototype.readInt8 = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
                }, Buffer.prototype.readInt16LE = function (e, t) {
                    e >>>= 0, t || checkOffset(e, 2, this.length);
                    var r = this[e] | this[e + 1] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }, Buffer.prototype.readInt16BE = function (e, t) {
                    e >>>= 0, t || checkOffset(e, 2, this.length);
                    var r = this[e + 1] | this[e] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }, Buffer.prototype.readInt32LE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
                }, Buffer.prototype.readInt32BE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
                }, Buffer.prototype.readFloatLE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 4, this.length), ieee754.read(this, e, !0, 23, 4)
                }, Buffer.prototype.readFloatBE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 4, this.length), ieee754.read(this, e, !1, 23, 4)
                }, Buffer.prototype.readDoubleLE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 8, this.length), ieee754.read(this, e, !0, 52, 8)
                }, Buffer.prototype.readDoubleBE = function (e, t) {
                    return e >>>= 0, t || checkOffset(e, 8, this.length), ieee754.read(this, e, !1, 52, 8)
                }, Buffer.prototype.writeUIntLE = function (e, t, r, n) {
                    (e = +e, t >>>= 0, r >>>= 0, n) || checkInt(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                    var f = 1,
                        i = 0;
                    for (this[t] = 255 & e; ++i < r && (f *= 256);) this[t + i] = e / f & 255;
                    return t + r
                }, Buffer.prototype.writeUIntBE = function (e, t, r, n) {
                    (e = +e, t >>>= 0, r >>>= 0, n) || checkInt(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                    var f = r - 1,
                        i = 1;
                    for (this[t + f] = 255 & e; --f >= 0 && (i *= 256);) this[t + f] = e / i & 255;
                    return t + r
                }, Buffer.prototype.writeUInt8 = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1
                }, Buffer.prototype.writeUInt16LE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
                }, Buffer.prototype.writeUInt16BE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
                }, Buffer.prototype.writeUInt32LE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4
                }, Buffer.prototype.writeUInt32BE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
                }, Buffer.prototype.writeIntLE = function (e, t, r, n) {
                    if (e = +e, t >>>= 0, !n) {
                        var f = Math.pow(2, 8 * r - 1);
                        checkInt(this, e, t, r, f - 1, -f)
                    }
                    var i = 0,
                        o = 1,
                        u = 0;
                    for (this[t] = 255 & e; ++i < r && (o *= 256);) e < 0 && 0 === u && 0 !== this[t + i - 1] && (u = 1), this[t + i] = (e / o >> 0) - u & 255;
                    return t + r
                }, Buffer.prototype.writeIntBE = function (e, t, r, n) {
                    if (e = +e, t >>>= 0, !n) {
                        var f = Math.pow(2, 8 * r - 1);
                        checkInt(this, e, t, r, f - 1, -f)
                    }
                    var i = r - 1,
                        o = 1,
                        u = 0;
                    for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) e < 0 && 0 === u && 0 !== this[t + i + 1] && (u = 1), this[t + i] = (e / o >> 0) - u & 255;
                    return t + r
                }, Buffer.prototype.writeInt8 = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1
                }, Buffer.prototype.writeInt16LE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
                }, Buffer.prototype.writeInt16BE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
                }, Buffer.prototype.writeInt32LE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4
                }, Buffer.prototype.writeInt32BE = function (e, t, r) {
                    return e = +e, t >>>= 0, r || checkInt(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
                }, Buffer.prototype.writeFloatLE = function (e, t, r) {
                    return writeFloat(this, e, t, !0, r)
                }, Buffer.prototype.writeFloatBE = function (e, t, r) {
                    return writeFloat(this, e, t, !1, r)
                }, Buffer.prototype.writeDoubleLE = function (e, t, r) {
                    return writeDouble(this, e, t, !0, r)
                }, Buffer.prototype.writeDoubleBE = function (e, t, r) {
                    return writeDouble(this, e, t, !1, r)
                }, Buffer.prototype.copy = function (e, t, r, n) {
                    if (!Buffer.isBuffer(e)) throw new TypeError("argument should be a Buffer");
                    if (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r) return 0;
                    if (0 === e.length || 0 === this.length) return 0;
                    if (t < 0) throw new RangeError("targetStart out of bounds");
                    if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                    if (n < 0) throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r);
                    var f = n - r;
                    if (this === e && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(t, r, n);
                    else if (this === e && r < t && t < n)
                        for (var i = f - 1; i >= 0; --i) e[i + t] = this[i + r];
                    else Uint8Array.prototype.set.call(e, this.subarray(r, n), t);
                    return f
                }, Buffer.prototype.fill = function (e, t, r, n) {
                    if ("string" == typeof e) {
                        if ("string" == typeof t ? (n = t, t = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !Buffer.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                        if (1 === e.length) {
                            var f = e.charCodeAt(0);
                            ("utf8" === n && f < 128 || "latin1" === n) && (e = f)
                        }
                    } else "number" == typeof e && (e &= 255);
                    if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
                    if (r <= t) return this;
                    var i;
                    if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), "number" == typeof e)
                        for (i = t; i < r; ++i) this[i] = e;
                    else {
                        var o = Buffer.isBuffer(e) ? e : Buffer.from(e, n),
                            u = o.length;
                        if (0 === u) throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                        for (i = 0; i < r - t; ++i) this[i + t] = o[i % u]
                    }
                    return this
                };
                var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
  
                function base64clean(e) {
                    if ((e = (e = e.split("=")[0]).trim().replace(INVALID_BASE64_RE, "")).length < 2) return "";
                    for (; e.length % 4 != 0;) e += "=";
                    return e
                }
  
                function toHex(e) {
                    return e < 16 ? "0" + e.toString(16) : e.toString(16)
                }
  
                function utf8ToBytes(e, t) {
                    var r;
                    t = t || 1 / 0;
                    for (var n = e.length, f = null, i = [], o = 0; o < n; ++o) {
                        if ((r = e.charCodeAt(o)) > 55295 && r < 57344) {
                            if (!f) {
                                if (r > 56319) {
                                    (t -= 3) > -1 && i.push(239, 191, 189);
                                    continue
                                }
                                if (o + 1 === n) {
                                    (t -= 3) > -1 && i.push(239, 191, 189);
                                    continue
                                }
                                f = r;
                                continue
                            }
                            if (r < 56320) {
                                (t -= 3) > -1 && i.push(239, 191, 189), f = r;
                                continue
                            }
                            r = 65536 + (f - 55296 << 10 | r - 56320)
                        } else f && (t -= 3) > -1 && i.push(239, 191, 189);
                        if (f = null, r < 128) {
                            if ((t -= 1) < 0) break;
                            i.push(r)
                        } else if (r < 2048) {
                            if ((t -= 2) < 0) break;
                            i.push(r >> 6 | 192, 63 & r | 128)
                        } else if (r < 65536) {
                            if ((t -= 3) < 0) break;
                            i.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                        } else {
                            if (!(r < 1114112)) throw new Error("Invalid code point");
                            if ((t -= 4) < 0) break;
                            i.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                        }
                    }
                    return i
                }
  
                function asciiToBytes(e) {
                    for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r));
                    return t
                }
  
                function utf16leToBytes(e, t) {
                    for (var r, n, f, i = [], o = 0; o < e.length && !((t -= 2) < 0); ++o) n = (r = e.charCodeAt(o)) >> 8, f = r % 256, i.push(f), i.push(n);
                    return i
                }
  
                function base64ToBytes(e) {
                    return base64.toByteArray(base64clean(e))
                }
  
                function blitBuffer(e, t, r, n) {
                    for (var f = 0; f < n && !(f + r >= t.length || f >= e.length); ++f) t[f + r] = e[f];
                    return f
                }
  
                function isInstance(e, t) {
                    return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
                }
  
                function numberIsNaN(e) {
                    return e != e
                }
  
            }).call(this)
        }).call(this, require("buffer").Buffer)
    }, {
        "base64-js": 78,
        "buffer": 79,
        "ieee754": 80
    }],
    80: [function (require, module, exports) {
        exports.read = function (a, o, t, r, h) {
            var M, p, w = 8 * h - r - 1,
                f = (1 << w) - 1,
                e = f >> 1,
                i = -7,
                N = t ? h - 1 : 0,
                n = t ? -1 : 1,
                s = a[o + N];
            for (N += n, M = s & (1 << -i) - 1, s >>= -i, i += w; i > 0; M = 256 * M + a[o + N], N += n, i -= 8);
            for (p = M & (1 << -i) - 1, M >>= -i, i += r; i > 0; p = 256 * p + a[o + N], N += n, i -= 8);
            if (0 === M) M = 1 - e;
            else {
                if (M === f) return p ? NaN : 1 / 0 * (s ? -1 : 1);
                p += Math.pow(2, r), M -= e
            }
            return (s ? -1 : 1) * p * Math.pow(2, M - r)
        }, exports.write = function (a, o, t, r, h, M) {
            var p, w, f, e = 8 * M - h - 1,
                i = (1 << e) - 1,
                N = i >> 1,
                n = 23 === h ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                s = r ? 0 : M - 1,
                u = r ? 1 : -1,
                l = o < 0 || 0 === o && 1 / o < 0 ? 1 : 0;
            for (o = Math.abs(o), isNaN(o) || o === 1 / 0 ? (w = isNaN(o) ? 1 : 0, p = i) : (p = Math.floor(Math.log(o) / Math.LN2), o * (f = Math.pow(2, -p)) < 1 && (p--, f *= 2), (o += p + N >= 1 ? n / f : n * Math.pow(2, 1 - N)) * f >= 2 && (p++, f /= 2), p + N >= i ? (w = 0, p = i) : p + N >= 1 ? (w = (o * f - 1) * Math.pow(2, h), p += N) : (w = o * Math.pow(2, N - 1) * Math.pow(2, h), p = 0)); h >= 8; a[t + s] = 255 & w, s += u, w /= 256, h -= 8);
            for (p = p << h | w, e += h; e > 0; a[t + s] = 255 & p, s += u, p /= 256, e -= 8);
            a[t + s - u] |= 128 * l
        };
  
    }, {}]
  }, {}, [1]);